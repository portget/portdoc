{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Port \u00b6 The port application, being a time-series database, offers a flexible design ideal for industrial data collection and processing. With its capabilities, it enables efficient storage and retrieval of timestamped data, facilitating streamlined operations across various industrial sectors. Please see the documentation lincense The Requirements \u00b6 os : windows 7+ / windows server 2003+ memory : minimum 32GB frameworks : .Net Framework 4.5+ Download URL \u00b6 VERSION OS STABLE URL v0.0.1 -BETA Windows x64 No Port.7z v0.0.1 - BETA Repository \u00b6 Create new repository \u00b6 port new [repository-name] Tip The repository name cannot contain special characters. It follows the directory naming rules provided by the operating system. Create add gruop \u00b6 port add [group-name] Repository layout \u00b6 port.toml # The configuration file. .enum # The custom enum file AZone/ # The group directory. sample1.msg # The message file sample2.msg # The message file sample3.msg # The message file BZone/ # The group directory. sample1.msg # The message file sample2.msg # The message file sample3.msg # The message file ... # Other files. Message File \u00b6 message item format like this [key] [datatype] [option...] [key] - unique key in the message group [datatype] - text | num [option] - relation,backup,rule,frame message property list \u00b6 name description relation Real-time synchronization and messaging are handled within the corresponding external library. For more details, please refer to the Relation documentation. backup Changes are saved to the backup database as they occur, ensuring that values are restored upon application restart. and values are not propagated relation messages during program execution. property Can specify a custom property frame Can specify a frame key value to manage subsequent frames by their key values. rule Can specify rules to manage the values of corresponding messages. sample1.msg \u00b6 DevAPowerStatus enum.DeviceAStatus relation:DeviceA.GetStatus frame:HTS.PowerStatus DevAErrorMessage text relation:DeviceA.GetErrorMessage frame:HTS.ErrorMessage DevCTemperature num relation:DeviceC.GetTemperature frame:HTS.Temperature property:{\"MIN\":0,\"MAX\":300} DevCOnOff enum.OnOff relation:DeviceC.OnOff frame:HTS.HeaterOnOff ... Tip message document do not using special characters. Enum File \u00b6 Enums are particularly useful when you have a fixed set of values that a variable can take, such as days of the week, months of the year, or status codes. They help make your code more expressive, self-documenting, and less error-prone because you're working with named constants instead of raw integer values. enum item format like this [key] [item-name:number_key] [item-name:number_key] [key] - unique key in the enum message [item-name] - name by enum-item [property] - unique key in enum value custom.enum \u00b6 TFalse True:0 False:1 FTrue False:0 True:1 OnOff On:0 Off:1 OffOn Off:1 On:1 Commands \u00b6 Repository \u00b6 port push - push project to repository port pull - pull project from repository Tip The application runs based on the values stored in the repository. The push action must precede the application startup. Subsequently, users can perform a pull action at any desired moment to restore the repository. Application \u00b6 port run [repository-name] - run application from repository port kill - terminated current application Tip port application must be start portlib services application Message \u00b6 port set [group-key] [message-key] [set-value] - set the message value to current repository port set groupA sayHelloMessage1 Hello? [set-ok] port get [group-key] [message-key] - get the message value to current repository port get groupA sayHelloMessage1 [Hello?] View \u00b6 port view --new [view-name] --group [group-name] port view --new groupA --group groupA [CREATED][VIEW] ... port view [view-name] --download [file-name].[csv|json|xml] [-time|time~time] port view groupA --download C:/Downloads/gruopA.csv [DOWNLOAD][VIEW] ... port view [view-name] [time|time~time] port view groupA 1hour [2024-05-05 12:00:00 DevCTemperature 50] [2024-05-05 12:00:01 DevCTemperature 51] [2024-05-05 12:00:02 DevCTemperature 50] port view HTS.PowerStatus -1days [2024-01-01 11:55:32:3902 -1days:1sec] HTS.PowerStatus>DevAPowerStatus: [Normal , Normal] ... HTS.ErrorMessage>DevAErrorMessage:[Normal, Normal] ... HTS.Temperature>DevCTemperature: [30,32 ...] HTS.HeaterOnOff>DevCOnOff:[Off,On ...]","title":"Home"},{"location":"#welcome-to-port","text":"The port application, being a time-series database, offers a flexible design ideal for industrial data collection and processing. With its capabilities, it enables efficient storage and retrieval of timestamped data, facilitating streamlined operations across various industrial sectors. Please see the documentation lincense","title":"Welcome to Port"},{"location":"#the-requirements","text":"os : windows 7+ / windows server 2003+ memory : minimum 32GB frameworks : .Net Framework 4.5+","title":"The Requirements"},{"location":"#download-url","text":"VERSION OS STABLE URL v0.0.1 -BETA Windows x64 No Port.7z v0.0.1 - BETA","title":"Download URL"},{"location":"#repository","text":"","title":"Repository"},{"location":"#create-new-repository","text":"port new [repository-name] Tip The repository name cannot contain special characters. It follows the directory naming rules provided by the operating system.","title":"Create new repository"},{"location":"#create-add-gruop","text":"port add [group-name]","title":"Create add gruop"},{"location":"#repository-layout","text":"port.toml # The configuration file. .enum # The custom enum file AZone/ # The group directory. sample1.msg # The message file sample2.msg # The message file sample3.msg # The message file BZone/ # The group directory. sample1.msg # The message file sample2.msg # The message file sample3.msg # The message file ... # Other files.","title":"Repository layout"},{"location":"#message-file","text":"message item format like this [key] [datatype] [option...] [key] - unique key in the message group [datatype] - text | num [option] - relation,backup,rule,frame","title":"Message File"},{"location":"#message-property-list","text":"name description relation Real-time synchronization and messaging are handled within the corresponding external library. For more details, please refer to the Relation documentation. backup Changes are saved to the backup database as they occur, ensuring that values are restored upon application restart. and values are not propagated relation messages during program execution. property Can specify a custom property frame Can specify a frame key value to manage subsequent frames by their key values. rule Can specify rules to manage the values of corresponding messages.","title":"message property list"},{"location":"#sample1msg","text":"DevAPowerStatus enum.DeviceAStatus relation:DeviceA.GetStatus frame:HTS.PowerStatus DevAErrorMessage text relation:DeviceA.GetErrorMessage frame:HTS.ErrorMessage DevCTemperature num relation:DeviceC.GetTemperature frame:HTS.Temperature property:{\"MIN\":0,\"MAX\":300} DevCOnOff enum.OnOff relation:DeviceC.OnOff frame:HTS.HeaterOnOff ... Tip message document do not using special characters.","title":"sample1.msg"},{"location":"#enum-file","text":"Enums are particularly useful when you have a fixed set of values that a variable can take, such as days of the week, months of the year, or status codes. They help make your code more expressive, self-documenting, and less error-prone because you're working with named constants instead of raw integer values. enum item format like this [key] [item-name:number_key] [item-name:number_key] [key] - unique key in the enum message [item-name] - name by enum-item [property] - unique key in enum value","title":"Enum File"},{"location":"#customenum","text":"TFalse True:0 False:1 FTrue False:0 True:1 OnOff On:0 Off:1 OffOn Off:1 On:1","title":"custom.enum"},{"location":"#commands","text":"","title":"Commands"},{"location":"#repository_1","text":"port push - push project to repository port pull - pull project from repository Tip The application runs based on the values stored in the repository. The push action must precede the application startup. Subsequently, users can perform a pull action at any desired moment to restore the repository.","title":"Repository"},{"location":"#application","text":"port run [repository-name] - run application from repository port kill - terminated current application Tip port application must be start portlib services application","title":"Application"},{"location":"#message","text":"port set [group-key] [message-key] [set-value] - set the message value to current repository port set groupA sayHelloMessage1 Hello? [set-ok] port get [group-key] [message-key] - get the message value to current repository port get groupA sayHelloMessage1 [Hello?]","title":"Message"},{"location":"#view","text":"port view --new [view-name] --group [group-name] port view --new groupA --group groupA [CREATED][VIEW] ... port view [view-name] --download [file-name].[csv|json|xml] [-time|time~time] port view groupA --download C:/Downloads/gruopA.csv [DOWNLOAD][VIEW] ... port view [view-name] [time|time~time] port view groupA 1hour [2024-05-05 12:00:00 DevCTemperature 50] [2024-05-05 12:00:01 DevCTemperature 51] [2024-05-05 12:00:02 DevCTemperature 50] port view HTS.PowerStatus -1days [2024-01-01 11:55:32:3902 -1days:1sec] HTS.PowerStatus>DevAPowerStatus: [Normal , Normal] ... HTS.ErrorMessage>DevAErrorMessage:[Normal, Normal] ... HTS.Temperature>DevCTemperature: [30,32 ...] HTS.HeaterOnOff>DevCOnOff:[Off,On ...]","title":"View"},{"location":"frame/","text":"What's FRAME? \u00b6 Frame refers to a set of messages designated within different groups and called from various relation objects. While the specification of frames in messages may vary from one project to another, maintaining consistent names in relation objects allows users to easily manage relation objects. Make frame \u00b6 Create a Message Document \u00b6 [../AZone/sample1.msg] DevAPowerStatus enum.DeviceAStatus relation:DeviceA.GetStatus frame:HTS1.PowerStatus ... [../BZone/sample1.msg] DevAPowerStatus enum.DeviceAStatus relation:DeviceA.GetStatus frame:HTS2.PowerStatus ... Create a RelationObject \u00b6 public class HeatingScenario : ScenarioRelationService { ... [Message, Shot(1)] public ShotResult EVENT_1 { set { var strValue = frame.GetValue(\"PowerStatus\"); if (strValue == \"OK\") { value.NextShot(); } } } ... } Command \u00b6 port add --scenario heating1 /HeatingLib/HeatingLib.dll port add --scenario heating2 /HeatingLib/HeatingLib.dll","title":"Frame"},{"location":"frame/#whats-frame","text":"Frame refers to a set of messages designated within different groups and called from various relation objects. While the specification of frames in messages may vary from one project to another, maintaining consistent names in relation objects allows users to easily manage relation objects.","title":"What's FRAME?"},{"location":"frame/#make-frame","text":"","title":"Make frame"},{"location":"frame/#create-a-message-document","text":"[../AZone/sample1.msg] DevAPowerStatus enum.DeviceAStatus relation:DeviceA.GetStatus frame:HTS1.PowerStatus ... [../BZone/sample1.msg] DevAPowerStatus enum.DeviceAStatus relation:DeviceA.GetStatus frame:HTS2.PowerStatus ...","title":"Create a Message Document"},{"location":"frame/#create-a-relationobject","text":"public class HeatingScenario : ScenarioRelationService { ... [Message, Shot(1)] public ShotResult EVENT_1 { set { var strValue = frame.GetValue(\"PowerStatus\"); if (strValue == \"OK\") { value.NextShot(); } } } ... }","title":"Create a RelationObject"},{"location":"frame/#command","text":"port add --scenario heating1 /HeatingLib/HeatingLib.dll port add --scenario heating2 /HeatingLib/HeatingLib.dll","title":"Command"},{"location":"license/","text":"Lincense \u00b6 Copyright \u00a9 Portget. All rights reserved Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#lincense","text":"Copyright \u00a9 Portget. All rights reserved Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Lincense"},{"location":"portdic/","text":"What's PortDic \u00b6 Download \u00b6 Nuget Package \u00b6 NAME Target OS STABLE PortDic.Lib.x64 >= NetFramework 4.8 , >= NetCore 8.0 Windows x64 Yes Functions \u00b6 SET \u00b6 ... PortDic dic = portdic.Connect(\"localhost\",9000); var ok = dic.Set('AZone','SamplePower','On'); if(ok){ Console.WriteLine(\"ok\"); } ... GET \u00b6 ... PortDic dic = portdic.Connect(\"localhost\",9000); var v = dic.Get('AZone','SamplePower') // 'On' Console.WriteLine(v.Text()); var ok2 = dic.Set('AZone','SampleTemp',90); if(ok2){ Console.WriteLine(\"ok\"); } var t = dic.Get('AZone','SampleTemp') // '90' Console.WriteLine(t.Text()); if (t >= 90){ Console.WriteLine('[Warning]Over Tempature'); } ... QUEUE \u00b6 //class1.cs PortDic dic = portdic.Connect(\"localhost\",9000); var q1 = Port.NewQueue('TEST') q1.Enqueue(Encoding.UTF8.GetBytes('First Value')); ... //class2.cs PortDic dic = portdic.Connect(\"localhost\",9000); var q = Port.Queue('TEST') var v = q1.Dequeue(); //Show \"First Value\" from class1.cs Console.WriteLine(Encoding.UTF8.GetString(v)); v = q1.Dequeue(); //Show \"\" Console.WriteLine(Encoding.UTF8.GetString(v)); ... STACK \u00b6 LIST \u00b6 STORAGE \u00b6 Code \u00b6","title":"PortDic"},{"location":"portdic/#whats-portdic","text":"","title":"What's PortDic"},{"location":"portdic/#download","text":"","title":"Download"},{"location":"portdic/#nuget-package","text":"NAME Target OS STABLE PortDic.Lib.x64 >= NetFramework 4.8 , >= NetCore 8.0 Windows x64 Yes","title":"Nuget Package"},{"location":"portdic/#functions","text":"","title":"Functions"},{"location":"portdic/#set","text":"... PortDic dic = portdic.Connect(\"localhost\",9000); var ok = dic.Set('AZone','SamplePower','On'); if(ok){ Console.WriteLine(\"ok\"); } ...","title":"SET"},{"location":"portdic/#get","text":"... PortDic dic = portdic.Connect(\"localhost\",9000); var v = dic.Get('AZone','SamplePower') // 'On' Console.WriteLine(v.Text()); var ok2 = dic.Set('AZone','SampleTemp',90); if(ok2){ Console.WriteLine(\"ok\"); } var t = dic.Get('AZone','SampleTemp') // '90' Console.WriteLine(t.Text()); if (t >= 90){ Console.WriteLine('[Warning]Over Tempature'); } ...","title":"GET"},{"location":"portdic/#queue","text":"//class1.cs PortDic dic = portdic.Connect(\"localhost\",9000); var q1 = Port.NewQueue('TEST') q1.Enqueue(Encoding.UTF8.GetBytes('First Value')); ... //class2.cs PortDic dic = portdic.Connect(\"localhost\",9000); var q = Port.Queue('TEST') var v = q1.Dequeue(); //Show \"First Value\" from class1.cs Console.WriteLine(Encoding.UTF8.GetString(v)); v = q1.Dequeue(); //Show \"\" Console.WriteLine(Encoding.UTF8.GetString(v)); ...","title":"QUEUE"},{"location":"portdic/#stack","text":"","title":"STACK"},{"location":"portdic/#list","text":"","title":"LIST"},{"location":"portdic/#storage","text":"","title":"STORAGE"},{"location":"portdic/#code","text":"","title":"Code"},{"location":"reference/","text":"API reference \u00b6 Introduction \u00b6 This page explains how the Port client calls the Port backend API. Tip Before making any API calls, please ensure that the server is running properly. If the server is not functioning correctly, API calls may fail. Therefore, verify the server's operational status before initiating any API calls. Authentication \u00b6 When authentication functionality is activated within the HOST application, service-calling applications are required to request a key from the HOST before making API calls to ensure proper authentication and access to services. This security feature remains disabled by default. GET \u00b6 Application \u00b6 URL Description /api/app/ show up application information /api/ng/ show up ng-list /api/download/ download somthing... /api/enum enum list Group \u00b6 URL Description /api/{group-name}/ accessor data /api/{group-name}/keys key list /api/{group-name}/kv key-value list /api/{group-name}/datatype key-datatype list /api/{group-name}/enumid enumid list /api/{group-name}/memory memory list /api/{group-name}/address address list Frame \u00b6 Relation \u00b6 URL Description /api/{relation-name}/ relation information /api/{relation-name}/keys key list /api/{relation-name}/kv key-value list /api/{relation-name}/set set-message list /api/{relation-name}/get get-message list POST \u00b6 Application \u00b6 URL Description /api/enum/{enum} key list Group \u00b6 URL Description /api/{group-name}/ relation information /api/{group-name}/message/{[key]}?{[datatype] [property...]} add message Frame \u00b6 PUT \u00b6 Group \u00b6 URL Description /api/{group-name}/{[key]}?{[set-value]} set value to group-message Relation \u00b6 URL Description /api/{relation-name}/{[key]}?{[set-value]} set value to relation-message Frame \u00b6 DELETE \u00b6 Group \u00b6 URL Description /api/{group-name}/message/{[key]} Frame \u00b6","title":"API Reference"},{"location":"reference/#api-reference","text":"","title":"API reference"},{"location":"reference/#introduction","text":"This page explains how the Port client calls the Port backend API. Tip Before making any API calls, please ensure that the server is running properly. If the server is not functioning correctly, API calls may fail. Therefore, verify the server's operational status before initiating any API calls.","title":"Introduction"},{"location":"reference/#authentication","text":"When authentication functionality is activated within the HOST application, service-calling applications are required to request a key from the HOST before making API calls to ensure proper authentication and access to services. This security feature remains disabled by default.","title":"Authentication"},{"location":"reference/#get","text":"","title":"GET"},{"location":"reference/#application","text":"URL Description /api/app/ show up application information /api/ng/ show up ng-list /api/download/ download somthing... /api/enum enum list","title":"Application"},{"location":"reference/#group","text":"URL Description /api/{group-name}/ accessor data /api/{group-name}/keys key list /api/{group-name}/kv key-value list /api/{group-name}/datatype key-datatype list /api/{group-name}/enumid enumid list /api/{group-name}/memory memory list /api/{group-name}/address address list","title":"Group"},{"location":"reference/#frame","text":"","title":"Frame"},{"location":"reference/#relation","text":"URL Description /api/{relation-name}/ relation information /api/{relation-name}/keys key list /api/{relation-name}/kv key-value list /api/{relation-name}/set set-message list /api/{relation-name}/get get-message list","title":"Relation"},{"location":"reference/#post","text":"","title":"POST"},{"location":"reference/#application_1","text":"URL Description /api/enum/{enum} key list","title":"Application"},{"location":"reference/#group_1","text":"URL Description /api/{group-name}/ relation information /api/{group-name}/message/{[key]}?{[datatype] [property...]} add message","title":"Group"},{"location":"reference/#frame_1","text":"","title":"Frame"},{"location":"reference/#put","text":"","title":"PUT"},{"location":"reference/#group_2","text":"URL Description /api/{group-name}/{[key]}?{[set-value]} set value to group-message","title":"Group"},{"location":"reference/#relation_1","text":"URL Description /api/{relation-name}/{[key]}?{[set-value]} set value to relation-message","title":"Relation"},{"location":"reference/#frame_2","text":"","title":"Frame"},{"location":"reference/#delete","text":"","title":"DELETE"},{"location":"reference/#group_3","text":"URL Description /api/{group-name}/message/{[key]}","title":"Group"},{"location":"reference/#frame_3","text":"","title":"Frame"},{"location":"relation/","text":"What's RELATION? \u00b6 This object is designed to efficiently manage libraries that serve as common denominators across multiple projects. Tailored for each language, these libraries facilitate seamless integration with the object and handle memory synchronization with ports. Users can conveniently utilize these libraries by inheriting or implementing the respective classes, ensuring ease of use. Get Started \u00b6 Add reference \u00b6 NAME Version Path .net >8.0 ../port/lib/net/portlib.dll Support objects \u00b6 NAME SETPOINT DESCRIPTION ScenarioRelationService frame write a scenario where you inherit the object to control all message values and share messages across the system. IntervalRelationService frame this is an object designed for managing a set of periodically called messages, allowing control over the values by periodically invoking messages to the system. CommRelationService endpoint this object is designed for a set of messages requiring network endpoints. When inheriting this object, implementation of endpoint and connection status check functions is necessary. Through implementation of the required messages upon connection, it can be provided to the port application. .Net (>= 8.0) \u00b6 Tip [Properties] -> [Application] -> [General] -> [Traget OS] -> check for windows ScenarioRelationService \u00b6 public class HeatingScenario : ScenarioRelationService { public HeatingScenario() { } /// <summary> /// start condition /// </summary> /// <returns>start : true / skip : false</returns> public override bool OpeningCredits() { var strValue = frame.GetValue(\"TemptureCheck\"); if (strValue == \"Starting\") { return true; } return false; } /// <summary> /// end condition /// </summary> /// <returns>start : true / skip : false</returns> public override bool EndingCredits() { if (this.ShotNumber > 3) { return true; } return false; } [Message, Shot(1)] public ShotResult EVENT_1 { set { var strValue = frame.GetValue(\"DevAPowerStatus\"); if (strValue == \"OK\") { value.NextShot(); } } } [Message, Shot(2)] public ShotResult EVENT_2 { set { if (frame.GetValue(\"DevCOnOff\") != \"On\") { value.Occure(\"ERROR\", \"Did not turn on.\"); } else { value.NextShot(); } } } [Message, Shot(3)] public ShotResult EVENT_3 { set { var strValue = frame.GetValue(\"Temperature\"); if (strValue <= 30) { value.EndingCredits(); } } } } IntervalRelationService \u00b6 /// <summary> /// 10ms interval serivce /// </summary> public class HeatingCheck : IntervalRelationService { public HeatingCheck() { } /// <summary> /// Min-limit = 10ms /// </summary> public override int Interval { set; get; } = 10; public override void Tick() { if (frame.GetValue(\"Temperature\") >= 30) { Occure(\"WARNING\", \"Too Hot\"); } } } CommRelationService \u00b6 /// <summary> /// Communication Relation Object /// you must be implement IsConnected, Endpoint /// </summary> public class Relation : CommRelationService { private SerialPort serialPort = new SerialPort(); public Relation() { } // Just use here public string Name; // Check for connected protected override bool IsConnected() { return ((this.serialPort != null) && (this.serialPort.IsOpen)); } // port relation set Endpoint like COM13,9600,8,1,0,0 / TCP [Message] public override IEndpoint Endpoint { set { if (value.Binding(this.serialPort)) { this.serialPort.Open(); } } get { return this.address; } } [Message] public string GetPowerStatus { get { var message = Encoding.ASCII.GetBytes(\"power?\\r\\n\"); this.serialPort.Write(message, 0, message.Length); Thread.Sleep(300); var recv = new byte[0xff]; var n = this.serialPort.Read(recv, 0, recv.Length); if (n != 0) { return Encoding.ASCII.GetString(recv); } return \"Unknown\"; } } [Message] public string PowerOn { set { var message = Encoding.ASCII.GetBytes(\"powerOn\\r\\n\"); this.serialPort.Write(message, 0, message.Length); } } } port add --comm heating1 /TempLib/TempLib.dll port add --comm heating2 /TempLib/TempLib.dll","title":"Relation"},{"location":"relation/#whats-relation","text":"This object is designed to efficiently manage libraries that serve as common denominators across multiple projects. Tailored for each language, these libraries facilitate seamless integration with the object and handle memory synchronization with ports. Users can conveniently utilize these libraries by inheriting or implementing the respective classes, ensuring ease of use.","title":"What's RELATION?"},{"location":"relation/#get-started","text":"","title":"Get Started"},{"location":"relation/#add-reference","text":"NAME Version Path .net >8.0 ../port/lib/net/portlib.dll","title":"Add reference"},{"location":"relation/#support-objects","text":"NAME SETPOINT DESCRIPTION ScenarioRelationService frame write a scenario where you inherit the object to control all message values and share messages across the system. IntervalRelationService frame this is an object designed for managing a set of periodically called messages, allowing control over the values by periodically invoking messages to the system. CommRelationService endpoint this object is designed for a set of messages requiring network endpoints. When inheriting this object, implementation of endpoint and connection status check functions is necessary. Through implementation of the required messages upon connection, it can be provided to the port application.","title":"Support objects"},{"location":"relation/#net-80","text":"Tip [Properties] -> [Application] -> [General] -> [Traget OS] -> check for windows","title":".Net (&gt;= 8.0)"},{"location":"relation/#scenariorelationservice","text":"public class HeatingScenario : ScenarioRelationService { public HeatingScenario() { } /// <summary> /// start condition /// </summary> /// <returns>start : true / skip : false</returns> public override bool OpeningCredits() { var strValue = frame.GetValue(\"TemptureCheck\"); if (strValue == \"Starting\") { return true; } return false; } /// <summary> /// end condition /// </summary> /// <returns>start : true / skip : false</returns> public override bool EndingCredits() { if (this.ShotNumber > 3) { return true; } return false; } [Message, Shot(1)] public ShotResult EVENT_1 { set { var strValue = frame.GetValue(\"DevAPowerStatus\"); if (strValue == \"OK\") { value.NextShot(); } } } [Message, Shot(2)] public ShotResult EVENT_2 { set { if (frame.GetValue(\"DevCOnOff\") != \"On\") { value.Occure(\"ERROR\", \"Did not turn on.\"); } else { value.NextShot(); } } } [Message, Shot(3)] public ShotResult EVENT_3 { set { var strValue = frame.GetValue(\"Temperature\"); if (strValue <= 30) { value.EndingCredits(); } } } }","title":"ScenarioRelationService"},{"location":"relation/#intervalrelationservice","text":"/// <summary> /// 10ms interval serivce /// </summary> public class HeatingCheck : IntervalRelationService { public HeatingCheck() { } /// <summary> /// Min-limit = 10ms /// </summary> public override int Interval { set; get; } = 10; public override void Tick() { if (frame.GetValue(\"Temperature\") >= 30) { Occure(\"WARNING\", \"Too Hot\"); } } }","title":"IntervalRelationService"},{"location":"relation/#commrelationservice","text":"/// <summary> /// Communication Relation Object /// you must be implement IsConnected, Endpoint /// </summary> public class Relation : CommRelationService { private SerialPort serialPort = new SerialPort(); public Relation() { } // Just use here public string Name; // Check for connected protected override bool IsConnected() { return ((this.serialPort != null) && (this.serialPort.IsOpen)); } // port relation set Endpoint like COM13,9600,8,1,0,0 / TCP [Message] public override IEndpoint Endpoint { set { if (value.Binding(this.serialPort)) { this.serialPort.Open(); } } get { return this.address; } } [Message] public string GetPowerStatus { get { var message = Encoding.ASCII.GetBytes(\"power?\\r\\n\"); this.serialPort.Write(message, 0, message.Length); Thread.Sleep(300); var recv = new byte[0xff]; var n = this.serialPort.Read(recv, 0, recv.Length); if (n != 0) { return Encoding.ASCII.GetString(recv); } return \"Unknown\"; } } [Message] public string PowerOn { set { var message = Encoding.ASCII.GetBytes(\"powerOn\\r\\n\"); this.serialPort.Write(message, 0, message.Length); } } } port add --comm heating1 /TempLib/TempLib.dll port add --comm heating2 /TempLib/TempLib.dll","title":"CommRelationService"}]}