{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Port \u00b6 More Easily Create an API-Server with Port App , designed to streamline the deployment of pkgs for developers. With this tool, developers can effortlessly deploy pkgs and integrate various applications to build a unified web service. Port Application simplifies the process, enabling developers to focus on creating seamless and efficient solutions with ease. Please see the documentation lincense 1. Application Layout \u00b6 2. The Requirements \u00b6 os : windows 11+ / windows server 2003+ memory : minimum 32GB requirements : Tip System Requirements .sdk-8.0.403-windows-x64-installer 3. Download \u00b6 VERSION OS STABLE URL v1.0.59 Windows x64 Yes v1.0.59-win-installer .console { width: 80%; height: 80%; background-color: whitesmoke; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .yellow{ color:yellow; } .console-content { white-space: pre-wrap; } .console-content p { margin: 0; } .notepad { width: 100%; height: 80%; background-color: white; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .notepad:before { content: ''; position: absolute; top: 10px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad:after { content: ''; position: absolute; top: 30px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad-content { margin-top: 40px; } .notepad-content p { margin: 0 0 10px; line-height: 1.5; }","title":"Home"},{"location":"#welcome-to-port","text":"More Easily Create an API-Server with Port App , designed to streamline the deployment of pkgs for developers. With this tool, developers can effortlessly deploy pkgs and integrate various applications to build a unified web service. Port Application simplifies the process, enabling developers to focus on creating seamless and efficient solutions with ease. Please see the documentation lincense","title":"Welcome to Port"},{"location":"#1-application-layout","text":"","title":"1. Application Layout"},{"location":"#2-the-requirements","text":"os : windows 11+ / windows server 2003+ memory : minimum 32GB requirements : Tip System Requirements .sdk-8.0.403-windows-x64-installer","title":"2. The Requirements"},{"location":"#3-download","text":"VERSION OS STABLE URL v1.0.59 Windows x64 Yes v1.0.59-win-installer .console { width: 80%; height: 80%; background-color: whitesmoke; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .yellow{ color:yellow; } .console-content { white-space: pre-wrap; } .console-content p { margin: 0; } .notepad { width: 100%; height: 80%; background-color: white; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .notepad:before { content: ''; position: absolute; top: 10px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad:after { content: ''; position: absolute; top: 30px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad-content { margin-top: 40px; } .notepad-content p { margin: 0 0 10px; line-height: 1.5; }","title":"3. Download"},{"location":"commands/","text":"Commands \u00b6 Cheat Sheet \u00b6 System \u00b6 command arguments description ? [script|../something.js] Run the specified script. version - Displays the version information. new [name] Can specify rules to manage the values of corresponding messages. push - Push project to repository. pull - Pull project from repository. pack [--path <project-path>] [--o <output package-name>] Pack port-package-files. run [name] Runs the pkg server based on the specified repository. ls [repo] | [pkg] | [tcp] | [comm] Displays the specified items in a list. kill [kill-code] Shutdown pkg server. env - Displays the system environment settings. help - . Server \u00b6 command arguments description set [group-name] [message-name] [value] [package-name] [message-name] [value] [*.js] [function-name] [arguments] [*.pub] password [user-name] [old-password] [new-password] grant [user-name] [user-level] notify [message] init [package-name] Set values in the pkg server. get [group-name] [message-name] [package-name] [message-name] [workid] [project-name].log [package-name].log [package-name].event [package-name].doc status mls Get values from the pkg server. System \u00b6 script \u00b6 -Support for ECMAScript5 ecmascript js_es5 port push \u00b6 push project to repository port pull \u00b6 pull project from repository Tip The application runs based on the values stored in the repository. The push action must precede the application startup. Subsequently, users can perform a pull action at any desired moment to restore the repository. port set [group] [message] [value] \u00b6 set the message value to current repository port set groupA sayHelloMessage1 Hello? [set-ok] port get [group] [message] \u00b6 get the message value to current repository port get groupA sayHelloMessage1 [Hello?] Server \u00b6 port run [repository-name] \u00b6 run server from repository port shutdown \u00b6 terminated current server","title":"Commands"},{"location":"commands/#commands","text":"","title":"Commands"},{"location":"commands/#cheat-sheet","text":"","title":"Cheat Sheet"},{"location":"commands/#system","text":"command arguments description ? [script|../something.js] Run the specified script. version - Displays the version information. new [name] Can specify rules to manage the values of corresponding messages. push - Push project to repository. pull - Pull project from repository. pack [--path <project-path>] [--o <output package-name>] Pack port-package-files. run [name] Runs the pkg server based on the specified repository. ls [repo] | [pkg] | [tcp] | [comm] Displays the specified items in a list. kill [kill-code] Shutdown pkg server. env - Displays the system environment settings. help - .","title":"System"},{"location":"commands/#server","text":"command arguments description set [group-name] [message-name] [value] [package-name] [message-name] [value] [*.js] [function-name] [arguments] [*.pub] password [user-name] [old-password] [new-password] grant [user-name] [user-level] notify [message] init [package-name] Set values in the pkg server. get [group-name] [message-name] [package-name] [message-name] [workid] [project-name].log [package-name].log [package-name].event [package-name].doc status mls Get values from the pkg server.","title":"Server"},{"location":"commands/#system_1","text":"","title":"System"},{"location":"commands/#script","text":"-Support for ECMAScript5 ecmascript js_es5","title":"script"},{"location":"commands/#port-push","text":"push project to repository","title":"port push"},{"location":"commands/#port-pull","text":"pull project from repository Tip The application runs based on the values stored in the repository. The push action must precede the application startup. Subsequently, users can perform a pull action at any desired moment to restore the repository.","title":"port pull"},{"location":"commands/#port-set-group-message-value","text":"set the message value to current repository port set groupA sayHelloMessage1 Hello? [set-ok]","title":"port set [group] [message] [value]"},{"location":"commands/#port-get-group-message","text":"get the message value to current repository port get groupA sayHelloMessage1 [Hello?]","title":"port get [group] [message]"},{"location":"commands/#server_1","text":"","title":"Server"},{"location":"commands/#port-run-repository-name","text":"run server from repository","title":"port run [repository-name]"},{"location":"commands/#port-shutdown","text":"terminated current server","title":"port shutdown"},{"location":"frame/","text":"What's FRAME? \u00b6 Frame refers to a set of messages designated within different groups and called from various relation objects. While the specification of frames in messages may vary from one project to another, maintaining consistent names in relation objects allows users to easily manage relation objects. Make frame \u00b6 Create a Message Document \u00b6 [../AZone/sample1.msg] DevAPowerStatus enum.DeviceAStatus api:DeviceA.GetStatus frame:HTS1.PowerStatus ... [../BZone/sample1.msg] DevAPowerStatus enum.DeviceAStatus api:DeviceA.GetStatus frame:HTS2.PowerStatus ... Create a RelationObject \u00b6 public class HeatingScenario : ScenarioRelationService { ... [Message, Shot(1)] public ShotResult EVENT_1 { set { var strValue = frame . GetValue ( \"PowerStatus\" ); if ( strValue == \"OK\" ) { value . NextShot (); } } } ... } Command \u00b6 port add --scenario heating1 /HeatingLib/HeatingLib.dll port add --scenario heating2 /HeatingLib/HeatingLib.dll","title":"What's FRAME?"},{"location":"frame/#whats-frame","text":"Frame refers to a set of messages designated within different groups and called from various relation objects. While the specification of frames in messages may vary from one project to another, maintaining consistent names in relation objects allows users to easily manage relation objects.","title":"What's FRAME?"},{"location":"frame/#make-frame","text":"","title":"Make frame"},{"location":"frame/#create-a-message-document","text":"[../AZone/sample1.msg] DevAPowerStatus enum.DeviceAStatus api:DeviceA.GetStatus frame:HTS1.PowerStatus ... [../BZone/sample1.msg] DevAPowerStatus enum.DeviceAStatus api:DeviceA.GetStatus frame:HTS2.PowerStatus ...","title":"Create a Message Document"},{"location":"frame/#create-a-relationobject","text":"public class HeatingScenario : ScenarioRelationService { ... [Message, Shot(1)] public ShotResult EVENT_1 { set { var strValue = frame . GetValue ( \"PowerStatus\" ); if ( strValue == \"OK\" ) { value . NextShot (); } } } ... }","title":"Create a RelationObject"},{"location":"frame/#command","text":"port add --scenario heating1 /HeatingLib/HeatingLib.dll port add --scenario heating2 /HeatingLib/HeatingLib.dll","title":"Command"},{"location":"learn/","text":"Quick Start \u00b6 Port operates by reflecting messages in the most recently updated repository. Try creating and editing a basic project to see how you can modify and configure projects. Follow along to understand the process better. How to create a port-project \u00b6 Before starting a Port project, you need to create a root folder that defines your messages. The subfolders within this root folder are managed as groups by Port, allowing users to organize messages by group. The root folder contains files with the *.enum extension and the structure of sub-group folders. Within the sub-group folders, message definition documents with the *.msg extension are created. 1. Repository \u00b6 The Port project is remarkably simple and straightforward. To get started, first create a project folder in the console, then type port new sample. This will quickly generate the project files. After that, create sub-group folders and add .msg files to each sub-group folder. Feel free to create messages using text, num, and enum types as you like. Once you've specified the attributes, type port push and Port will automatically store everything. Now, just run port run sample, and the server will start, allowing you to safely and easily share messages across multiple applications. Tip The repository name cannot contain special characters. It follows the directory naming rules provided by the operating system. Create a project 2. Group \u00b6 A group serves as the root of messages. Within a single group, multiple message files can be stored, allowing for easy retrieval and editing. By managing several .msg files within the group folder, you can conveniently organize and abstract them for streamlined management. Add a group Sample Project \u00b6 Download sample project How to add messages \u00b6 To declare a message, you need to edit the *.msg file in the sub-folder you created. By defining message data types and attributes as shown below, you can later utilize various features such as automatic logging and backup. Additionally, you can define relationships using predefined relations. 1. Message syntax \u00b6 [key] [datatype] [option...] A message is an object that allows users to specify pkg properties in a pre-provided Application Service. The message is a kv, and types and properties can be defined in that message. Please attach the materials attached below. [key] - unique key in the message group [datatype] - text | num | enum [attribute] - pkg,backup,rule,frame,property datatype \u00b6 name range description char 0~255 A fixed-length type with a total length of 255, where the variable is of the CHAR data type, allowing string values to be stored. num -1.7e+308 ~ +1.7e+308 The floating-point type that allows for the representation of decimal numbers and is capable of representing a wide range of values, both very small and very large. enum 0 ~ 65535 The user can utilize the fixed list values specified in the .enum file, which can be used at a lower cost than text values and with stricter usage. attribute \u00b6 name description pkg Real-time synchronization and messaging are handled within the corresponding external library. For more details, please refer to the pkg documentation. backup Changes are saved to the backup database as they occur, ensuring that values are restored upon application restart. and values are not propagated pkg messages during program execution. property Can specify a custom property rule Can specify rules to manage the values of corresponding messages. logging Auto logging support for messages Tip message document do not using special characters. 2. Sample \u00b6 BulbOnOff enum.OffOn pkg:Bulb1.OffOn RoomTemp1 num pkg:Heater1.Temp property:{\"MIN\":0,\"MAX\":300,\"Arguments\":\"C\"} RoomTemp2 num pkg:Heater1.Temp property:{\"MIN\":0,\"MAX\":300,\"Arguments\":\"F\"} How to add enums \u00b6 1. Enum syntax \u00b6 Enums are particularly useful when you have a fixed set of values that a variable can take, such as days of the week, months of the year, or status codes. They help make your code more expressive, self-documenting, and less error-prone because you're working with named constants instead of raw integer values. enum item format like this [key] [item-name:number_key] [item-name:number_key] [key] - unique key in the enum message [item-name] - name by enum-item [property] - unique key in enum value 2. Sample \u00b6 TFalse True:0 False:1 FTrue False:0 True:1 OffOn Off:0 On:1 OnOff On:0 Off:1 How to add rules \u00b6 To declare a rule, you need to edit the *.rule file in the sub-folder you created. The rule script can control whether the user can modify settings through the setable function. The first parameter is the condition that triggers the rule, and the second parameter is the condition that determines whether the setting is modifiable. When the user changes the message value, the function is automatically called to check these conditions. 1. SetTrigger script syntax \u00b6 The set function is a conditional validation mechanism used to check and enforce logical constraints before accepting input actions. It is composed of two main parts: Input Condition \u00b6 A logical expression that specifies the input condition to be validated. Validation Condition \u00b6 A logical expression that must evaluate to true for the input action to be accepted. Syntax \u00b6 set( <Input Condition> , <Validation Condition> ); 2. GetTrigger script syntax \u00b6 The GetTrigger serves as a conditional trigger mechanism for executing specific actions when defined conditions are met. It is composed of two main parts: Trigger Condition \u00b6 A logical expression that evaluates to true or false. Action Script \u00b6 A set of instructions executed when the trigger condition evaluates to true. Syntax \u00b6 get( <Trigger Condition> , <Action Script> ); 3. Sample \u00b6 set(\"room1.BulbOnOff==Off\",\"(room1.RoomTemp1>=20)&&(room2.RoomTemp2>=20)\") set(\"room1.RoomTemp2>=30\",\"room2.RoomTemp2>=5\") get(\"(room1.RoomTemp1>=0)&&(room2.RoomTemp2>=0)\",\"room1.BulbOnOff=Off;room2.BulbOnOff=Off;\") How to import packages \u00b6 A port package, in the context of software development, is a collection of pre-written code or modules that provide specific functionality, designed to be reused across different projects. By incorporating port packages into your application, you can save time and effort by leveraging existing solutions instead of building everything from scratch. Port packages typically include libraries, utilities, or tools that handle common tasks, such as data manipulation, network communication, or file handling. The main advantage of using port packages is that they promote reusability, allowing developers to share and reuse code, which improves efficiency and reduces redundancy. Additionally, port packages help to organize your code in a modular way, making it easier to maintain and update. it becomes much easier to install, update, and track dependencies, ensuring your application is always running with the right set of tools. In summary, port packages: Increase reusability by enabling the sharing of commonly used code. Enhance efficiency by reducing the need to write code from scratch. Improve maintainability by organizing code into smaller, manageable components. Simplify management through package managers that handle installation, updates, and dependency tracking. 1. Check packages list \u00b6 2. Manual for boot.js in Port Application \u00b6 Overview The boot.js file is a critical component of the Port Application. It initializes the system by importing and validating the necessary packages. If any package fails validation, the application stops booting and logs an error. Location The boot.js file is located in the app folder of the Port Application project. Ensure all edits are made directly in this file to modify the initialization process. Structure of boot.js Below is the typical structure of the boot.js file: import Bulb1 from `BulbLib1` import Bulb2 from `BulbLib2` import Heater1 from `HeaterLib1` import Heater2 from `HeaterLib2` function boot(){ if (!Bulb1.Valid()){ console.log(\"invalid Bubl1\"); return false; } if (!Bulb2.Valid()){ console.log(\"invalid Bubl2\"); return false; } if (!Heater1.Valid()){ console.log(\"invalid Heater1\"); return false; } if (!Heater2.Valid()){ console.log(\"invalid Heater2\"); return false; } return true; } After linking the relations to your project, you can verify the integration using the following command How to start project \u00b6 Push to repository. port push a. With console \u00b6 Once all message definitions are complete, you can start the message server based on these definitions. Before running the server, upload all updated content to the local repository by entering port push in the console. Then, run the server with the command port run [project-name] . Tip When running the server, if you include --ng ignore in the command, it will summarize only the points where errors (NG) occur. For detailed information on these NG points, you can visit the following URL to view the NG point table: http://localhost:5001/api/app/ng/?view=table b. With application(WPF) \u00b6 How to check logs \u00b6 Port Application records events and activities related to loaded packages, resource loading, console commands, services, and the overall project in various log folders. Logs play a vital role in troubleshooting and system analysis, providing users with crucial information and diagnostic tools. a. With log files \u00b6 .../documents/port/logs Port Application provides the following subfolders under the port/logs/ path. Each folder records logs for specific activities: Pkg Folder : Logs are created when a package is loaded, and all events related to the package are recorded. Boot Folder : Logs are created when resources needed for project execution are loaded. Console Folder : Logs commands invoked through the Port Application. Service Folder : Logs related to the Port Package Manager service. Project Folder : Logs related to set/get operations and overall project-related logs. b. With ssh \u00b6 Enter the command in your ssh application get sample.log How to use SSH \u00b6 SSH is a network protocol used for secure remote access to a computer system. It provides a secure way to access a remote computer without having direct access to its network. SSH is commonly used to connect to remote servers, perform administrative tasks, and access files and directories. 1. Install Putty application \u00b6 PuTTY is a popular free and open-source terminal emulator that supports various network protocols, such as SSH (Secure Shell), Telnet, and Rlogin. It is widely used for remotely accessing servers and systems over a network. PuTTY allows users to interact with remote machines via a command-line interface, making it a valuable tool for system administrators, developers, and IT professionals. Tip Download a putty application 2. Connect to 127.0.0.1:22 \u00b6 Note port : 22 / username : admin / password : admin 3. Enter the username and password \u00b6 4. Enter the commands \u00b6 How to use MQTT \u00b6 MQTT is a lightweight messaging protocol primarily designed for efficient message transmission between IoT (Internet of Things) devices. This protocol is optimized to work in environments with limited network bandwidth, offering fast and reliable communication. MQTT is based on a publish/subscribe model, simplifying interactions between clients that send and receive data. 1. MQTT Operation Flow \u00b6 1.Clients Clients can either publish messages to a specific topic or subscribe to topics to receive messages. A client can act as both a publisher and a subscriber. 2.Broker The broker is the central server that manages message distribution. It receives messages from publishers and forwards them to subscribers who are subscribed to the relevant topic(s). 3.Topics A topic is a string that represents the channel or category of a message. Clients subscribe to topics to receive messages. Topics can be hierarchical, allowing complex topic structures (e.g., home/livingroom/temperature). Steps in MQTT Communication: 4.Connection A client connects to the MQTT broker using a specific IP address and port. It may provide credentials for authentication. 2. Connect to 127.0.0.1:8080 \u00b6 A client subscribes to one or more topics of interest. This tells the broker which messages it wants to receive. 1.Publishing Another client can publish a message to a topic. The broker will check which clients are subscribed to that topic. Message Distribution: The broker sends the message to all clients subscribed to the topic. The message is delivered according to the Quality of Service (QoS) level defined by the publisher and subscriber. 2.QoS Levels QoS 0: Message is delivered at most once (no guarantee of delivery). QoS 1: Message is delivered at least once (guaranteed delivery but possible duplication). QoS 2: Message is delivered exactly once (guaranteed delivery without duplication). 3.Disconnect After the communication, a client can disconnect from the broker, but the broker retains subscriptions for clients that maintain a persistent session. 4.Key Concepts Publish : A client sends a message to a topic (e.g., sending sensor data). Subscribe : A client listens to a specific topic to receive messagees. Broker : A server that handles the routing and delivery of messages. Topics : Categories or channels that messages are published to and subscribed from. Note port : 8080 / username : admin / password : admin 3. How to use Mqtt-explorer \u00b6 First, you make *.pub file in your project directory path : ..\\sample\\app\\mqtt\\room1.pub url : app\\mqtt\\room1.pub room1 RoomTemp1 \\\\ [group-name] [message-name] room2 RoomTemp1 Tip mosquitto.org/download 4. It's working! \u00b6 .console { width: 80%; height: 80%; background-color: whitesmoke; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .yellow{ color:yellow; } .console-content { white-space: pre-wrap; } .console-content p { margin: 0; } .notepad { width: 100%; height: 80%; background-color: white; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .notepad:before { content: ''; position: absolute; top: 10px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad:after { content: ''; position: absolute; top: 30px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad-content { margin-top: 40px; } .notepad-content p { margin: 0 0 10px; line-height: 1.5; } .code-box { position: relative; background: #f5f5f5; border: 1px solid #ddd; border-radius: 5px; padding: 15px; margin: 20px 0; overflow: auto; font-family: \"Courier New\", Courier, monospace; } /* Code Styling */ .code-box pre { margin: 0; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word; background: none; padding: 0; } /* Copy Button */ .copy-button { position: absolute; top: 30px; right: 30px; color: white; border: none; border-radius: 3px; padding: 5px 5px; font-size: 14px; cursor: pointer; transition: background-color 0.3s; } .copy-button:hover { background-color: #e5e5e5; } function copyCode(elementId) { const codeElement = document.getElementById(elementId); const codeText = codeElement.innerText || codeElement.textContent; navigator.clipboard.writeText(codeText).then(() => { alert(\"Code copied to clipboard!\"); }).catch((error) => { console.error(\"Failed to copy code: \", error); }); }","title":"Learn"},{"location":"learn/#quick-start","text":"Port operates by reflecting messages in the most recently updated repository. Try creating and editing a basic project to see how you can modify and configure projects. Follow along to understand the process better.","title":"Quick Start"},{"location":"learn/#how-to-create-a-port-project","text":"Before starting a Port project, you need to create a root folder that defines your messages. The subfolders within this root folder are managed as groups by Port, allowing users to organize messages by group. The root folder contains files with the *.enum extension and the structure of sub-group folders. Within the sub-group folders, message definition documents with the *.msg extension are created.","title":"How to create a port-project"},{"location":"learn/#1-repository","text":"The Port project is remarkably simple and straightforward. To get started, first create a project folder in the console, then type port new sample. This will quickly generate the project files. After that, create sub-group folders and add .msg files to each sub-group folder. Feel free to create messages using text, num, and enum types as you like. Once you've specified the attributes, type port push and Port will automatically store everything. Now, just run port run sample, and the server will start, allowing you to safely and easily share messages across multiple applications. Tip The repository name cannot contain special characters. It follows the directory naming rules provided by the operating system.","title":"1. Repository"},{"location":"learn/#2-group","text":"A group serves as the root of messages. Within a single group, multiple message files can be stored, allowing for easy retrieval and editing. By managing several .msg files within the group folder, you can conveniently organize and abstract them for streamlined management.","title":"2. Group"},{"location":"learn/#sample-project","text":"Download sample project","title":"Sample Project"},{"location":"learn/#how-to-add-messages","text":"To declare a message, you need to edit the *.msg file in the sub-folder you created. By defining message data types and attributes as shown below, you can later utilize various features such as automatic logging and backup. Additionally, you can define relationships using predefined relations.","title":"How to add messages"},{"location":"learn/#1-message-syntax","text":"[key] [datatype] [option...] A message is an object that allows users to specify pkg properties in a pre-provided Application Service. The message is a kv, and types and properties can be defined in that message. Please attach the materials attached below. [key] - unique key in the message group [datatype] - text | num | enum [attribute] - pkg,backup,rule,frame,property","title":"1. Message syntax"},{"location":"learn/#datatype","text":"name range description char 0~255 A fixed-length type with a total length of 255, where the variable is of the CHAR data type, allowing string values to be stored. num -1.7e+308 ~ +1.7e+308 The floating-point type that allows for the representation of decimal numbers and is capable of representing a wide range of values, both very small and very large. enum 0 ~ 65535 The user can utilize the fixed list values specified in the .enum file, which can be used at a lower cost than text values and with stricter usage.","title":"datatype"},{"location":"learn/#attribute","text":"name description pkg Real-time synchronization and messaging are handled within the corresponding external library. For more details, please refer to the pkg documentation. backup Changes are saved to the backup database as they occur, ensuring that values are restored upon application restart. and values are not propagated pkg messages during program execution. property Can specify a custom property rule Can specify rules to manage the values of corresponding messages. logging Auto logging support for messages Tip message document do not using special characters.","title":"attribute"},{"location":"learn/#2-sample","text":"BulbOnOff enum.OffOn pkg:Bulb1.OffOn RoomTemp1 num pkg:Heater1.Temp property:{\"MIN\":0,\"MAX\":300,\"Arguments\":\"C\"} RoomTemp2 num pkg:Heater1.Temp property:{\"MIN\":0,\"MAX\":300,\"Arguments\":\"F\"}","title":"2. Sample"},{"location":"learn/#how-to-add-enums","text":"","title":"How to add enums"},{"location":"learn/#1-enum-syntax","text":"Enums are particularly useful when you have a fixed set of values that a variable can take, such as days of the week, months of the year, or status codes. They help make your code more expressive, self-documenting, and less error-prone because you're working with named constants instead of raw integer values. enum item format like this [key] [item-name:number_key] [item-name:number_key] [key] - unique key in the enum message [item-name] - name by enum-item [property] - unique key in enum value","title":"1. Enum syntax"},{"location":"learn/#2-sample_1","text":"TFalse True:0 False:1 FTrue False:0 True:1 OffOn Off:0 On:1 OnOff On:0 Off:1","title":"2. Sample"},{"location":"learn/#how-to-add-rules","text":"To declare a rule, you need to edit the *.rule file in the sub-folder you created. The rule script can control whether the user can modify settings through the setable function. The first parameter is the condition that triggers the rule, and the second parameter is the condition that determines whether the setting is modifiable. When the user changes the message value, the function is automatically called to check these conditions.","title":"How to add rules"},{"location":"learn/#1-settrigger-script-syntax","text":"The set function is a conditional validation mechanism used to check and enforce logical constraints before accepting input actions. It is composed of two main parts:","title":"1. SetTrigger script syntax"},{"location":"learn/#input-condition","text":"A logical expression that specifies the input condition to be validated.","title":"Input Condition"},{"location":"learn/#validation-condition","text":"A logical expression that must evaluate to true for the input action to be accepted.","title":"Validation Condition"},{"location":"learn/#syntax","text":"set( <Input Condition> , <Validation Condition> );","title":"Syntax"},{"location":"learn/#2-gettrigger-script-syntax","text":"The GetTrigger serves as a conditional trigger mechanism for executing specific actions when defined conditions are met. It is composed of two main parts:","title":"2. GetTrigger script syntax"},{"location":"learn/#trigger-condition","text":"A logical expression that evaluates to true or false.","title":"Trigger Condition"},{"location":"learn/#action-script","text":"A set of instructions executed when the trigger condition evaluates to true.","title":"Action Script"},{"location":"learn/#syntax_1","text":"get( <Trigger Condition> , <Action Script> );","title":"Syntax"},{"location":"learn/#3-sample","text":"set(\"room1.BulbOnOff==Off\",\"(room1.RoomTemp1>=20)&&(room2.RoomTemp2>=20)\") set(\"room1.RoomTemp2>=30\",\"room2.RoomTemp2>=5\") get(\"(room1.RoomTemp1>=0)&&(room2.RoomTemp2>=0)\",\"room1.BulbOnOff=Off;room2.BulbOnOff=Off;\")","title":"3. Sample"},{"location":"learn/#how-to-import-packages","text":"A port package, in the context of software development, is a collection of pre-written code or modules that provide specific functionality, designed to be reused across different projects. By incorporating port packages into your application, you can save time and effort by leveraging existing solutions instead of building everything from scratch. Port packages typically include libraries, utilities, or tools that handle common tasks, such as data manipulation, network communication, or file handling. The main advantage of using port packages is that they promote reusability, allowing developers to share and reuse code, which improves efficiency and reduces redundancy. Additionally, port packages help to organize your code in a modular way, making it easier to maintain and update. it becomes much easier to install, update, and track dependencies, ensuring your application is always running with the right set of tools. In summary, port packages: Increase reusability by enabling the sharing of commonly used code. Enhance efficiency by reducing the need to write code from scratch. Improve maintainability by organizing code into smaller, manageable components. Simplify management through package managers that handle installation, updates, and dependency tracking.","title":"How to import packages"},{"location":"learn/#1-check-packages-list","text":"","title":"1. Check packages list"},{"location":"learn/#2-manual-for-bootjs-in-port-application","text":"Overview The boot.js file is a critical component of the Port Application. It initializes the system by importing and validating the necessary packages. If any package fails validation, the application stops booting and logs an error. Location The boot.js file is located in the app folder of the Port Application project. Ensure all edits are made directly in this file to modify the initialization process. Structure of boot.js Below is the typical structure of the boot.js file: import Bulb1 from `BulbLib1` import Bulb2 from `BulbLib2` import Heater1 from `HeaterLib1` import Heater2 from `HeaterLib2` function boot(){ if (!Bulb1.Valid()){ console.log(\"invalid Bubl1\"); return false; } if (!Bulb2.Valid()){ console.log(\"invalid Bubl2\"); return false; } if (!Heater1.Valid()){ console.log(\"invalid Heater1\"); return false; } if (!Heater2.Valid()){ console.log(\"invalid Heater2\"); return false; } return true; } After linking the relations to your project, you can verify the integration using the following command","title":"2. Manual for boot.js in Port Application"},{"location":"learn/#how-to-start-project","text":"Push to repository. port push","title":"How to start project"},{"location":"learn/#a-with-console","text":"Once all message definitions are complete, you can start the message server based on these definitions. Before running the server, upload all updated content to the local repository by entering port push in the console. Then, run the server with the command port run [project-name] . Tip When running the server, if you include --ng ignore in the command, it will summarize only the points where errors (NG) occur. For detailed information on these NG points, you can visit the following URL to view the NG point table: http://localhost:5001/api/app/ng/?view=table","title":"a. With console"},{"location":"learn/#b-with-applicationwpf","text":"","title":"b. With application(WPF)"},{"location":"learn/#how-to-check-logs","text":"Port Application records events and activities related to loaded packages, resource loading, console commands, services, and the overall project in various log folders. Logs play a vital role in troubleshooting and system analysis, providing users with crucial information and diagnostic tools.","title":"How to check logs"},{"location":"learn/#a-with-log-files","text":".../documents/port/logs Port Application provides the following subfolders under the port/logs/ path. Each folder records logs for specific activities: Pkg Folder : Logs are created when a package is loaded, and all events related to the package are recorded. Boot Folder : Logs are created when resources needed for project execution are loaded. Console Folder : Logs commands invoked through the Port Application. Service Folder : Logs related to the Port Package Manager service. Project Folder : Logs related to set/get operations and overall project-related logs.","title":"a. With log files"},{"location":"learn/#b-with-ssh","text":"Enter the command in your ssh application get sample.log","title":"b. With ssh"},{"location":"learn/#how-to-use-ssh","text":"SSH is a network protocol used for secure remote access to a computer system. It provides a secure way to access a remote computer without having direct access to its network. SSH is commonly used to connect to remote servers, perform administrative tasks, and access files and directories.","title":"How to use SSH"},{"location":"learn/#1-install-putty-application","text":"PuTTY is a popular free and open-source terminal emulator that supports various network protocols, such as SSH (Secure Shell), Telnet, and Rlogin. It is widely used for remotely accessing servers and systems over a network. PuTTY allows users to interact with remote machines via a command-line interface, making it a valuable tool for system administrators, developers, and IT professionals. Tip Download a putty application","title":"1. Install Putty application"},{"location":"learn/#2-connect-to-12700122","text":"Note port : 22 / username : admin / password : admin","title":"2. Connect to 127.0.0.1:22"},{"location":"learn/#3-enter-the-username-and-password","text":"","title":"3. Enter the username and password"},{"location":"learn/#4-enter-the-commands","text":"","title":"4. Enter the commands"},{"location":"learn/#how-to-use-mqtt","text":"MQTT is a lightweight messaging protocol primarily designed for efficient message transmission between IoT (Internet of Things) devices. This protocol is optimized to work in environments with limited network bandwidth, offering fast and reliable communication. MQTT is based on a publish/subscribe model, simplifying interactions between clients that send and receive data.","title":"How to use MQTT"},{"location":"learn/#1-mqtt-operation-flow","text":"1.Clients Clients can either publish messages to a specific topic or subscribe to topics to receive messages. A client can act as both a publisher and a subscriber. 2.Broker The broker is the central server that manages message distribution. It receives messages from publishers and forwards them to subscribers who are subscribed to the relevant topic(s). 3.Topics A topic is a string that represents the channel or category of a message. Clients subscribe to topics to receive messages. Topics can be hierarchical, allowing complex topic structures (e.g., home/livingroom/temperature). Steps in MQTT Communication: 4.Connection A client connects to the MQTT broker using a specific IP address and port. It may provide credentials for authentication.","title":"1. MQTT Operation Flow"},{"location":"learn/#2-connect-to-1270018080","text":"A client subscribes to one or more topics of interest. This tells the broker which messages it wants to receive. 1.Publishing Another client can publish a message to a topic. The broker will check which clients are subscribed to that topic. Message Distribution: The broker sends the message to all clients subscribed to the topic. The message is delivered according to the Quality of Service (QoS) level defined by the publisher and subscriber. 2.QoS Levels QoS 0: Message is delivered at most once (no guarantee of delivery). QoS 1: Message is delivered at least once (guaranteed delivery but possible duplication). QoS 2: Message is delivered exactly once (guaranteed delivery without duplication). 3.Disconnect After the communication, a client can disconnect from the broker, but the broker retains subscriptions for clients that maintain a persistent session. 4.Key Concepts Publish : A client sends a message to a topic (e.g., sending sensor data). Subscribe : A client listens to a specific topic to receive messagees. Broker : A server that handles the routing and delivery of messages. Topics : Categories or channels that messages are published to and subscribed from. Note port : 8080 / username : admin / password : admin","title":"2. Connect to 127.0.0.1:8080"},{"location":"learn/#3-how-to-use-mqtt-explorer","text":"First, you make *.pub file in your project directory path : ..\\sample\\app\\mqtt\\room1.pub url : app\\mqtt\\room1.pub room1 RoomTemp1 \\\\ [group-name] [message-name] room2 RoomTemp1 Tip mosquitto.org/download","title":"3. How to use Mqtt-explorer"},{"location":"learn/#4-its-working","text":".console { width: 80%; height: 80%; background-color: whitesmoke; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .yellow{ color:yellow; } .console-content { white-space: pre-wrap; } .console-content p { margin: 0; } .notepad { width: 100%; height: 80%; background-color: white; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .notepad:before { content: ''; position: absolute; top: 10px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad:after { content: ''; position: absolute; top: 30px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad-content { margin-top: 40px; } .notepad-content p { margin: 0 0 10px; line-height: 1.5; } .code-box { position: relative; background: #f5f5f5; border: 1px solid #ddd; border-radius: 5px; padding: 15px; margin: 20px 0; overflow: auto; font-family: \"Courier New\", Courier, monospace; } /* Code Styling */ .code-box pre { margin: 0; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word; background: none; padding: 0; } /* Copy Button */ .copy-button { position: absolute; top: 30px; right: 30px; color: white; border: none; border-radius: 3px; padding: 5px 5px; font-size: 14px; cursor: pointer; transition: background-color 0.3s; } .copy-button:hover { background-color: #e5e5e5; } function copyCode(elementId) { const codeElement = document.getElementById(elementId); const codeText = codeElement.innerText || codeElement.textContent; navigator.clipboard.writeText(codeText).then(() => { alert(\"Code copied to clipboard!\"); }).catch((error) => { console.error(\"Failed to copy code: \", error); }); }","title":"4. It's working!"},{"location":"license/","text":"Lincense \u00b6 Copyright \u00a9 PortDic. All rights reserved Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#lincense","text":"Copyright \u00a9 PortDic. All rights reserved Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Lincense"},{"location":"package/","text":"What's Package \u00b6 The Port package is a collection of reusable libraries. Users can develop packages by inheriting the PortObject , then link it to a Message, allowing for straightforward usage through Message calls. Download \u00b6 NAME Language Package Manager OS STABLE portdic C++ not yet Windows No portdic Delphi not yet Windows No portdic C# nuget Windows Yes portdic Python not yet Windows No portdic Javascript npm Any Yes Package Annotation \u00b6 name targets type arguments description Port class - Class Type Declaring a port attribute in a class designates that class as one managed by the port system. Once declared, the class can be registered as part of a package. Vaild method property bool invalid comment Maps the property to a pre-declared Message Property. Message property string|double - Messages are declared, and the values defined as properties can be controlled through package calls. Logger property ILogger - Specifies that the Logger field is to be injected with a logging system or service. Property property IProperty Message name Maps the property to a pre-declared Message Property. Valid \u00b6 [Valid(\"Invlid for connection\")] public bool Valid() { return true; } Port \u00b6 This annotation indicates that the Heater class is managed within the Port Package. using portpackage; using portdatatype; ... [Port(typeof(Heater))] public class Heater ... Logger \u00b6 This annotation specifies that the Logger field is to be injected with a logging system or service. using portpackage; using portdatatype; ... [Logger] public ILogger Logger { get; set; } ... Logger.Write(string.Join(\",\", v)); ... Property \u00b6 This annotation maps the property to a declared Message Property. using portpackage; using portdatatype; ... [Property] public IProperty Property { get; set; } ... if (this.Property.TryToGetValue(\"Unit\", out string v1)){ ... } ... Message \u00b6 Properties declared with Message Annotation are defined as API Messages and made available to the end-user. They apply only to properties with get and set accessors, and these getters and setters can be accessed and modified via a REST API. using portpackage; using portdatatype; ... private static Random r = new Random(100); [Message(PortDataType.Num, PropertyFormat.Json, \"Unit\")] public double Temp { get { try { if (this.Property != null) { if (this.Property.TryToGetValue(\"Unit\", out string v1) && (v1 == \"F\")) { return (r.NextDouble() * 9 / 5) + 32; } else if (this.Property.TryToGetValue(\"Unit\", out string v2) && (v2 == \"C\")) { return (r.NextDouble()); } else { return double.NaN; } } return double.NaN; } catch (Exception e) { if (Logger != null) Logger.Write(e.Message); } return double.NaN; } } EnumCode \u00b6 EnumCode Annotation are declared, the values of the enum can be accessed via an API. The API allows for the retrieval of information about the enumeration values, enabling external systems or users to interact with and obtain details about the enum through the API interface. [EnumCode] public enum TestEnum : ushort { _ = 0, TestEnumItem1, TestEnumItem2, } Comment \u00b6 When Comment Annotation are declared, the comments associated with the property can be exposed through the API. This allows users or external systems to access descriptive information or documentation about the property via the API, providing context and clarity on the property's purpose or usage. [Message,Commnet(\"this is a numberic\")] public int NValue { get => 3; } How to create a packages (.NET) \u00b6 Let's develop a package. In the Port Application, all operations are grouped at the package level and function at the message level. Every operation is defined within messages, allowing users to increase code reusability through messages. Create a class library \u00b6 bulb package \u00b6 using portpackage; using portdatatype; ... [Port(typeof(Bulb))] public class Bulb { [Logger] public ILogger Logger { get; set; } [Property] public IProperty Property { get; set; } private SerialPortStream serialPort = new SerialPortStream(); [Valid(\"\")] public bool Valid() { return true; } private string comport; [Message(PortDataType.Text)] public string Comport { set { try { if (this.serialPort.PortName != value) { this.serialPort = new SerialPortStream(); this.serialPort.PortName = value.ToString(); this.serialPort.BaudRate = 9600; this.serialPort.DataBits = 8; this.serialPort.StopBits = StopBits.One; this.serialPort.Parity = Parity.Even; } } catch (System.Exception ex) { Logger.Write(\"[ERROR]\" + ex.Message); } } get { return comport; } } private string offon = string.Empty; [Message(PortDataType.Enum, PropertyFormat.Json)] public string OffOn { set { var prop = this.Property; try { if (prop != null) { this.offon = value; } } catch (Exception ex) { Logger.Write(\"[ERROR]\" + ex.Message); } } get { return this.offon; } } } heater package \u00b6 using portpackage; using portdatatype; ... [Port(typeof(Heater))] public class Heater { [Logger] public ILogger Logger { get; set; } [Property] public IProperty Property { get; set; } [Message(PortDataType.Text)] public string Power { set; get; } [Valid(\"Invlid for connection\")] public bool Valid() { return true; } private static Random r = new Random(100); [Message(PortDataType.Num, PropertyFormat.Json, \"Unit\")] public double Temp { get { try { if (this.Property != null) { if (this.Property.TryToGetValue(\"Unit\", out string v1) && (v1 == \"F\")) { var ret = (r.NextDouble() * 9 / 5) + 32; if (ret == 0) { return 1; } return ret; } else if (this.Property.TryToGetValue(\"Unit\", out string v2) && (v2 == \"C\")) { var ret = (r.NextDouble()); if (ret == 0) { return 1; } return ret; } else { return double.NaN; } } return double.NaN; } catch (Exception e) { if (Logger != null) Logger.Write(e.Message); } return double.NaN; } } } Warning When creating a library in a .NET environment, declaring an excessively large array may result in a PrivateImplementationDetails error. It is recommended to use a List instead. How to publish a library \u00b6 This manual provides step-by-step instructions on how to publish a .NET Core project using Visual Studio Code. 1. Prerequisites Install .NET SDK: Make sure you have the latest version of the .NET SDK installed. Download here . Install C# Extension: Install the C# extension in Visual Studio Code from the Marketplace . Verify the Build: Ensure your project builds and runs correctly: dotnet build dotnet run 2. Publish Command Basic Publish Command Run the following command to publish your project: dotnet publish -c Release -o ./publish -c Release : Builds the project in Release mode. -o ./publish : Specifies the output folder for the published files. Publishing for Specific Runtime To target a specific runtime (e.g., Windows, Linux, macOS), use the following command: dotnet publish -c Release -r win-x64 --self-contained false -r win-x64 : Targets Windows 64-bit. Examples for other platforms: linux-x64 : Linux 64-bit osx-x64 : macOS 64-bit --self-contained false : Requires .NET runtime to be installed on the target environment. 3. Automating Publish with Tasks in VS Code Set up a task in VS Code to automate the publish process: Open the .vscode/tasks.json file. If it doesn\u2019t exist, create it. Add the following configuration: { \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"Publish .NET Core\", \"command\": \"dotnet\", \"type\": \"process\", \"args\": [ \"publish\", \"-c\", \"Release\", \"-o\", \"./publish\" ], \"problemMatcher\": \"$msCompile\" } ] } Run the task in VS Code: Open the Command Palette ( Ctrl+Shift+P ). Select Tasks: Run Task . Choose Publish .NET Core . 4. Deployment The published files will be available in the ./publish folder. Copy these files to the desired deployment location: Local Deployment: Copy files to a server or hosting environment. Docker Deployment: Use a Dockerfile to containerize your application: FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base WORKDIR /app COPY ./publish . ENTRYPOINT [\"dotnet\", \"YourApp.dll\"] 5. Logging and Debugging To log publish output to a file, use: dotnet publish > publish_log.txt Check the logs for any errors and resolve them before deployment. 6. Additional Resources Official .NET Publish Documentation Visual Studio Code Documentation 7. With VS2022 \u00b6 Packing packages \u00b6 cd [Publish target location] port pack [dllname] [pkg-name] check logs PS C:\\Users\\Public\\Dev\\publish> port pack HeaterLib.dll HeaterLib1 [PATH]C:\\Users\\Public\\Dev\\publish\\HeaterLib.dll [ALREADY_RUN]PORT PACKAGE MANAGER [RUN]PORT PACKAGE MANAGER [PACK][pack] Packing started at 2025-01-07T21:17:19+09:00 [PACK]load compelete C:\\Users\\Public\\Dev\\publish\\HeaterLib.dll : heaterlib [PACK][GET][0] Power [PACK][GET][1] Temp [PACK][SET][0] Power [PACK]heaterlib,65025 [PACK]initialization [CREATED][PACKAGE] ...\\port\\pkg\\HeaterLib1.pkg .console { width: 80%; height: 80%; background-color: whitesmoke; color: black; padding: 0px; box-sizing: border-box; border-radius: 8px; overflow-y: auto; } .yellow{ color:yellow; } .console-content { white-space: pre-wrap; } .console-content p { margin: 0; } .notepad { width: 100%; height: 80%; background-color: white; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .notepad:before { content: ''; position: absolute; top: 10px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad:after { content: ''; position: absolute; top: 30px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad-content { margin-top: 40px; } .notepad-content p { margin: 0 0 10px; line-height: 1.5; } pre { color: #f8f8f2; border-radius: 5px; padding:0px; overflow-x: auto; } code { font-family: monospace; background-color: #f4f4f4; padding: 2px 4px; border-radius: 4px; }","title":"Packages"},{"location":"package/#whats-package","text":"The Port package is a collection of reusable libraries. Users can develop packages by inheriting the PortObject , then link it to a Message, allowing for straightforward usage through Message calls.","title":"What's Package"},{"location":"package/#download","text":"NAME Language Package Manager OS STABLE portdic C++ not yet Windows No portdic Delphi not yet Windows No portdic C# nuget Windows Yes portdic Python not yet Windows No portdic Javascript npm Any Yes","title":"Download"},{"location":"package/#package-annotation","text":"name targets type arguments description Port class - Class Type Declaring a port attribute in a class designates that class as one managed by the port system. Once declared, the class can be registered as part of a package. Vaild method property bool invalid comment Maps the property to a pre-declared Message Property. Message property string|double - Messages are declared, and the values defined as properties can be controlled through package calls. Logger property ILogger - Specifies that the Logger field is to be injected with a logging system or service. Property property IProperty Message name Maps the property to a pre-declared Message Property.","title":"Package Annotation"},{"location":"package/#valid","text":"[Valid(\"Invlid for connection\")] public bool Valid() { return true; }","title":"Valid"},{"location":"package/#port","text":"This annotation indicates that the Heater class is managed within the Port Package. using portpackage; using portdatatype; ... [Port(typeof(Heater))] public class Heater ...","title":"Port"},{"location":"package/#logger","text":"This annotation specifies that the Logger field is to be injected with a logging system or service. using portpackage; using portdatatype; ... [Logger] public ILogger Logger { get; set; } ... Logger.Write(string.Join(\",\", v)); ...","title":"Logger"},{"location":"package/#property","text":"This annotation maps the property to a declared Message Property. using portpackage; using portdatatype; ... [Property] public IProperty Property { get; set; } ... if (this.Property.TryToGetValue(\"Unit\", out string v1)){ ... } ...","title":"Property"},{"location":"package/#message","text":"Properties declared with Message Annotation are defined as API Messages and made available to the end-user. They apply only to properties with get and set accessors, and these getters and setters can be accessed and modified via a REST API. using portpackage; using portdatatype; ... private static Random r = new Random(100); [Message(PortDataType.Num, PropertyFormat.Json, \"Unit\")] public double Temp { get { try { if (this.Property != null) { if (this.Property.TryToGetValue(\"Unit\", out string v1) && (v1 == \"F\")) { return (r.NextDouble() * 9 / 5) + 32; } else if (this.Property.TryToGetValue(\"Unit\", out string v2) && (v2 == \"C\")) { return (r.NextDouble()); } else { return double.NaN; } } return double.NaN; } catch (Exception e) { if (Logger != null) Logger.Write(e.Message); } return double.NaN; } }","title":"Message"},{"location":"package/#enumcode","text":"EnumCode Annotation are declared, the values of the enum can be accessed via an API. The API allows for the retrieval of information about the enumeration values, enabling external systems or users to interact with and obtain details about the enum through the API interface. [EnumCode] public enum TestEnum : ushort { _ = 0, TestEnumItem1, TestEnumItem2, }","title":"EnumCode"},{"location":"package/#comment","text":"When Comment Annotation are declared, the comments associated with the property can be exposed through the API. This allows users or external systems to access descriptive information or documentation about the property via the API, providing context and clarity on the property's purpose or usage. [Message,Commnet(\"this is a numberic\")] public int NValue { get => 3; }","title":"Comment"},{"location":"package/#how-to-create-a-packages-net","text":"Let's develop a package. In the Port Application, all operations are grouped at the package level and function at the message level. Every operation is defined within messages, allowing users to increase code reusability through messages.","title":"How to create a packages (.NET)"},{"location":"package/#create-a-class-library","text":"","title":"Create a class library"},{"location":"package/#bulb-package","text":"using portpackage; using portdatatype; ... [Port(typeof(Bulb))] public class Bulb { [Logger] public ILogger Logger { get; set; } [Property] public IProperty Property { get; set; } private SerialPortStream serialPort = new SerialPortStream(); [Valid(\"\")] public bool Valid() { return true; } private string comport; [Message(PortDataType.Text)] public string Comport { set { try { if (this.serialPort.PortName != value) { this.serialPort = new SerialPortStream(); this.serialPort.PortName = value.ToString(); this.serialPort.BaudRate = 9600; this.serialPort.DataBits = 8; this.serialPort.StopBits = StopBits.One; this.serialPort.Parity = Parity.Even; } } catch (System.Exception ex) { Logger.Write(\"[ERROR]\" + ex.Message); } } get { return comport; } } private string offon = string.Empty; [Message(PortDataType.Enum, PropertyFormat.Json)] public string OffOn { set { var prop = this.Property; try { if (prop != null) { this.offon = value; } } catch (Exception ex) { Logger.Write(\"[ERROR]\" + ex.Message); } } get { return this.offon; } } }","title":"bulb package"},{"location":"package/#heater-package","text":"using portpackage; using portdatatype; ... [Port(typeof(Heater))] public class Heater { [Logger] public ILogger Logger { get; set; } [Property] public IProperty Property { get; set; } [Message(PortDataType.Text)] public string Power { set; get; } [Valid(\"Invlid for connection\")] public bool Valid() { return true; } private static Random r = new Random(100); [Message(PortDataType.Num, PropertyFormat.Json, \"Unit\")] public double Temp { get { try { if (this.Property != null) { if (this.Property.TryToGetValue(\"Unit\", out string v1) && (v1 == \"F\")) { var ret = (r.NextDouble() * 9 / 5) + 32; if (ret == 0) { return 1; } return ret; } else if (this.Property.TryToGetValue(\"Unit\", out string v2) && (v2 == \"C\")) { var ret = (r.NextDouble()); if (ret == 0) { return 1; } return ret; } else { return double.NaN; } } return double.NaN; } catch (Exception e) { if (Logger != null) Logger.Write(e.Message); } return double.NaN; } } } Warning When creating a library in a .NET environment, declaring an excessively large array may result in a PrivateImplementationDetails error. It is recommended to use a List instead.","title":"heater package"},{"location":"package/#how-to-publish-a-library","text":"This manual provides step-by-step instructions on how to publish a .NET Core project using Visual Studio Code.","title":"How to publish a library"},{"location":"package/#7-with-vs2022","text":"","title":"7. With VS2022"},{"location":"package/#packing-packages","text":"cd [Publish target location] port pack [dllname] [pkg-name] check logs PS C:\\Users\\Public\\Dev\\publish> port pack HeaterLib.dll HeaterLib1 [PATH]C:\\Users\\Public\\Dev\\publish\\HeaterLib.dll [ALREADY_RUN]PORT PACKAGE MANAGER [RUN]PORT PACKAGE MANAGER [PACK][pack] Packing started at 2025-01-07T21:17:19+09:00 [PACK]load compelete C:\\Users\\Public\\Dev\\publish\\HeaterLib.dll : heaterlib [PACK][GET][0] Power [PACK][GET][1] Temp [PACK][SET][0] Power [PACK]heaterlib,65025 [PACK]initialization [CREATED][PACKAGE] ...\\port\\pkg\\HeaterLib1.pkg .console { width: 80%; height: 80%; background-color: whitesmoke; color: black; padding: 0px; box-sizing: border-box; border-radius: 8px; overflow-y: auto; } .yellow{ color:yellow; } .console-content { white-space: pre-wrap; } .console-content p { margin: 0; } .notepad { width: 100%; height: 80%; background-color: white; color: black; padding: 20px; box-sizing: border-box; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); overflow-y: auto; } .notepad:before { content: ''; position: absolute; top: 10px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad:after { content: ''; position: absolute; top: 30px; left: 20px; right: 20px; height: 2px; background-color: #ccc; } .notepad-content { margin-top: 40px; } .notepad-content p { margin: 0 0 10px; line-height: 1.5; } pre { color: #f8f8f2; border-radius: 5px; padding:0px; overflow-x: auto; } code { font-family: monospace; background-color: #f4f4f4; padding: 2px 4px; border-radius: 4px; }","title":"Packing packages"},{"location":"portdic/","text":"What's PortDic \u00b6 PortDic is a key-value pair data structure storage object provided by Port. Users can quickly look up values using keys, allowing for efficient data retrieval. This structure enables the storage and editing of multiple data structures, facilitating more stable and reliable development. Download \u00b6 NAME Language Package Manager OS STABLE portdic C++ not yet Windows No portdic Delphi not yet Windows No portdic C# nuget Windows Yes portdic Python not yet Windows No portdic Javascript npm Any Yes React (With vite) \u00b6 Download : React project SET / GET \u00b6 import { useState , useEffect } from 'react' import reactLogo from './assets/react.svg' import viteLogo from '/vite.svg' import './App.css' import { CallPortdic } from 'portdic' ; function App () { const [ setValue , setSetValue ] = useState ( \"\" ); const [ count , setCount ] = useState ( 0 ) const [ portdic , setPortdic ] = useState ( 0 ); useEffect (() => { CallPortdic ( \"localhost:5001\" ). then ( setPortdic ). catch ( console . error ); }, []); return ( <> < div > < a href = \"https://vite.dev\" target = \"_blank\" > < img src = { viteLogo } className = \"logo\" alt = \"Vite logo\" /> < /a> < a href = \"https://react.dev\" target = \"_blank\" > < img src = { reactLogo } className = \"logo react\" alt = \"React logo\" /> < /a> < /div> < div style = {{ display : \"flex\" , gap : \"20px\" , alignItems : \"center\" }} > < button onClick = {() => { const data = portdic . Execute ( \"version\" ); data . then (( resp ) => resp . json ()) . then (( data ) => { console . log ( \"success received:\" , data ); }) . catch (( error ) => { console . error ( \"error occurred:\" , error ); }); }} > Version < /button> < button onClick = {() => console . log ( portdic . Get ( \"room1\" , \"RoomTemp3\" )) } > Get < /button> < div style = {{ display : \"flex\" , gap : \"10px\" , alignItems : \"center\" }} > < input type = \"text\" placeholder = \"Set Value\" value = { setValue } onChange = {( e ) => setSetValue ( e . target . value )} style = {{ padding : \"5px\" , fontSize : \"14px\" , borderRadius : \"4px\" , border : \"1px solid #ccc\" , }} /> < button onClick = {() => { portdic . Set ( \"room1\" , \"RoomTemp3\" , setValue ); console . log ( `Set value: ${ setValue } ` ); }} > Set < /button> < /div> < /div> < h1 > Vite + React < /h1> < div className = \"card\" > < button onClick = {() => setCount (( count ) => count + 1 )} > count is { count } < /button> < p > Edit < code > src / App . jsx < /code> and save to test HMR < /p> < /div> < p className = \"read-the-docs\" > Click on the Vite and React logos to learn more < /p> < /> ) } export default App It's working! \u00b6 .Net \u00b6 Run \u00b6 ... private static IPortDic port = Port . GetDictionary ( \"sample\" ); public Form () { InitializeComponent (); // port . OnOccurred += Port_OnOccurred ; port . OnStatusChanged += Port_OnStatusChanged ; // port . Run (); } /// <summary> /// The OnStatusChanged event is typically used to notify when the status of an port server /// has changed. /// This event provides details about the event through <see cref=\"PortStatusHandler\"/>. /// </summary> private void Port_OnStatusChanged ( object sender , PortStatusArgs e ) { switch ( e . Status ) { case PortStauts . Initializing : break ; case PortStauts . Running : OnReady = true ; break ; case PortStauts . Stopped : break ; case PortStauts . Shutdown : break ; case PortStauts . Failed : break ; } } /// <summary> /// The OnStatusChanged event is typically used to notify when the status of an port server /// has changed. /// This event provides details about the event through <see cref=\"PortStatusHandler\"/>. /// </summary> private void Port_OnOccurred ( object sender , PortEventArgs e ) { switch ( e . EventType ) { default : Console . WriteLine ( e . Message ); break ; } } ... Test Package \u00b6 ... private static IPortDic port = Port . GetDictionary ( \"sample\" ); public Form () { InitializeComponent (); // Test Mode Heater Class with messaegs. port . Test ( \"Heater1\" , new Heater ()); port . OnOccurred += Port_OnOccurred ; port . OnStatusChanged += Port_OnStatusChanged ; // port . Run (); } ... SET/GET \u00b6 ... var ok = dic . Set ( ' room1 ',' BulbOnOff ',' On ' ); if ( ok ){ Console . WriteLine ( \"ok\" ); } // 'On' Console . WriteLine ( dic . Get ( ' room1 ',' BulbOnOff ' ). Text ()); port [ \"room1\" ]. Set ( \"BulbOnOff\" , ' Off ' ); // 'Off' Console . WriteLine ( dic . Get ( ' room1 ',' BulbOnOff ' ). Text ()); var t1 = dic . Get ( ' room1 ',' RoomTemp1 ' ) // random number unit Celsius Console . WriteLine ( t1 . Text ()); var t2 = dic . Get ( ' room1 ',' RoomTemp2 ' ) // random number unit Fahrenheit Console . WriteLine ( t2 . Text ()); ...","title":"Dictionary"},{"location":"portdic/#whats-portdic","text":"PortDic is a key-value pair data structure storage object provided by Port. Users can quickly look up values using keys, allowing for efficient data retrieval. This structure enables the storage and editing of multiple data structures, facilitating more stable and reliable development.","title":"What's PortDic"},{"location":"portdic/#download","text":"NAME Language Package Manager OS STABLE portdic C++ not yet Windows No portdic Delphi not yet Windows No portdic C# nuget Windows Yes portdic Python not yet Windows No portdic Javascript npm Any Yes","title":"Download"},{"location":"portdic/#react-with-vite","text":"Download : React project","title":"React (With vite)"},{"location":"portdic/#set-get","text":"import { useState , useEffect } from 'react' import reactLogo from './assets/react.svg' import viteLogo from '/vite.svg' import './App.css' import { CallPortdic } from 'portdic' ; function App () { const [ setValue , setSetValue ] = useState ( \"\" ); const [ count , setCount ] = useState ( 0 ) const [ portdic , setPortdic ] = useState ( 0 ); useEffect (() => { CallPortdic ( \"localhost:5001\" ). then ( setPortdic ). catch ( console . error ); }, []); return ( <> < div > < a href = \"https://vite.dev\" target = \"_blank\" > < img src = { viteLogo } className = \"logo\" alt = \"Vite logo\" /> < /a> < a href = \"https://react.dev\" target = \"_blank\" > < img src = { reactLogo } className = \"logo react\" alt = \"React logo\" /> < /a> < /div> < div style = {{ display : \"flex\" , gap : \"20px\" , alignItems : \"center\" }} > < button onClick = {() => { const data = portdic . Execute ( \"version\" ); data . then (( resp ) => resp . json ()) . then (( data ) => { console . log ( \"success received:\" , data ); }) . catch (( error ) => { console . error ( \"error occurred:\" , error ); }); }} > Version < /button> < button onClick = {() => console . log ( portdic . Get ( \"room1\" , \"RoomTemp3\" )) } > Get < /button> < div style = {{ display : \"flex\" , gap : \"10px\" , alignItems : \"center\" }} > < input type = \"text\" placeholder = \"Set Value\" value = { setValue } onChange = {( e ) => setSetValue ( e . target . value )} style = {{ padding : \"5px\" , fontSize : \"14px\" , borderRadius : \"4px\" , border : \"1px solid #ccc\" , }} /> < button onClick = {() => { portdic . Set ( \"room1\" , \"RoomTemp3\" , setValue ); console . log ( `Set value: ${ setValue } ` ); }} > Set < /button> < /div> < /div> < h1 > Vite + React < /h1> < div className = \"card\" > < button onClick = {() => setCount (( count ) => count + 1 )} > count is { count } < /button> < p > Edit < code > src / App . jsx < /code> and save to test HMR < /p> < /div> < p className = \"read-the-docs\" > Click on the Vite and React logos to learn more < /p> < /> ) } export default App","title":"SET / GET"},{"location":"portdic/#its-working","text":"","title":"It's working!"},{"location":"portdic/#net","text":"","title":".Net"},{"location":"portdic/#run","text":"... private static IPortDic port = Port . GetDictionary ( \"sample\" ); public Form () { InitializeComponent (); // port . OnOccurred += Port_OnOccurred ; port . OnStatusChanged += Port_OnStatusChanged ; // port . Run (); } /// <summary> /// The OnStatusChanged event is typically used to notify when the status of an port server /// has changed. /// This event provides details about the event through <see cref=\"PortStatusHandler\"/>. /// </summary> private void Port_OnStatusChanged ( object sender , PortStatusArgs e ) { switch ( e . Status ) { case PortStauts . Initializing : break ; case PortStauts . Running : OnReady = true ; break ; case PortStauts . Stopped : break ; case PortStauts . Shutdown : break ; case PortStauts . Failed : break ; } } /// <summary> /// The OnStatusChanged event is typically used to notify when the status of an port server /// has changed. /// This event provides details about the event through <see cref=\"PortStatusHandler\"/>. /// </summary> private void Port_OnOccurred ( object sender , PortEventArgs e ) { switch ( e . EventType ) { default : Console . WriteLine ( e . Message ); break ; } } ...","title":"Run"},{"location":"portdic/#test-package","text":"... private static IPortDic port = Port . GetDictionary ( \"sample\" ); public Form () { InitializeComponent (); // Test Mode Heater Class with messaegs. port . Test ( \"Heater1\" , new Heater ()); port . OnOccurred += Port_OnOccurred ; port . OnStatusChanged += Port_OnStatusChanged ; // port . Run (); } ...","title":"Test Package"},{"location":"portdic/#setget","text":"... var ok = dic . Set ( ' room1 ',' BulbOnOff ',' On ' ); if ( ok ){ Console . WriteLine ( \"ok\" ); } // 'On' Console . WriteLine ( dic . Get ( ' room1 ',' BulbOnOff ' ). Text ()); port [ \"room1\" ]. Set ( \"BulbOnOff\" , ' Off ' ); // 'Off' Console . WriteLine ( dic . Get ( ' room1 ',' BulbOnOff ' ). Text ()); var t1 = dic . Get ( ' room1 ',' RoomTemp1 ' ) // random number unit Celsius Console . WriteLine ( t1 . Text ()); var t2 = dic . Get ( ' room1 ',' RoomTemp2 ' ) // random number unit Fahrenheit Console . WriteLine ( t2 . Text ()); ...","title":"SET/GET"},{"location":"reference/","text":"API reference \u00b6 Introduction \u00b6 This page explains how the Port client calls the Port backend API. Tip Before making any API calls, please ensure that the server is running properly. If the server is not functioning correctly, API calls may fail. Therefore, verify the server's operational status before initiating any API calls. Authentication \u00b6 When authentication functionality is activated within the HOST application, service-calling applications are required to request a key from the HOST before making API calls to ensure proper authentication and access to services. This security feature remains disabled by default. GET \u00b6 Application \u00b6 URL Description /api/app/ show up application information /api/ng/ show up ng-list /api/download/ download somthing... /api/enum enum list Group \u00b6 URL Description /api/{group-name}/ accessor data /api/{group-name}/keys key list /api/{group-name}/kv key-value list /api/{group-name}/datatype key-datatype list /api/{group-name}/enumid enumid list API \u00b6 URL Description /api/{name}/ api information /api/{name}/keys key list /api/{name}/kv key-value list /api/{name}/set set-message list /api/{name}/get get-message list POST \u00b6 Application \u00b6 URL Description /api/enum/{enum} key list Group \u00b6 URL Description /api/{group-name}/ relation information /api/{group-name}/message/{[key]}?{[datatype] [property...]} add message PUT \u00b6 Group \u00b6 URL Description /api/{group-name}/{[key]}?{[set-value]} set value to group-message Relation \u00b6 URL Description /api/{relation-name}/{[key]}?{[set-value]} set value to relation-message DELETE \u00b6 Group \u00b6 URL Description /api/{group-name}/message/{[key]}","title":"API reference"},{"location":"reference/#api-reference","text":"","title":"API reference"},{"location":"reference/#introduction","text":"This page explains how the Port client calls the Port backend API. Tip Before making any API calls, please ensure that the server is running properly. If the server is not functioning correctly, API calls may fail. Therefore, verify the server's operational status before initiating any API calls.","title":"Introduction"},{"location":"reference/#authentication","text":"When authentication functionality is activated within the HOST application, service-calling applications are required to request a key from the HOST before making API calls to ensure proper authentication and access to services. This security feature remains disabled by default.","title":"Authentication"},{"location":"reference/#get","text":"","title":"GET"},{"location":"reference/#application","text":"URL Description /api/app/ show up application information /api/ng/ show up ng-list /api/download/ download somthing... /api/enum enum list","title":"Application"},{"location":"reference/#group","text":"URL Description /api/{group-name}/ accessor data /api/{group-name}/keys key list /api/{group-name}/kv key-value list /api/{group-name}/datatype key-datatype list /api/{group-name}/enumid enumid list","title":"Group"},{"location":"reference/#api","text":"URL Description /api/{name}/ api information /api/{name}/keys key list /api/{name}/kv key-value list /api/{name}/set set-message list /api/{name}/get get-message list","title":"API"},{"location":"reference/#post","text":"","title":"POST"},{"location":"reference/#application_1","text":"URL Description /api/enum/{enum} key list","title":"Application"},{"location":"reference/#group_1","text":"URL Description /api/{group-name}/ relation information /api/{group-name}/message/{[key]}?{[datatype] [property...]} add message","title":"Group"},{"location":"reference/#put","text":"","title":"PUT"},{"location":"reference/#group_2","text":"URL Description /api/{group-name}/{[key]}?{[set-value]} set value to group-message","title":"Group"},{"location":"reference/#relation","text":"URL Description /api/{relation-name}/{[key]}?{[set-value]} set value to relation-message","title":"Relation"},{"location":"reference/#delete","text":"","title":"DELETE"},{"location":"reference/#group_3","text":"URL Description /api/{group-name}/message/{[key]}","title":"Group"},{"location":"sdk/","text":"What's PortSDK? \u00b6 Port offers a Software Development Kit (SDK) for developing system applications. With this SDK, developers can create consistent software that provides package, libraries, and structured documentation to end users, enabling more efficient configuration management. Get Started \u00b6 Download \u00b6 NAME Language Package Manager OS STABLE Port.SDK C# Nuget Windows x64 Yes Package \u00b6 All objects inheriting from the package can invoke messages defined in the class via the Port Application. These messages are defined through an existing API Document, and additional attributes can be defined to provide messages with extra functionalities. Class Name \u00b6 The class name must be declared as Port C# \u00b6 public class Port : PortObject { public Port () { this . SetLogger ( new ExLogger ()); } public override bool Init () { // initialized method } public override void Dispose () { } private SerialPort serial = new SerialPort (); [Message, Reserved(ReservedAttribute.Type.Address), Regex(RegexAttribute.ComRegex)] public string Address { get ; set ; } [Message] public int NValue { get => 3 ; } [Message] public double DValue { get => 2 ; } [Message] public string StrValue { get => \"on\" ; } } Attributes \u00b6 Message Attributes \u00b6 Properties declared with Message Attributes are defined as API Messages and made available to the end-user. They apply only to properties with get and set accessors, and these getters and setters can be accessed and modified via a REST API. [Message] public int NValue { get => 3; } Reserved Attributes \u00b6 [Message, Reserved(ReservedAttribute.Type.Address), Regex(RegexAttribute.ComportRegex)] public string Address { get; set; } Regex Attributes \u00b6 Properties with Regex Attributes are subjected to a regular expression check when their values are changed. If the value does not pass the validation check, it is not updated, ensuring consistency and validity of the property's value. [Message, Regex(RegexAttribute.Ip4vRegex)] public string Address { get; set; } EnumCode Attributes \u00b6 EnumCode Attributes are declared, the values of the enum can be accessed via an API. The API allows for the retrieval of information about the enumeration values, enabling external systems or users to interact with and obtain details about the enum through the API interface. [EnumCode] public enum TestEnum : ushort { _ = 0, TestEnumItem1, TestEnumItem2, } Comment Attributes \u00b6 When Comment Attributes are declared, the comments associated with the property can be exposed through the API. This allows users or external systems to access descriptive information or documentation about the property via the API, providing context and clarity on the property's purpose or usage. [Message,Commnet(\"this is a numberic\")] public int NValue { get => 3; }","title":"What's PortSDK?"},{"location":"sdk/#whats-portsdk","text":"Port offers a Software Development Kit (SDK) for developing system applications. With this SDK, developers can create consistent software that provides package, libraries, and structured documentation to end users, enabling more efficient configuration management.","title":"What's PortSDK?"},{"location":"sdk/#get-started","text":"","title":"Get Started"},{"location":"sdk/#download","text":"NAME Language Package Manager OS STABLE Port.SDK C# Nuget Windows x64 Yes","title":"Download"},{"location":"sdk/#package","text":"All objects inheriting from the package can invoke messages defined in the class via the Port Application. These messages are defined through an existing API Document, and additional attributes can be defined to provide messages with extra functionalities.","title":"Package"},{"location":"sdk/#class-name","text":"The class name must be declared as Port","title":"Class Name"},{"location":"sdk/#c","text":"public class Port : PortObject { public Port () { this . SetLogger ( new ExLogger ()); } public override bool Init () { // initialized method } public override void Dispose () { } private SerialPort serial = new SerialPort (); [Message, Reserved(ReservedAttribute.Type.Address), Regex(RegexAttribute.ComRegex)] public string Address { get ; set ; } [Message] public int NValue { get => 3 ; } [Message] public double DValue { get => 2 ; } [Message] public string StrValue { get => \"on\" ; } }","title":"C#"},{"location":"sdk/#attributes","text":"","title":"Attributes"},{"location":"sdk/#message-attributes","text":"Properties declared with Message Attributes are defined as API Messages and made available to the end-user. They apply only to properties with get and set accessors, and these getters and setters can be accessed and modified via a REST API. [Message] public int NValue { get => 3; }","title":"Message Attributes"},{"location":"sdk/#reserved-attributes","text":"[Message, Reserved(ReservedAttribute.Type.Address), Regex(RegexAttribute.ComportRegex)] public string Address { get; set; }","title":"Reserved Attributes"},{"location":"sdk/#regex-attributes","text":"Properties with Regex Attributes are subjected to a regular expression check when their values are changed. If the value does not pass the validation check, it is not updated, ensuring consistency and validity of the property's value. [Message, Regex(RegexAttribute.Ip4vRegex)] public string Address { get; set; }","title":"Regex Attributes"},{"location":"sdk/#enumcode-attributes","text":"EnumCode Attributes are declared, the values of the enum can be accessed via an API. The API allows for the retrieval of information about the enumeration values, enabling external systems or users to interact with and obtain details about the enum through the API interface. [EnumCode] public enum TestEnum : ushort { _ = 0, TestEnumItem1, TestEnumItem2, }","title":"EnumCode Attributes"},{"location":"sdk/#comment-attributes","text":"When Comment Attributes are declared, the comments associated with the property can be exposed through the API. This allows users or external systems to access descriptive information or documentation about the property via the API, providing context and clarity on the property's purpose or usage. [Message,Commnet(\"this is a numberic\")] public int NValue { get => 3; }","title":"Comment Attributes"},{"location":"secs/","text":"SECS Message Format Specification \u00b6 Table of Contents \u00b6 Overview HSMS Message Structure SECS-II Data Format Stream Definitions Message Categories Common Message Examples Implementation Guidelines Overview \u00b6 This document describes the SECS (Semiconductor Equipment Communication Standard) message format as defined in SEMI E5 specification SECS defines a standardized communication protocol for semiconductor manufacturing equipment, enabling consistent equipment integration and automation. HSMS Message Structure \u00b6 Message Layout \u00b6 [4 bytes: Length][10 bytes: Header][Variable: SECS-II Data] Header Format (10 bytes) \u00b6 Byte 0-1: Session ID (2 bytes) Byte 2: Stream (7 bits) + Wait Bit (1 bit) Byte 3: Function (1 byte) Byte 4: PType (1 byte) - always 0 for data messages Byte 5: SType (1 byte) - always 0 for data messages Byte 6-9: System Bytes (4 bytes) - unique message identifier Wait Bit \u00b6 Set (1) : Primary message requiring response Clear (0) : Secondary message (response) or no response required Message Length \u00b6 4-byte big-endian integer preceding the header Excludes the length field itself (only counts header + data) SECS-II Data Format \u00b6 Data Item Format \u00b6 [Format Byte][Length Byte(s)][Data Bytes] Format Codes \u00b6 Format Type Description 0x01 List Container for multiple items 0x21 Binary Binary data (1 byte length) 0x25 Binary Binary data (2 byte length) 0x29 Binary Binary data (3 byte length) 0x41 ASCII ASCII text (1 byte length) 0x45 ASCII ASCII text (2 byte length) 0x61 JIS-8 Japanese text (1 byte length) 0x71 2-byte Signed 2-byte integer (1 byte length) 0x75 2-byte Signed 2-byte integer (2 byte length) 0x81 1-byte Signed 1-byte integer (1 byte length) 0x91 8-byte Signed 8-byte integer (1 byte length) 0xA1 4-byte Signed 4-byte integer (1 byte length) 0xB1 Float 4-byte floating point (1 byte length) 0xC1 8-byte Unsigned 8-byte integer (1 byte length) 0xD1 4-byte Unsigned 4-byte integer (1 byte length) 0xE1 2-byte Unsigned 2-byte integer (1 byte length) 0xF1 1-byte Unsigned 1-byte integer (1 byte length) Stream Definitions \u00b6 Stream 1: Equipment Status \u00b6 Purpose : Equipment state information and basic communication Message Direction Description S1F1 \u2192 Equipment Are You There (Request) S1F2 \u2190 Equipment Are You There (Response) S1F3 \u2192 Equipment Selected Equipment Status Request S1F4 \u2190 Equipment Selected Equipment Status Response S1F11 \u2192 Equipment Status Variable Namelist Request S1F12 \u2190 Equipment Status Variable Namelist Response S1F13 \u2192 Equipment Establish Communications Request S1F14 \u2190 Equipment Establish Communications Response S1F15 \u2192 Equipment Request Offline S1F16 \u2190 Equipment Offline Acknowledge S1F17 \u2192 Equipment Request Online S1F18 \u2190 Equipment Online Acknowledge S1F19 \u2192 Equipment Recipe Name Request S1F20 \u2190 Equipment Recipe Name Response S1F21 \u2192 Equipment Recipe Body Request S1F22 \u2190 Equipment Recipe Body Response S1F23 \u2192 Equipment Process Program Request S1F24 \u2190 Equipment Process Program Response S1F1 - Are You There (Request) \u00b6 Format: <none> (empty data) S1F2 - Are You There (Response) \u00b6 Format: <none> (empty data) or {L:0} (empty list) S1F3 - Selected Equipment Status Request \u00b6 Format: {L:n SVID_1 SVID_2 ... SVID_n } Where: - SVID: Status Variable ID (U1, U2, U4, or A) S1F4 - Selected Equipment Status Response \u00b6 Format: {L:n SV_1 SV_2 ... SV_n } Where: - SV: Status Variable value (any format) S1F13 - Establish Communications Request \u00b6 Format: {L:2 MDLN SOFTREV } Where: - MDLN: Model Number (A[20]) - SOFTREV: Software Revision (A[20]) Or simply: <L:0> (empty list) S1F14 - Establish Communications Response \u00b6 Format: {L:2 COMMACK {L:2 MDLN SOFTREV } } Where: - COMMACK: Communication Acknowledge (B[1]) - 0: Accepted - 1: Denied, Try Again - 2: Denied, Permission Not Granted - MDLN: Model Number (A[20]) - SOFTREV: Software Revision (A[20]) S1F15 - Request Offline \u00b6 Format: <none> (empty data) S1F16 - Offline Acknowledge \u00b6 Format: OFLACK Where: - OFLACK: Offline Acknowledge (B[1]) - 0: Offline Accepted - 1: Offline Not Allowed S1F17 - Request Online \u00b6 Format: <none> (empty data) S1F18 - Online Acknowledge \u00b6 Format: ONLACK Where: - ONLACK: Online Acknowledge (B[1]) - 0: Online Accepted - 1: Online Not Allowed S1F19 - Recipe Name Request \u00b6 Format: <none> (empty data) S1F20 - Recipe Name Response \u00b6 Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A) S1F21 - Recipe Body Request \u00b6 Format: PPID Where: - PPID: Process Program ID (A) S1F22 - Recipe Body Response \u00b6 Format: {L:2 PPID PPBODY } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) S1F23 - Process Program Request \u00b6 Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A) S1F24 - Process Program Response \u00b6 Format: {L:n {L:3 PPID PPBODY PPSTATUS } } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) - PPSTATUS: Process Program Status (U1) - 0: Available - 1: Not Available - 2: In Use - 3: Error Stream 2: Equipment Control and Diagnostics \u00b6 Purpose : Equipment configuration and diagnostic operations Message Direction Description S2F1 \u2192 Equipment Equipment Status Request S2F2 \u2190 Equipment Equipment Status Response S2F3 \u2192 Equipment Status Variable Value Request S2F4 \u2190 Equipment Status Variable Value Response S2F5 \u2190 Equipment Send Equipment Status S2F6 \u2192 Equipment Send Equipment Status Acknowledge S2F7 \u2192 Equipment Load Port Status Request S2F8 \u2190 Equipment Load Port Status Response S2F9 \u2192 Equipment Equipment Status Multi-Block Inquire S2F10 \u2190 Equipment Equipment Status Multi-Block Grant S2F11 \u2190 Equipment Equipment Status Multi-Block S2F12 \u2192 Equipment Equipment Status Multi-Block Acknowledge S2F13 \u2192 Equipment Equipment Constant Request S2F14 \u2190 Equipment Equipment Constant Response S2F15 \u2192 Equipment New Equipment Constant Send S2F16 \u2190 Equipment New Equipment Constant Acknowledge S2F17 \u2192 Equipment Date and Time Request S2F18 \u2190 Equipment Date and Time Response S2F19 \u2192 Equipment Recipe Body Request S2F20 \u2190 Equipment Recipe Body Response S2F21 \u2192 Equipment Recipe Body Send S2F22 \u2190 Equipment Recipe Body Acknowledge S2F23 \u2192 Equipment Trace Initialize Send S2F24 \u2190 Equipment Trace Initialize Acknowledge S2F25 \u2192 Equipment Loopback Diagnostic Request S2F26 \u2190 Equipment Loopback Diagnostic Response S2F27 \u2192 Equipment Initiate Processing Request S2F28 \u2190 Equipment Initiate Processing Acknowledge S2F29 \u2192 Equipment Equipment Constant Namelist Request S2F30 \u2190 Equipment Equipment Constant Namelist Response S2F31 \u2192 Equipment Date and Time Set Request S2F32 \u2190 Equipment Date and Time Set Response S2F33 \u2192 Equipment Define Report S2F34 \u2190 Equipment Define Report Acknowledge S2F35 \u2192 Equipment Link Event Report S2F36 \u2190 Equipment Link Event Report Acknowledge S2F37 \u2192 Equipment Enable/Disable Event Report S2F38 \u2190 Equipment Enable/Disable Event Report Acknowledge S2F39 \u2192 Equipment Status Variable Namelist Request S2F40 \u2190 Equipment Status Variable Namelist Response S2F41 \u2192 Equipment Host Command Send S2F42 \u2190 Equipment Host Command Acknowledge S2F43 \u2192 Equipment Reset Spooling Streams and Functions S2F44 \u2190 Equipment Reset Spooling Acknowledge S2F45 \u2192 Equipment Define Variable Limit Attributes S2F46 \u2190 Equipment Define Variable Limit Attributes Acknowledge S2F47 \u2192 Equipment Variable Limit Attribute Request S2F48 \u2190 Equipment Variable Limit Attribute Response S2F49 \u2192 Equipment Enhanced Remote Command S2F50 \u2190 Equipment Enhanced Remote Command Acknowledge S2F51 \u2192 Equipment Automated Substrate Mapping S2F52 \u2190 Equipment Automated Substrate Mapping Acknowledge S2F53 \u2192 Equipment Enhanced Define Report S2F54 \u2190 Equipment Enhanced Define Report Acknowledge S2F55 \u2192 Equipment Enhanced Link Event Report S2F56 \u2190 Equipment Enhanced Link Event Report Acknowledge S2F57 \u2192 Equipment Enhanced Enable/Disable Event Report S2F58 \u2190 Equipment Enhanced Enable/Disable Event Report Acknowledge S2F59 \u2192 Equipment Formatted Process Program Send S2F60 \u2190 Equipment Formatted Process Program Acknowledge S2F61 \u2192 Equipment Formatted Process Program Request S2F62 \u2190 Equipment Formatted Process Program Response S2F63 \u2192 Equipment Define Object S2F64 \u2190 Equipment Define Object Acknowledge S2F1 - Equipment Status Request \u00b6 Format: {L:n SVID_1 SVID_2 ... SVID_n } Where: - SVID: Status Variable ID (U1, U2, U4, or A) S2F2 - Equipment Status Response \u00b6 Format: {L:n SV_1 SV_2 ... SV_n } Where: - SV: Status Variable value (any format) S2F13 - Equipment Constant Request \u00b6 Format: {L:n ECID_1 ECID_2 ... ECID_n } Where: - ECID: Equipment Constant ID (U1, U2, U4, or A) S2F14 - Equipment Constant Response \u00b6 Format: {L:n ECV_1 ECV_2 ... ECV_n } Where: - ECV: Equipment Constant Value (any format) S2F15 - New Equipment Constant Send \u00b6 Format: {L:n {L:2 ECID ECV } } Where: - ECID: Equipment Constant ID (U1, U2, U4, or A) - ECV: Equipment Constant Value (any format) S2F16 - New Equipment Constant Acknowledge \u00b6 Format: EAC Where: - EAC: Equipment Acknowledge Code (B[1]) - 0: Accepted - 1: Denied, At least one constant does not exist - 2: Denied, Busy - 3: Denied, At least one constant out of range S2F17 - Date and Time Request \u00b6 Format: <none> (empty data) S2F18 - Date and Time Response \u00b6 Format: TIME Where: - TIME: Current Time (A[16]) format: \"YYMMDDhhmmss[cc]\" - YY: Year (2 digits) - MM: Month (01-12) - DD: Day (01-31) - hh: Hour (00-23) - mm: Minute (00-59) - ss: Second (00-59) - cc: Centisecond (00-99) optional S2F31 - Date and Time Set Request \u00b6 Format: TIME Where: - TIME: Time to Set (A[16]) format: \"YYMMDDhhmmss[cc]\" S2F32 - Date and Time Set Response \u00b6 Format: TIACK Where: - TIACK: Time Acknowledge (B[1]) - 0: Acknowledged - 1: Error S2F33 - Define Report \u00b6 Format: {L:n {L:2 DATAID {L:m {L:2 RPTID {L:k VID_1 VID_2 ... VID_k } } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A) - VID: Variable ID (U1, U2, U4, or A) S2F34 - Define Report Acknowledge \u00b6 Format: DRACK Where: - DRACK: Define Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one RPTID already defined - 4: Denied, At least one VID does not exist S2F35 - Link Event Report \u00b6 Format: {L:n {L:2 DATAID {L:m {L:2 CEID {L:k RPTID_1 RPTID_2 ... RPTID_k } } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CEID: Collection Event ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A) S2F36 - Link Event Report Acknowledge \u00b6 Format: LRACK Where: - LRACK: Link Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one CEID already defined - 4: Denied, At least one CEID does not exist - 5: Denied, At least one RPTID does not exist S2F37 - Enable/Disable Event Report \u00b6 Format: {L:2 CEED {L:n CEID_1 CEID_2 ... CEID_n } } Where: - CEED: Collection Event Enable/Disable (BOOLEAN) - True: Enable - False: Disable - CEID: Collection Event ID (U1, U2, U4, or A) S2F38 - Enable/Disable Event Report Acknowledge \u00b6 Format: ERACK Where: - ERACK: Enable/Disable Event Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, At least one CEID does not exist - 2: Denied, Busy S2F3 - Status Variable Value Request \u00b6 Format: {L:n SVID_1 SVID_2 ... SVID_n } Where: - SVID: Status Variable ID (U1, U2, U4, or A) S2F4 - Status Variable Value Response \u00b6 Format: {L:n SV_1 SV_2 ... SV_n } Where: - SV: Status Variable value (any format) S2F5 - Send Equipment Status \u00b6 Format: {L:n {L:2 SVID SV } } Where: - SVID: Status Variable ID (U1, U2, U4, or A) - SV: Status Variable value (any format) S2F6 - Send Equipment Status Acknowledge \u00b6 Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S2F7 - Load Port Status Request \u00b6 Format: {L:n PORTID_1 PORTID_2 ... PORTID_n } Where: - PORTID: Port ID (U1, U2, U4, or A) S2F8 - Load Port Status Response \u00b6 Format: {L:n {L:3 PORTID PORTSTATE PORTMODE } } Where: - PORTID: Port ID (U1, U2, U4, or A) - PORTSTATE: Port State (U1) - 0: Unloaded - 1: Transfer Blocked - 2: Ready to Load - 3: Ready to Unload - 4: Transfer Ready - PORTMODE: Port Mode (U1) - 0: Manual - 1: Auto S2F9 - Equipment Status Multi-Block Inquire \u00b6 Format: {L:2 DSPER TOTSMP } Where: - DSPER: Data Sample Period (U1, U2, U4) - TOTSMP: Total Samples (U1, U2, U4) S2F10 - Equipment Status Multi-Block Grant \u00b6 Format: GRANT Where: - GRANT: Grant Code (B[1]) - 0: Granted - 1: Busy, try again - 2: No space S2F11 - Equipment Status Multi-Block \u00b6 Format: {L:3 DSID SMPLN {L:n SV_1 SV_2 ... SV_n } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - SMPLN: Sample Number (U1, U2, U4) - SV: Status Variable value (any format) S2F12 - Equipment Status Multi-Block Acknowledge \u00b6 Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S2F19 - Recipe Body Request \u00b6 Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A) S2F20 - Recipe Body Response \u00b6 Format: {L:n {L:2 PPID PPBODY } } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) S2F21 - Recipe Body Send \u00b6 Format: {L:n {L:2 PPID PPBODY } } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) S2F22 - Recipe Body Acknowledge \u00b6 Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Recipe ID already exists - 3: No space available S2F23 - Trace Initialize Send \u00b6 Format: {L:2 TRID {L:n SVID_1 SVID_2 ... SVID_n } } Where: - TRID: Trace Request ID (U1, U2, U4, or A) - SVID: Status Variable ID (U1, U2, U4, or A) S2F24 - Trace Initialize Acknowledge \u00b6 Format: TIAACK Where: - TIAACK: Trace Initialize Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one SVID does not exist - 4: Denied, Busy S2F25 - Loopback Diagnostic Request \u00b6 Format: {L:n DATA_1 DATA_2 ... DATA_n } Where: - DATA: Test Data (any format) S2F26 - Loopback Diagnostic Response \u00b6 Format: {L:n DATA_1 DATA_2 ... DATA_n } Where: - DATA: Echoed Test Data (any format) S2F27 - Initiate Processing Request \u00b6 Format: {L:2 PPID {L:n PARAMETER_1 PARAMETER_2 ... PARAMETER_n } } Where: - PPID: Process Program ID (A) - PARAMETER: Process Parameters (any format) S2F28 - Initiate Processing Acknowledge \u00b6 Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Recipe not found - 3: Equipment busy S2F29 - Equipment Constant Namelist Request \u00b6 Format: <none> (empty data) S2F30 - Equipment Constant Namelist Response \u00b6 Format: {L:n {L:6 ECID ECNAME ECMIN ECMAX ECDEF UNITS } } Where: - ECID: Equipment Constant ID (U1, U2, U4, or A) - ECNAME: Equipment Constant Name (A) - ECMIN: Minimum Value (any format) - ECMAX: Maximum Value (any format) - ECDEF: Default Value (any format) - UNITS: Units (A) S2F39 - Status Variable Namelist Request \u00b6 Format: <none> (empty data) S2F40 - Status Variable Namelist Response \u00b6 Format: {L:n {L:6 SVID SVNAME SVMIN SVMAX SVDEF UNITS } } Where: - SVID: Status Variable ID (U1, U2, U4, or A) - SVNAME: Status Variable Name (A) - SVMIN: Minimum Value (any format) - SVMAX: Maximum Value (any format) - SVDEF: Default Value (any format) - UNITS: Units (A) S2F41 - Host Command Send \u00b6 Format: {L:3 RCMD {L:n CPNAME_1 CPNAME_2 ... CPNAME_n } {L:n CPVAL_1 CPVAL_2 ... CPVAL_n } } Where: - RCMD: Remote Command (A) - CPNAME: Command Parameter Name (A) - CPVAL: Command Parameter Value (any format) S2F42 - Host Command Acknowledge \u00b6 Format: {L:2 HCACK {L:n CPNAME_1 CPNAME_2 ... CPNAME_n } } Where: - HCACK: Host Command Acknowledge (B[1]) - 0: Acknowledged - 1: Invalid command - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists - CPNAME: Command Parameter Name (A) S2F43 - Reset Spooling Streams and Functions \u00b6 Format: {L:2 STRID FCNID } Where: - STRID: Stream ID (B[1]) - FCNID: Function ID (B[1]) S2F44 - Reset Spooling Acknowledge \u00b6 Format: RSPACK Where: - RSPACK: Reset Spool Acknowledge (B[1]) - 0: Acknowledged - 1: Error S2F45 - Define Variable Limit Attributes \u00b6 Format: {L:n {L:8 VID LIMITID UPPERDB LOWERDB UPPERDB LOWERDB LVID DVVAL } } Where: - VID: Variable ID (U1, U2, U4, or A) - LIMITID: Limit ID (U1, U2, U4, or A) - UPPERDB: Upper Deadband (any format) - LOWERDB: Lower Deadband (any format) - LVID: Limit Variable ID (U1, U2, U4, or A) - DVVAL: Default Variable Value (any format) S2F46 - Define Variable Limit Attributes Acknowledge \u00b6 Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: At least one VID does not exist - 3: Invalid limit specification S2F47 - Variable Limit Attribute Request \u00b6 Format: {L:n VID_1 VID_2 ... VID_n } Where: - VID: Variable ID (U1, U2, U4, or A) S2F48 - Variable Limit Attribute Response \u00b6 Format: {L:n {L:8 VID LIMITID UPPERDB LOWERDB UPPERDB LOWERDB LVID DVVAL } } Where: - VID: Variable ID (U1, U2, U4, or A) - LIMITID: Limit ID (U1, U2, U4, or A) - UPPERDB: Upper Deadband (any format) - LOWERDB: Lower Deadband (any format) - LVID: Limit Variable ID (U1, U2, U4, or A) - DVVAL: Default Variable Value (any format) S2F49 - Enhanced Remote Command \u00b6 Format: {L:4 DATAID OBJSPEC RCMD {L:n {L:2 CPNAME CPACK } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJSPEC: Object Specifier (A) - RCMD: Remote Command (A) - CPNAME: Command Parameter Name (A) - CPACK: Command Parameter Acknowledge (any format) S2F50 - Enhanced Remote Command Acknowledge \u00b6 Format: {L:3 DATAID HCACK {L:n {L:2 CPNAME CPACK } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - HCACK: Host Command Acknowledge (B[1]) - CPNAME: Command Parameter Name (A) - CPACK: Command Parameter Acknowledge (any format) S2F51 - Automated Substrate Mapping \u00b6 Format: {L:3 DATAID OBJSPEC {L:n MAPDATA_1 MAPDATA_2 ... MAPDATA_n } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJSPEC: Object Specifier (A) - MAPDATA: Mapping Data (various formats) S2F52 - Automated Substrate Mapping Acknowledge \u00b6 Format: {L:2 DATAID HCACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - HCACK: Host Command Acknowledge (B[1]) S2F53 - Enhanced Define Report \u00b6 Format: {L:3 DATAID OBJTYPE {L:n {L:2 RPTID {L:m VID_1 VID_2 ... VID_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJTYPE: Object Type (A) - RPTID: Report ID (U1, U2, U4, or A) - VID: Variable ID (U1, U2, U4, or A) S2F54 - Enhanced Define Report Acknowledge \u00b6 Format: {L:2 DATAID DRACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - DRACK: Define Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one RPTID already defined - 4: Denied, At least one VID does not exist S2F55 - Enhanced Link Event Report \u00b6 Format: {L:3 DATAID OBJTYPE {L:n {L:2 CEID {L:m RPTID_1 RPTID_2 ... RPTID_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJTYPE: Object Type (A) - CEID: Collection Event ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A) S2F56 - Enhanced Link Event Report Acknowledge \u00b6 Format: {L:2 DATAID LRACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - LRACK: Link Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one CEID already defined - 4: Denied, At least one CEID does not exist - 5: Denied, At least one RPTID does not exist S2F57 - Enhanced Enable/Disable Event Report \u00b6 Format: {L:3 DATAID CEED {L:n CEID_1 CEID_2 ... CEID_n } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CEED: Collection Event Enable/Disable (BOOLEAN) - CEID: Collection Event ID (U1, U2, U4, or A) S2F58 - Enhanced Enable/Disable Event Report Acknowledge \u00b6 Format: {L:2 DATAID ERACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - ERACK: Enable/Disable Event Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, At least one CEID does not exist - 2: Denied, Busy S2F59 - Formatted Process Program Send \u00b6 Format: {L:3 PPID PPBODY PPFORMAT } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) - PPFORMAT: Process Program Format (U1) - 0: ASCII - 1: Binary - 2: Structured S2F60 - Formatted Process Program Acknowledge \u00b6 Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Format not supported - 3: PPID already exists - 4: No space available S2F61 - Formatted Process Program Request \u00b6 Format: {L:2 PPID PPFORMAT } Where: - PPID: Process Program ID (A) - PPFORMAT: Process Program Format (U1) - 0: ASCII - 1: Binary - 2: Structured S2F62 - Formatted Process Program Response \u00b6 Format: {L:3 PPID PPBODY PPFORMAT } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) - PPFORMAT: Process Program Format (U1) - 0: ASCII - 1: Binary - 2: Structured S2F63 - Define Object \u00b6 Format: {L:3 DATAID OBJTYPE {L:n {L:3 OBJID OBJNAME {L:m ATTRID_1 ATTRID_2 ... ATTRID_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJTYPE: Object Type (A) - OBJID: Object ID (A) - OBJNAME: Object Name (A) - ATTRID: Attribute ID (U1, U2, U4, or A) S2F64 - Define Object Acknowledge \u00b6 Format: {L:2 DATAID OBJACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJACK: Object Acknowledge (B[1]) - 0: Acknowledged - 1: Error - 2: Object type not supported - 3: Object already exists - 4: No space available Stream 3: Material Status \u00b6 Purpose : Material and carrier tracking Message Direction Description S3F1 \u2192 Equipment Carrier Action Request S3F2 \u2190 Equipment Carrier Action Response S3F3 \u2192 Equipment Carrier Status Request S3F4 \u2190 Equipment Carrier Status Response S3F5 \u2190 Equipment Carrier Status Send S3F6 \u2192 Equipment Carrier Status Acknowledge S3F7 \u2192 Equipment Port Status Request S3F8 \u2190 Equipment Port Status Response S3F9 \u2190 Equipment Port Status Send S3F10 \u2192 Equipment Port Status Acknowledge S3F11 \u2192 Equipment Substrate Map Request S3F12 \u2190 Equipment Substrate Map Response S3F13 \u2190 Equipment Substrate Map Send S3F14 \u2192 Equipment Substrate Map Acknowledge S3F15 \u2192 Equipment Substrate Position Request S3F16 \u2190 Equipment Substrate Position Response S3F17 \u2192 Equipment Carrier Action Request (Extended) S3F18 \u2190 Equipment Carrier Action Response (Extended) S3F19 \u2192 Equipment Port Action Request S3F20 \u2190 Equipment Port Action Response S3F21 \u2192 Equipment Port Group Request S3F22 \u2190 Equipment Port Group Response S3F23 \u2192 Equipment Port Group Define S3F24 \u2190 Equipment Port Group Define Acknowledge S3F25 \u2192 Equipment Carrier ID Request S3F26 \u2190 Equipment Carrier ID Response S3F27 \u2192 Equipment Carrier ID Send S3F28 \u2190 Equipment Carrier ID Acknowledge S3F29 \u2192 Equipment Substrate Location Request S3F30 \u2190 Equipment Substrate Location Response S3F31 \u2190 Equipment Substrate Location Send S3F32 \u2192 Equipment Substrate Location Acknowledge S3F33 \u2192 Equipment Load Lock Status Request S3F34 \u2190 Equipment Load Lock Status Response S3F35 \u2190 Equipment Load Lock Status Send S3F36 \u2192 Equipment Load Lock Status Acknowledge S3F1 - Carrier Action Request \u00b6 Format: {L:5 DATAID CARRIERACTION CARRIERID PTN {L:n {L:2 CATTRID CATTRDATA } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CARRIERACTION: Carrier Action (U1) - 1: Load - 2: Unload - 3: Transfer - CARRIERID: Carrier ID (A) - PTN: Port Number (U1) - CATTRID: Carrier Attribute ID (U1, U2, U4, or A) - CATTRDATA: Carrier Attribute Data (any format) S3F2 - Carrier Action Response \u00b6 Format: {L:2 DATAID CAACK } Where: - DATAID: Data ID (matching request) - CAACK: Carrier Action Acknowledge (U1) - 0: Acknowledged - 1: Denied, Invalid Command - 2: Denied, Cannot Perform Now S3F3 - Carrier Status Request \u00b6 Format: {L:n CARRIERID_1 CARRIERID_2 ... CARRIERID_n } Where: - CARRIERID: Carrier ID (A) S3F4 - Carrier Status Response \u00b6 Format: {L:n {L:3 CARRIERID CARRIERSTATUS {L:m {L:2 CATTRID CATTRDATA } } } } Where: - CARRIERID: Carrier ID (A) - CARRIERSTATUS: Carrier Status (U1) - 0: No State - 1: Not Present - 2: Present - 3: Moving - CATTRID: Carrier Attribute ID (U1, U2, U4, or A) - CATTRDATA: Carrier Attribute Data (any format) S3F5 - Carrier Status Send \u00b6 Format: {L:3 CARRIERID CARRIERSTATUS {L:n {L:2 CATTRID CATTRDATA } } } Where: - CARRIERID: Carrier ID (A) - CARRIERSTATUS: Carrier Status (U1) - 0: No State - 1: Not Present - 2: Present - 3: Moving - CATTRID: Carrier Attribute ID (U1, U2, U4, or A) - CATTRDATA: Carrier Attribute Data (any format) S3F6 - Carrier Status Acknowledge \u00b6 Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S3F7 - Port Status Request \u00b6 Format: {L:n PTN_1 PTN_2 ... PTN_n } Where: - PTN: Port Number (U1) S3F8 - Port Status Response \u00b6 Format: {L:n {L:3 PTN PORTSTATUS {L:m {L:2 PATTRID PATTRDATA } } } } Where: - PTN: Port Number (U1) - PORTSTATUS: Port Status (U1) - 0: No State - 1: Unoccupied - 2: Occupied - 3: Loading - 4: Unloading - PATTRID: Port Attribute ID (U1, U2, U4, or A) - PATTRDATA: Port Attribute Data (any format) S3F9 - Port Status Send \u00b6 Format: {L:3 PTN PORTSTATUS {L:n {L:2 PATTRID PATTRDATA } } } Where: - PTN: Port Number (U1) - PORTSTATUS: Port Status (U1) - PATTRID: Port Attribute ID (U1, U2, U4, or A) - PATTRDATA: Port Attribute Data (any format) S3F10 - Port Status Acknowledge \u00b6 Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S3F11 - Substrate Map Request \u00b6 Format: {L:2 CARRIERID {L:n SUBSTRATEID_1 SUBSTRATEID_2 ... SUBSTRATEID_n } } Where: - CARRIERID: Carrier ID (A) - SUBSTRATEID: Substrate ID (A) S3F12 - Substrate Map Response \u00b6 Format: {L:n {L:3 SUBSTRATEID SUBSTRATELOC {L:m {L:2 SATTRID SATTRDATA } } } } Where: - SUBSTRATEID: Substrate ID (A) - SUBSTRATELOC: Substrate Location (U1) - SATTRID: Substrate Attribute ID (U1, U2, U4, or A) - SATTRDATA: Substrate Attribute Data (any format) S3F13 - Substrate Map Send \u00b6 Format: {L:2 CARRIERID {L:n {L:3 SUBSTRATEID SUBSTRATELOC {L:m {L:2 SATTRID SATTRDATA } } } } } Where: - CARRIERID: Carrier ID (A) - SUBSTRATEID: Substrate ID (A) - SUBSTRATELOC: Substrate Location (U1) - SATTRID: Substrate Attribute ID (U1, U2, U4, or A) - SATTRDATA: Substrate Attribute Data (any format) S3F14 - Substrate Map Acknowledge \u00b6 Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S3F15 - Substrate Position Request \u00b6 Format: {L:2 CARRIERID SUBSTRATEID } Where: - CARRIERID: Carrier ID (A) - SUBSTRATEID: Substrate ID (A) S3F16 - Substrate Position Response \u00b6 Format: {L:3 SUBSTRATEID SUBSTRATELOC SUBSTRATESTATUS } Where: - SUBSTRATEID: Substrate ID (A) - SUBSTRATELOC: Substrate Location (U1) - SUBSTRATESTATUS: Substrate Status (U1) - 0: No State - 1: Present - 2: Processing - 3: Completed S3F17 - Carrier Action Request (Extended) \u00b6 Format: {L:5 DATAID CARRIERACTION CARRIERID PTN {L:n {L:2 CATTRID CATTRDATA } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CARRIERACTION: Carrier Action (U1) - CARRIERID: Carrier ID (A) - PTN: Port Number (U1) - CATTRID: Carrier Attribute ID (U1, U2, U4, or A) - CATTRDATA: Carrier Attribute Data (any format) S3F18 - Carrier Action Response (Extended) \u00b6 Format: {L:2 DATAID CAACK } Where: - DATAID: Data ID (matching request) - CAACK: Carrier Action Acknowledge (U1) - 0: Acknowledged - 1: Denied, Invalid Command - 2: Denied, Cannot Perform Now S3F19 - Port Action Request \u00b6 Format: {L:4 DATAID PORTACTION PTN {L:n {L:2 PATTRID PATTRDATA } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - PORTACTION: Port Action (U1) - 1: Open - 2: Close - 3: Lock - 4: Unlock - PTN: Port Number (U1) - PATTRID: Port Attribute ID (U1, U2, U4, or A) - PATTRDATA: Port Attribute Data (any format) S3F20 - Port Action Response \u00b6 Format: {L:2 DATAID PAACK } Where: - DATAID: Data ID (matching request) - PAACK: Port Action Acknowledge (U1) - 0: Acknowledged - 1: Denied, Invalid Command - 2: Denied, Cannot Perform Now S3F21 - Port Group Request \u00b6 Format: {L:n PORTGROUPID_1 PORTGROUPID_2 ... PORTGROUPID_n } Where: - PORTGROUPID: Port Group ID (A) S3F22 - Port Group Response \u00b6 Format: {L:n {L:2 PORTGROUPID {L:m PTN_1 PTN_2 ... PTN_m } } } Where: - PORTGROUPID: Port Group ID (A) - PTN: Port Number (U1) S3F23 - Port Group Define \u00b6 Format: {L:2 PORTGROUPID {L:n PTN_1 PTN_2 ... PTN_n } } Where: - PORTGROUPID: Port Group ID (A) - PTN: Port Number (U1) S3F24 - Port Group Define Acknowledge \u00b6 Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S3F25 - Carrier ID Request \u00b6 Format: PTN Where: - PTN: Port Number (U1) S3F26 - Carrier ID Response \u00b6 Format: {L:2 PTN CARRIERID } Where: - PTN: Port Number (U1) - CARRIERID: Carrier ID (A) S3F27 - Carrier ID Send \u00b6 Format: {L:2 PTN CARRIERID } Where: - PTN: Port Number (U1) - CARRIERID: Carrier ID (A) S3F28 - Carrier ID Acknowledge \u00b6 Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S3F29 - Substrate Location Request \u00b6 Format: {L:n SUBSTRATEID_1 SUBSTRATEID_2 ... SUBSTRATEID_n } Where: - SUBSTRATEID: Substrate ID (A) S3F30 - Substrate Location Response \u00b6 Format: {L:n {L:3 SUBSTRATEID CARRIERID SUBSTRATELOC } } Where: - SUBSTRATEID: Substrate ID (A) - CARRIERID: Carrier ID (A) - SUBSTRATELOC: Substrate Location (U1) S3F31 - Substrate Location Send \u00b6 Format: {L:3 SUBSTRATEID CARRIERID SUBSTRATELOC } Where: - SUBSTRATEID: Substrate ID (A) - CARRIERID: Carrier ID (A) - SUBSTRATELOC: Substrate Location (U1) S3F32 - Substrate Location Acknowledge \u00b6 Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S3F33 - Load Lock Status Request \u00b6 Format: {L:n LLID_1 LLID_2 ... LLID_n } Where: - LLID: Load Lock ID (A) S3F34 - Load Lock Status Response \u00b6 Format: {L:n {L:3 LLID LLSTATUS {L:m {L:2 LLATTRID LLATTRDATA } } } } Where: - LLID: Load Lock ID (A) - LLSTATUS: Load Lock Status (U1) - 0: No State - 1: Open - 2: Closed - 3: Pumping - 4: Venting - LLATTRID: Load Lock Attribute ID (U1, U2, U4, or A) - LLATTRDATA: Load Lock Attribute Data (any format) S3F35 - Load Lock Status Send \u00b6 Format: {L:3 LLID LLSTATUS {L:n {L:2 LLATTRID LLATTRDATA } } } Where: - LLID: Load Lock ID (A) - LLSTATUS: Load Lock Status (U1) - LLATTRID: Load Lock Attribute ID (U1, U2, U4, or A) - LLATTRDATA: Load Lock Attribute Data (any format) S3F36 - Load Lock Status Acknowledge \u00b6 Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error Stream 4: Material Control \u00b6 Purpose : Material transfer and handling Message Direction Description S4F1 \u2192 Equipment Transfer Job Create S4F2 \u2190 Equipment Transfer Job Create Acknowledge S4F3 \u2192 Equipment Transfer Job Data S4F4 \u2190 Equipment Transfer Job Data Acknowledge S4F5 \u2192 Equipment Transfer Command S4F6 \u2190 Equipment Transfer Command Acknowledge S4F1 - Transfer Job Create \u00b6 Format: {L:5 DATAID JOBID CARRIERID FROMPTN TOPTN } Where: - DATAID: Data ID (U1, U2, U4, or A) - JOBID: Job ID (A) - CARRIERID: Carrier ID (A) - FROMPTN: From Port Number (U1) - TOPTN: To Port Number (U1) S4F2 - Transfer Job Create Acknowledge \u00b6 Format: {L:2 DATAID HCACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - HCACK: Host Command Acknowledge (B[1]) - 0: Acknowledged - 1: Invalid command - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists S4F3 - Transfer Job Data \u00b6 Format: {L:n {L:5 JOBID CARRIERID FROMPTN TOPTN JOBST } } Where: - JOBID: Job ID (A) - CARRIERID: Carrier ID (A) - FROMPTN: From Port Number (U1) - TOPTN: To Port Number (U1) - JOBST: Job State (U1) - 0: Queued - 1: Selected - 2: Executing - 3: Completed - 4: Canceled - 5: Aborted - 6: Failed S4F4 - Transfer Job Data Acknowledge \u00b6 Format: ACKC4 Where: - ACKC4: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S4F5 - Transfer Command \u00b6 Format: {L:3 DATAID COMMCODE {L:n PARAMETER_1 PARAMETER_2 ... PARAMETER_n } } Where: - DATAID: Data ID (U1, U2, U4, or A) - COMMCODE: Command Code (A) - \"START\": Start transfer - \"STOP\": Stop transfer - \"PAUSE\": Pause transfer - \"RESUME\": Resume transfer - \"CANCEL\": Cancel transfer - PARAMETER: Command Parameters (various formats) S4F6 - Transfer Command Acknowledge \u00b6 Format: {L:2 DATAID HCACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - HCACK: Host Command Acknowledge (B[1]) - 0: Acknowledged - 1: Invalid command - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists Stream 5: Exception Reporting \u00b6 Purpose : Alarm and exception handling Message Direction Description S5F1 \u2190 Equipment Alarm Report Send S5F2 \u2192 Equipment Alarm Report Acknowledge S5F3 \u2192 Equipment En/Disable Alarm Send S5F4 \u2190 Equipment En/Disable Alarm Acknowledge S5F5 \u2192 Equipment List Alarms Request S5F6 \u2190 Equipment List Alarms Response S5F7 \u2192 Equipment List Enabled Alarm Request S5F8 \u2190 Equipment List Enabled Alarm Response S5F1 - Alarm Report Send \u00b6 Format: {L:3 ALCD ALID ALTX } Where: - ALCD: Alarm Code (B[1]) - Bit 0: Alarm Set (1) or Clear (0) - Bit 7: Alarm (1) or Warning (0) - ALID: Alarm ID (U1, U2, U4, or A) - ALTX: Alarm Text (A[120]) S5F2 - Alarm Report Acknowledge \u00b6 Format: ACKC5 Where: - ACKC5: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S5F3 - Enable/Disable Alarm Send \u00b6 Format: {L:2 ALED {L:n ALID_1 ALID_2 ... ALID_n } } Where: - ALED: Alarm Enable/Disable (B[1]) - 128 (0x80): Enable - 0: Disable - ALID: Alarm ID (U1, U2, U4, or A) S5F4 - Enable/Disable Alarm Acknowledge \u00b6 Format: ACKC5 Where: - ACKC5: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S5F5 - List Alarms Request \u00b6 Format: <none> (empty data) S5F6 - List Alarms Response \u00b6 Format: {L:n ALID_1 ALID_2 ... ALID_n } Where: - ALID: Alarm ID (U1, U2, U4, or A) S5F7 - List Enabled Alarm Request \u00b6 Format: <none> (empty data) S5F8 - List Enabled Alarm Response \u00b6 Format: {L:n ALID_1 ALID_2 ... ALID_n } Where: - ALID: Alarm ID (U1, U2, U4, or A) - Only enabled alarms Stream 6: Data Collection \u00b6 Purpose : Process data collection and event reporting Message Direction Description S6F1 \u2190 Equipment Trace Data Send S6F2 \u2192 Equipment Trace Data Acknowledge S6F3 \u2190 Equipment Discrete Variable Data Send S6F4 \u2192 Equipment Discrete Variable Data Acknowledge S6F5 \u2190 Equipment Multi-block Data Send S6F6 \u2192 Equipment Multi-block Grant S6F7 \u2192 Equipment Data Transfer Request S6F8 \u2190 Equipment Data Transfer Response S6F11 \u2190 Equipment Event Report Send S6F12 \u2192 Equipment Event Report Acknowledge S6F15 \u2192 Equipment Event Report Request S6F16 \u2190 Equipment Event Report Response S6F19 \u2192 Equipment Individual Report Request S6F20 \u2190 Equipment Individual Report Response S6F21 \u2192 Equipment Annotated Individual Report Request S6F22 \u2190 Equipment Annotated Individual Report Response S6F23 \u2192 Equipment Request Spooled Data S6F24 \u2190 Equipment Request Spooled Data Response S6F25 \u2192 Equipment Data Set Upload S6F26 \u2190 Equipment Data Set Upload Acknowledge S6F27 \u2192 Equipment Data Set Download Request S6F28 \u2190 Equipment Data Set Download Response S6F29 \u2192 Equipment Data Set List Request S6F30 \u2190 Equipment Data Set List Response S6F11 - Event Report Send \u00b6 Format: {L:3 DATAID CEID {L:n {L:3 RPTID {L:m V_1 V_2 ... V_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CEID: Collection Event ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A) - V: Variable Value (any format) S6F12 - Event Report Acknowledge \u00b6 Format: ACKC6 Where: - ACKC6: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S6F15 - Event Report Request \u00b6 Format: CEID Where: - CEID: Collection Event ID (U1, U2, U4, or A) S6F16 - Event Report Response \u00b6 Format: {L:2 DATAID {L:n {L:3 RPTID {L:m V_1 V_2 ... V_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A) - V: Variable Value (any format) S6F1 - Trace Data Send \u00b6 Format: {L:3 TRID SMPLN {L:n SV_1 SV_2 ... SV_n } } Where: - TRID: Trace Request ID (U1, U2, U4, or A) - SMPLN: Sample Number (U1, U2, U4) - SV: Sample Value (any format) S6F2 - Trace Data Acknowledge \u00b6 Format: ACKC6 Where: - ACKC6: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S6F3 - Discrete Variable Data Send \u00b6 Format: {L:2 DVID DVVAL } Where: - DVID: Discrete Variable ID (U1, U2, U4, or A) - DVVAL: Discrete Variable Value (any format) S6F4 - Discrete Variable Data Acknowledge \u00b6 Format: ACKC6 Where: - ACKC6: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S6F5 - Multi-block Data Send \u00b6 Format: {L:3 MID IDTYP {L:n DATA_1 DATA_2 ... DATA_n } } Where: - MID: Message ID (U1, U2, U4, or A) - IDTYP: ID Type (B[1]) - 0: Data ID - 1: Equipment ID - DATA: Data blocks (any format) S6F6 - Multi-block Grant \u00b6 Format: GRANT Where: - GRANT: Grant Code (B[1]) - 0: Granted - 1: Busy, try again - 2: No space S6F7 - Data Transfer Request \u00b6 Format: {L:2 DATALENGTH DATA } Where: - DATALENGTH: Data Length (U1, U2, U4) - DATA: Binary Data (B) S6F8 - Data Transfer Response \u00b6 Format: ACK Where: - ACK: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error S6F19 - Individual Report Request \u00b6 Format: RPTID Where: - RPTID: Report ID (U1, U2, U4, or A) S6F20 - Individual Report Response \u00b6 Format: {L:n V_1 V_2 ... V_n } Where: - V: Variable Value (any format) S6F21 - Annotated Individual Report Request \u00b6 Format: RPTID Where: - RPTID: Report ID (U1, U2, U4, or A) S6F22 - Annotated Individual Report Response \u00b6 Format: {L:n {L:2 VID V } } Where: - VID: Variable ID (U1, U2, U4, or A) - V: Variable Value (any format) S6F23 - Request Spooled Data \u00b6 Format: DSID Where: - DSID: Data Set ID (U1, U2, U4, or A) S6F24 - Request Spooled Data Response \u00b6 Format: {L:3 DSID DSCOUNT {L:n DATA_1 DATA_2 ... DATA_n } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSCOUNT: Data Set Count (U1, U2, U4) - DATA: Spooled Data (any format) S6F25 - Data Set Upload \u00b6 Format: {L:4 DSID DSNAME DSTYPE {L:n DATA_1 DATA_2 ... DATA_n } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) - DSTYPE: Data Set Type (U1) - 0: Process data - 1: Equipment data - 2: Alarm data - 3: Event data - DATA: Data Set Content (any format) S6F26 - Data Set Upload Acknowledge \u00b6 Format: {L:2 DSID DSUPACK } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSUPACK: Data Set Upload Acknowledge (B[1]) - 0: Acknowledged - 1: Error - 2: Data set already exists - 3: No space available S6F27 - Data Set Download Request \u00b6 Format: {L:2 DSID DSNAME } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) S6F28 - Data Set Download Response \u00b6 Format: {L:4 DSID DSNAME DSTYPE {L:n DATA_1 DATA_2 ... DATA_n } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) - DSTYPE: Data Set Type (U1) - DATA: Data Set Content (any format) S6F29 - Data Set List Request \u00b6 Format: <none> (empty data) S6F30 - Data Set List Response \u00b6 Format: {L:n {L:3 DSID DSNAME DSTYPE } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) - DSTYPE: Data Set Type (U1) - 0: Process data - 1: Equipment data - 2: Alarm data - 3: Event data Stream 7: Process Program Management \u00b6 Purpose : Recipe and process program handling Message Direction Description S7F1 \u2192 Equipment Process Program Load Inquire S7F2 \u2190 Equipment Process Program Load Grant S7F3 \u2192 Equipment Process Program Send S7F4 \u2190 Equipment Process Program Acknowledge S7F5 \u2192 Equipment Process Program Request S7F6 \u2190 Equipment Process Program Data S7F17 \u2192 Equipment Delete Process Program Send S7F18 \u2190 Equipment Delete Process Program Acknowledge S7F19 \u2192 Equipment Current EPPD Request S7F20 \u2190 Equipment Current EPPD Data S7F21 \u2192 Equipment Process Program Directory Request S7F22 \u2190 Equipment Process Program Directory Response S7F23 \u2192 Equipment Process Program Upload S7F24 \u2190 Equipment Process Program Upload Acknowledge S7F25 \u2192 Equipment Process Program Status Request S7F26 \u2190 Equipment Process Program Status Response S7F27 \u2192 Equipment Process Program Execute S7F28 \u2190 Equipment Process Program Execute Acknowledge S7F29 \u2192 Equipment Process Program Stop S7F30 \u2190 Equipment Process Program Stop Acknowledge S7F31 \u2192 Equipment Process Program Pause S7F32 \u2190 Equipment Process Program Pause Acknowledge S7F33 \u2192 Equipment Process Program Resume S7F34 \u2190 Equipment Process Program Resume Acknowledge S7F35 \u2192 Equipment Process Program Variable Request S7F36 \u2190 Equipment Process Program Variable Response S7F37 \u2192 Equipment Process Program Variable Send S7F38 \u2190 Equipment Process Program Variable Acknowledge S7F39 \u2192 Equipment Recipe Validation Request S7F40 \u2190 Equipment Recipe Validation Response S7F41 \u2192 Equipment Recipe Parameter Request S7F42 \u2190 Equipment Recipe Parameter Response S7F43 \u2192 Equipment Recipe Parameter Set S7F44 \u2190 Equipment Recipe Parameter Set Acknowledge S7F1 - Process Program Load Inquire \u00b6 Format: {L:2 PPID LENGTH } Where: - PPID: Process Program ID (A) - LENGTH: Length of Process Program (U1, U2, U4) S7F2 - Process Program Load Grant \u00b6 Format: GRANT Where: - GRANT: Grant Code (B[1]) - 0: OK - 1: Busy, try again - 2: No space - 3: Invalid PPID - 4: Mode not supported - 5: Communication not available - 6: PPID already exists S7F3 - Process Program Send \u00b6 Format: {L:2 PPID PPBODY } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) S7F4 - Process Program Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy S7F5 - Process Program Request \u00b6 Format: PPID Where: - PPID: Process Program ID (A) S7F6 - Process Program Data \u00b6 Format: {L:2 PPID PPBODY } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) S7F17 - Delete Process Program Send \u00b6 Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A) S7F18 - Delete Process Program Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy S7F19 - Current EPPD Request \u00b6 Format: <none> (empty data) S7F20 - Current EPPD Data \u00b6 Format: {L:n {L:2 PPID {L:m PARAMETER_1 PARAMETER_2 ... PARAMETER_m } } } Where: - PPID: Process Program ID (A) - PARAMETER: Process Parameter (any format) S7F21 - Process Program Directory Request \u00b6 Format: <none> (empty data) S7F22 - Process Program Directory Response \u00b6 Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A) S7F23 - Process Program Upload \u00b6 Format: {L:3 PPID PPBODY PPFORMAT } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) - PPFORMAT: Process Program Format (U1) - 0: ASCII - 1: Binary - 2: Structured S7F24 - Process Program Upload Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy S7F25 - Process Program Status Request \u00b6 Format: PPID Where: - PPID: Process Program ID (A) S7F26 - Process Program Status Response \u00b6 Format: {L:3 PPID PPSTATUS PPSIZE } Where: - PPID: Process Program ID (A) - PPSTATUS: Process Program Status (U1) - 0: Not exists - 1: Exists - 2: Active - 3: Paused - PPSIZE: Process Program Size (U1, U2, U4) S7F27 - Process Program Execute \u00b6 Format: {L:2 PPID {L:n PARAMETER_1 PARAMETER_2 ... PARAMETER_n } } Where: - PPID: Process Program ID (A) - PARAMETER: Execution Parameters (any format) S7F28 - Process Program Execute Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy S7F29 - Process Program Stop \u00b6 Format: PPID Where: - PPID: Process Program ID (A) S7F30 - Process Program Stop Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy S7F31 - Process Program Pause \u00b6 Format: PPID Where: - PPID: Process Program ID (A) S7F32 - Process Program Pause Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy S7F33 - Process Program Resume \u00b6 Format: PPID Where: - PPID: Process Program ID (A) S7F34 - Process Program Resume Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy S7F35 - Process Program Variable Request \u00b6 Format: {L:2 PPID {L:n PPVARID_1 PPVARID_2 ... PPVARID_n } } Where: - PPID: Process Program ID (A) - PPVARID: Process Program Variable ID (A) S7F36 - Process Program Variable Response \u00b6 Format: {L:2 PPID {L:n {L:2 PPVARID PPVARVAL } } } Where: - PPID: Process Program ID (A) - PPVARID: Process Program Variable ID (A) - PPVARVAL: Process Program Variable Value (any format) S7F37 - Process Program Variable Send \u00b6 Format: {L:2 PPID {L:n {L:2 PPVARID PPVARVAL } } } Where: - PPID: Process Program ID (A) - PPVARID: Process Program Variable ID (A) - PPVARVAL: Process Program Variable Value (any format) S7F38 - Process Program Variable Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy S7F39 - Recipe Validation Request \u00b6 Format: {L:2 PPID PPBODY } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) S7F40 - Recipe Validation Response \u00b6 Format: {L:3 PPID VALRESULT {L:n ERROR_1 ERROR_2 ... ERROR_n } } Where: - PPID: Process Program ID (A) - VALRESULT: Validation Result (B[1]) - 0: Valid - 1: Invalid - ERROR: Validation Error (A) S7F41 - Recipe Parameter Request \u00b6 Format: {L:2 PPID {L:n PARAMID_1 PARAMID_2 ... PARAMID_n } } Where: - PPID: Process Program ID (A) - PARAMID: Parameter ID (A) S7F42 - Recipe Parameter Response \u00b6 Format: {L:2 PPID {L:n {L:3 PARAMID PARAMVAL PARAMUNIT } } } Where: - PPID: Process Program ID (A) - PARAMID: Parameter ID (A) - PARAMVAL: Parameter Value (any format) - PARAMUNIT: Parameter Unit (A) S7F43 - Recipe Parameter Set \u00b6 Format: {L:2 PPID {L:n {L:3 PARAMID PARAMVAL PARAMUNIT } } } Where: - PPID: Process Program ID (A) - PARAMID: Parameter ID (A) - PARAMVAL: Parameter Value (any format) - PARAMUNIT: Parameter Unit (A) S7F44 - Recipe Parameter Set Acknowledge \u00b6 Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy Stream 8: Control Program Management \u00b6 Purpose : Control program and recipe management Message Direction Description S8F1 \u2192 Equipment Format ECP S8F2 \u2190 Equipment Format ECP Acknowledge S8F3 \u2192 Equipment ECP Data S8F4 \u2190 Equipment ECP Data Acknowledge S8F1 - Format ECP \u00b6 Format: {L:2 ECPID ECPBODY } Where: - ECPID: Equipment Control Program ID (A) - ECPBODY: Equipment Control Program Body (A or B) S8F2 - Format ECP Acknowledge \u00b6 Format: ACKC8 Where: - ACKC8: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: ECP ID already exists - 3: No space available S8F3 - ECP Data \u00b6 Format: {L:2 ECPID ECPBODY } Where: - ECPID: Equipment Control Program ID (A) - ECPBODY: Equipment Control Program Body (A or B) S8F4 - ECP Data Acknowledge \u00b6 Format: ACKC8 Where: - ACKC8: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: ECP ID not found - 3: Format error Stream 9: System Errors \u00b6 Purpose : Communication error reporting Message Direction Description S9F1 \u2190 Equipment Unrecognized Device ID S9F3 \u2190 Equipment Unrecognized Stream Type S9F5 \u2190 Equipment Unrecognized Function Type S9F7 \u2190 Equipment Illegal Data S9F9 \u2190 Equipment Transaction Timer Timeout S9F11 \u2190 Equipment Data Too Long S9F13 \u2190 Equipment Conversation Timeout S9F1 - Unrecognized Device ID \u00b6 Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the unrecognized message S9F3 - Unrecognized Stream Type \u00b6 Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message with unrecognized stream type S9F5 - Unrecognized Function Type \u00b6 Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message with unrecognized function type S9F7 - Illegal Data \u00b6 Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message with illegal data S9F9 - Transaction Timer Timeout \u00b6 Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message that timed out S9F11 - Data Too Long \u00b6 Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message that was too long S9F13 - Conversation Timeout \u00b6 Format: {L:2 MEXP EDID } Where: - MEXP: Message Expected (B[1]) - Stream and Function of the expected message - EDID: Equipment ID (U1, U2, U4, or A) - ID of the equipment that timed out Stream 10: Terminal Services \u00b6 Purpose : Operator interface communication Message Direction Description S10F1 \u2192 Equipment Terminal Request S10F2 \u2190 Equipment Terminal Response S10F3 \u2192 Equipment Terminal Display, Single S10F5 \u2192 Equipment Terminal Display, Multi-Block S10F9 \u2192 Equipment Broadcast Display Request S10F10 \u2190 Equipment Broadcast Display Acknowledge S10F1 - Terminal Request \u00b6 Format: {L:2 TID TEXT } Where: - TID: Terminal ID (B[1]) - TEXT: Text Message (A) S10F2 - Terminal Response \u00b6 Format: {L:2 TID TEXT } Where: - TID: Terminal ID (B[1]) - TEXT: Response Text (A) S10F3 - Terminal Display, Single \u00b6 Format: {L:2 TID TEXT } Where: - TID: Terminal ID (B[1]) - TEXT: Display Text (A) S10F5 - Terminal Display, Multi-Block \u00b6 Format: {L:2 TID {L:n TEXT_1 TEXT_2 ... TEXT_n } } Where: - TID: Terminal ID (B[1]) - TEXT: Display Text Lines (A) S10F9 - Broadcast Display Request \u00b6 Format: TEXT Where: - TEXT: Broadcast Message (A) S10F10 - Broadcast Display Acknowledge \u00b6 Format: ACKC10 Where: - ACKC10: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error Stream 12: Wafer Mapping \u00b6 Purpose : Wafer map data handling Message Direction Description S12F1 \u2192 Equipment Map Setup Data Send S12F2 \u2190 Equipment Map Setup Data Acknowledge S12F3 \u2192 Equipment Map Setup Data Request S12F4 \u2190 Equipment Map Setup Data Response S12F5 \u2192 Equipment Map Transmit Inquire S12F6 \u2190 Equipment Map Transmit Grant S12F7 \u2192 Equipment Map Data Send S12F8 \u2190 Equipment Map Data Acknowledge S12F9 \u2192 Equipment Map Data Request S12F10 \u2190 Equipment Map Data Response S12F11 \u2192 Equipment Map Data Request 2 S12F12 \u2190 Equipment Map Data Response 2 S12F13 \u2190 Equipment Map Error Report S12F14 \u2192 Equipment Map Error Acknowledge S12F15 \u2192 Equipment Map Sample Send S12F16 \u2190 Equipment Map Sample Acknowledge S12F17 \u2192 Equipment Map Sample Request S12F18 \u2190 Equipment Map Sample Response S12F19 \u2192 Equipment Map Update Send S12F20 \u2190 Equipment Map Update Acknowledge S12F1 - Map Setup Data Send \u00b6 Format: {L:3 MID IDTYP {L:n STRP_1 STRP_2 ... STRP_n } } Where: - MID: Map ID (A) - IDTYP: ID Type (B[1]) - 0: Wafer ID - 1: Die ID - STRP: Map Strip Data (various formats) S12F2 - Map Setup Data Acknowledge \u00b6 Format: ACKC12 Where: - ACKC12: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Map ID already exists - 3: No space available S12F3 - Map Setup Data Request \u00b6 Format: MID Where: - MID: Map ID (A) S12F4 - Map Setup Data Response \u00b6 Format: {L:3 MID IDTYP {L:n STRP_1 STRP_2 ... STRP_n } } Where: - MID: Map ID (A) - IDTYP: ID Type (B[1]) - STRP: Map Strip Data (various formats) S12F5 - Map Transmit Inquire \u00b6 Format: {L:2 MID DATALENGTH } Where: - MID: Map ID (A) - DATALENGTH: Expected Data Length (U1, U2, U4) S12F6 - Map Transmit Grant \u00b6 Format: GRANT Where: - GRANT: Grant Code (B[1]) - 0: Granted - 1: Busy, try again - 2: No space - 3: Map ID not found S12F7 - Map Data Send \u00b6 Format: {L:2 MID BINLT } Where: - MID: Map ID (A) - BINLT: Binary Map Data (B) S12F8 - Map Data Acknowledge \u00b6 Format: ACKC12 Where: - ACKC12: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Map ID not found - 3: Data format error S12F9 - Map Data Request \u00b6 Format: MID Where: - MID: Map ID (A) S12F10 - Map Data Response \u00b6 Format: {L:2 MID BINLT } Where: - MID: Map ID (A) - BINLT: Binary Map Data (B) S12F13 - Map Error Report \u00b6 Format: {L:3 MID MERLOC MERDESCRP } Where: - MID: Map ID (A) - MERLOC: Map Error Location (U1, U2, U4) - MERDESCRP: Map Error Description (A) S12F14 - Map Error Acknowledge \u00b6 Format: ACKC12 Where: - ACKC12: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error Stream 13: Data Set Management \u00b6 Purpose : Advanced data set handling and management Message Direction Description S13F1 \u2192 Equipment Data Set Upload Request S13F2 \u2190 Equipment Data Set Upload Response S13F3 \u2192 Equipment Data Set Download Request S13F4 \u2190 Equipment Data Set Download Response S13F5 \u2192 Equipment Data Set Directory Request S13F6 \u2190 Equipment Data Set Directory Response S13F7 \u2192 Equipment Data Set Delete Request S13F8 \u2190 Equipment Data Set Delete Response S13F1 - Data Set Upload Request \u00b6 Format: {L:3 DSID DSNAME DSTYPE } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) - DSTYPE: Data Set Type (U1) - 0: Process data - 1: Equipment data - 2: Alarm data - 3: Event data S13F2 - Data Set Upload Response \u00b6 Format: {L:2 DSID DSACK } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSACK: Data Set Acknowledge (B[1]) - 0: Acknowledged - 1: Error - 2: Data set already exists - 3: No space available Stream 14: Object Services \u00b6 Purpose : Object-oriented equipment control and management Message Direction Description S14F1 \u2192 Equipment Object Request S14F2 \u2190 Equipment Object Response S14F3 \u2192 Equipment Object Attribute Request S14F4 \u2190 Equipment Object Attribute Response S14F5 \u2192 Equipment Object Attribute Set S14F6 \u2190 Equipment Object Attribute Acknowledge S14F1 - Object Request \u00b6 Format: {L:2 OBJTYPE OBJID } Where: - OBJTYPE: Object Type (A) - OBJID: Object ID (A) S14F2 - Object Response \u00b6 Format: {L:3 OBJTYPE OBJID {L:n ATTRID_1 ATTRID_2 ... ATTRID_n } } Where: - OBJTYPE: Object Type (A) - OBJID: Object ID (A) - ATTRID: Attribute ID (A) Stream 15: Recipe Management \u00b6 Purpose : Advanced recipe handling and validation Message Direction Description S15F1 \u2192 Equipment Recipe Upload Request S15F2 \u2190 Equipment Recipe Upload Response S15F3 \u2192 Equipment Recipe Download Request S15F4 \u2190 Equipment Recipe Download Response S15F5 \u2192 Equipment Recipe Validation Request S15F6 \u2190 Equipment Recipe Validation Response S15F7 \u2192 Equipment Recipe Execute Request S15F8 \u2190 Equipment Recipe Execute Response S15F1 - Recipe Upload Request \u00b6 Format: {L:3 RECIPEID RECIPEBODY RECIPEFORMAT } Where: - RECIPEID: Recipe ID (A) - RECIPEBODY: Recipe Body (A or B) - RECIPEFORMAT: Recipe Format (U1) - 0: ASCII - 1: Binary - 2: XML S15F2 - Recipe Upload Response \u00b6 Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Recipe already exists - 3: No space available S15F9 - Recipe Directory Request \u00b6 Format: <none> (empty data) S15F10 - Recipe Directory Response \u00b6 Format: {L:n RECIPEID_1 RECIPEID_2 ... RECIPEID_n } Where: - RECIPEID: Recipe ID (A) S15F11 - Recipe Delete Request \u00b6 Format: {L:n RECIPEID_1 RECIPEID_2 ... RECIPEID_n } Where: - RECIPEID: Recipe ID (A) S15F12 - Recipe Delete Response \u00b6 Format: {L:n {L:2 RECIPEID ACKC15 } } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) S15F13 - Recipe Parameter Request \u00b6 Format: {L:2 RECIPEID {L:n RCPPARNM_1 RCPPARNM_2 ... RCPPARNM_n } } Where: - RECIPEID: Recipe ID (A) - RCPPARNM: Recipe Parameter Name (A) S15F14 - Recipe Parameter Response \u00b6 Format: {L:2 RECIPEID {L:n {L:3 RCPPARNM RCPPARVAL UNITS } } } Where: - RECIPEID: Recipe ID (A) - RCPPARNM: Recipe Parameter Name (A) - RCPPARVAL: Recipe Parameter Value (various) - UNITS: Units (A) S15F15 - Recipe Parameter Set \u00b6 Format: {L:2 RECIPEID {L:n {L:3 RCPPARNM RCPPARVAL UNITS } } } Where: - RECIPEID: Recipe ID (A) - RCPPARNM: Recipe Parameter Name (A) - RCPPARVAL: Recipe Parameter Value (various) - UNITS: Units (A) S15F16 - Recipe Parameter Set Acknowledge \u00b6 Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) S15F17 - Recipe Status Request \u00b6 Format: RECIPEID Where: - RECIPEID: Recipe ID (A) S15F18 - Recipe Status Response \u00b6 Format: {L:3 RECIPEID RCPSTAT RCPVERS } Where: - RECIPEID: Recipe ID (A) - RCPSTAT: Recipe Status (U1) - 0: Not exists - 1: Available - 2: Active - 3: Paused - RCPVERS: Recipe Version (A) S15F19 - Recipe Copy Request \u00b6 Format: {L:2 RECIPEID RCPNEWID } Where: - RECIPEID: Recipe ID (A) - RCPNEWID: Recipe New ID (A) S15F20 - Recipe Copy Response \u00b6 Format: {L:2 RCPNEWID ACKC15 } Where: - RCPNEWID: Recipe New ID (A) - ACKC15: Acknowledge Code (B[1]) S15F21 - Recipe Lock Request \u00b6 Format: {L:2 RECIPEID LOCKTYPE } Where: - RECIPEID: Recipe ID (A) - LOCKTYPE: Lock Type (U1) - 0: Unlock - 1: Read lock - 2: Write lock - 3: Exclusive lock S15F22 - Recipe Lock Response \u00b6 Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) S15F23 - Recipe Attribute Request \u00b6 Format: {L:2 RECIPEID {L:n RCPATTRID_1 RCPATTRID_2 ... RCPATTRID_n } } Where: - RECIPEID: Recipe ID (A) - RCPATTRID: Recipe Attribute ID (A) S15F24 - Recipe Attribute Response \u00b6 Format: {L:2 RECIPEID {L:n {L:2 RCPATTRID RCPATTRDATA } } } Where: - RECIPEID: Recipe ID (A) - RCPATTRID: Recipe Attribute ID (A) - RCPATTRDATA: Recipe Attribute Data (various) S15F25 - Recipe Security Request \u00b6 Format: {L:3 RECIPEID RCPSECCODE ACCESSMODE } Where: - RECIPEID: Recipe ID (A) - RCPSECCODE: Recipe Security Code (A) - ACCESSMODE: Access Mode (U1) S15F26 - Recipe Security Response \u00b6 Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) S15F27 - Recipe Version Request \u00b6 Format: RECIPEID Where: - RECIPEID: Recipe ID (A) S15F28 - Recipe Version Response \u00b6 Format: {L:3 RECIPEID RCPVERS {L:n VERSIONHISTORY_1 VERSIONHISTORY_2 ... VERSIONHISTORY_n } } Where: - RECIPEID: Recipe ID (A) - RCPVERS: Recipe Version (A) - VERSIONHISTORY: Version History (A) S15F29 - Recipe Export Request \u00b6 Format: {L:3 RECIPEID EXPORTFORMAT EXPORTOPTIONS } Where: - RECIPEID: Recipe ID (A) - EXPORTFORMAT: Export Format (U1) - 0: Native - 1: XML - 2: JSON - EXPORTOPTIONS: Export Options (various) S15F30 - Recipe Export Response \u00b6 Format: {L:3 RECIPEID EXPORTDATA ACKC15 } Where: - RECIPEID: Recipe ID (A) - EXPORTDATA: Export Data (A or B) - ACKC15: Acknowledge Code (B[1]) S15F31 - Recipe Import Request \u00b6 Format: {L:4 RECIPEID IMPORTFORMAT IMPORTDATA IMPORTOPTIONS } Where: - RECIPEID: Recipe ID (A) - IMPORTFORMAT: Import Format (U1) - IMPORTDATA: Import Data (A or B) - IMPORTOPTIONS: Import Options (various) S15F32 - Recipe Import Response \u00b6 Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) S15F33 - Recipe Template Request \u00b6 Format: TEMPLATETYPE Where: - TEMPLATETYPE: Template Type (A) S15F34 - Recipe Template Response \u00b6 Format: {L:3 TEMPLATETYPE TEMPLATEBODY TEMPLATEFORMAT } Where: - TEMPLATETYPE: Template Type (A) - TEMPLATEBODY: Template Body (A or B) - TEMPLATEFORMAT: Template Format (U1) S15F35 - Recipe Dependency Request \u00b6 Format: RECIPEID Where: - RECIPEID: Recipe ID (A) S15F36 - Recipe Dependency Response \u00b6 Format: {L:2 RECIPEID {L:n DEPENDENCY_1 DEPENDENCY_2 ... DEPENDENCY_n } } Where: - RECIPEID: Recipe ID (A) - DEPENDENCY: Recipe Dependency (A) S15F37 - Recipe Schedule Request \u00b6 Format: {L:3 RECIPEID SCHEDULETIME SCHEDULETYPE } Where: - RECIPEID: Recipe ID (A) - SCHEDULETIME: Schedule Time (A) - SCHEDULETYPE: Schedule Type (U1) S15F38 - Recipe Schedule Response \u00b6 Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) S15F39 - Recipe Optimization Request \u00b6 Format: {L:3 RECIPEID OPTIMIZATIONTYPE OPTIMIZATIONPARAMS } Where: - RECIPEID: Recipe ID (A) - OPTIMIZATIONTYPE: Optimization Type (U1) - OPTIMIZATIONPARAMS: Optimization Parameters (various) S15F40 - Recipe Optimization Response \u00b6 Format: {L:3 RECIPEID OPTIMIZEDRECIPE ACKC15 } Where: - RECIPEID: Recipe ID (A) - OPTIMIZEDRECIPE: Optimized Recipe (A or B) - ACKC15: Acknowledge Code (B[1]) S15F41 - Recipe Simulation Request \u00b6 Format: {L:3 RECIPEID SIMULATIONPARAMS SIMULATIONTYPE } Where: - RECIPEID: Recipe ID (A) - SIMULATIONPARAMS: Simulation Parameters (various) - SIMULATIONTYPE: Simulation Type (U1) S15F42 - Recipe Simulation Response \u00b6 Format: {L:3 RECIPEID SIMULATIONRESULTS ACKC15 } Where: - RECIPEID: Recipe ID (A) - SIMULATIONRESULTS: Simulation Results (various) - ACKC15: Acknowledge Code (B[1]) S15F43 - Recipe Checkpoint Request \u00b6 Format: {L:2 RECIPEID CHECKPOINTNAME } Where: - RECIPEID: Recipe ID (A) - CHECKPOINTNAME: Checkpoint Name (A) S15F44 - Recipe Checkpoint Response \u00b6 Format: {L:3 RECIPEID CHECKPOINTDATA ACKC15 } Where: - RECIPEID: Recipe ID (A) - CHECKPOINTDATA: Checkpoint Data (various) - ACKC15: Acknowledge Code (B[1]) S15F45 - Recipe Resume Request \u00b6 Format: {L:2 RECIPEID CHECKPOINTNAME } Where: - RECIPEID: Recipe ID (A) - CHECKPOINTNAME: Checkpoint Name (A) S15F46 - Recipe Resume Response \u00b6 Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) S15F47 - Recipe Performance Request \u00b6 Format: {L:2 RECIPEID PERFORMANCEMETRICS } Where: - RECIPEID: Recipe ID (A) - PERFORMANCEMETRICS: Performance Metrics (various) S15F48 - Recipe Performance Response \u00b6 Format: {L:3 RECIPEID PERFORMANCEDATA ACKC15 } Where: - RECIPEID: Recipe ID (A) - PERFORMANCEDATA: Performance Data (various) - ACKC15: Acknowledge Code (B[1]) S15F49 - Recipe Audit Request \u00b6 Format: {L:3 RECIPEID AUDITTYPE AUDITPARAMS } Where: - RECIPEID: Recipe ID (A) - AUDITTYPE: Audit Type (U1) - AUDITPARAMS: Audit Parameters (various) S15F50 - Recipe Audit Response \u00b6 Format: {L:3 RECIPEID AUDITRESULTS ACKC15 } Where: - RECIPEID: Recipe ID (A) - AUDITRESULTS: Audit Results (various) - ACKC15: Acknowledge Code (B[1]) S15F51 - Recipe Backup Request \u00b6 Format: {L:3 RECIPEID BACKUPTYPE BACKUPPARAMS } Where: - RECIPEID: Recipe ID (A) - BACKUPTYPE: Backup Type (U1) - BACKUPPARAMS: Backup Parameters (various) S15F52 - Recipe Backup Response \u00b6 Format: {L:3 RECIPEID BACKUPDATA ACKC15 } Where: - RECIPEID: Recipe ID (A) - BACKUPDATA: Backup Data (B) - ACKC15: Acknowledge Code (B[1]) S15F53 - Recipe Restore Request \u00b6 Format: {L:3 RECIPEID RESTOREDATA RESTOREOPTIONS } Where: - RECIPEID: Recipe ID (A) - RESTOREDATA: Restore Data (B) - RESTOREOPTIONS: Restore Options (various) S15F54 - Recipe Restore Response \u00b6 Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) Stream 16: Processing Management \u00b6 Purpose : Process control and monitoring Message Direction Description S16F1 \u2192 Equipment Process Start Request S16F2 \u2190 Equipment Process Start Response S16F3 \u2192 Equipment Process Stop Request S16F4 \u2190 Equipment Process Stop Response S16F5 \u2192 Equipment Process Status Request S16F6 \u2190 Equipment Process Status Response S16F7 \u2192 Equipment Process Parameter Request S16F8 \u2190 Equipment Process Parameter Response S16F9 \u2192 Equipment Process Job Status Request S16F10 \u2190 Equipment Process Job Status Response S16F11 \u2192 Equipment Process Job Priority Request S16F12 \u2190 Equipment Process Job Priority Response S16F13 \u2192 Equipment Process Job Queue Request S16F14 \u2190 Equipment Process Job Queue Response S16F15 \u2192 Equipment Process Step Control Request S16F16 \u2190 Equipment Process Step Control Response S16F17 \u2192 Equipment Process Data Request S16F18 \u2190 Equipment Process Data Response S16F19 \u2192 Equipment Process Recipe Request S16F20 \u2190 Equipment Process Recipe Response S16F21 \u2192 Equipment Process Material Request S16F22 \u2190 Equipment Process Material Response S16F23 \u2192 Equipment Process Resource Request S16F24 \u2190 Equipment Process Resource Response S16F25 \u2192 Equipment Process Event Report S16F26 \u2190 Equipment Process Event Acknowledge S16F27 \u2192 Equipment Process Log Request S16F28 \u2190 Equipment Process Log Response S16F29 \u2192 Equipment Process Control Request S16F30 \u2190 Equipment Process Control Response S16F1 - Process Start Request \u00b6 Format: {L:2 PROCESSID {L:n PARAMETER_1 PARAMETER_2 ... PARAMETER_n } } Where: - PROCESSID: Process ID (A) - PARAMETER: Process Parameters (any format) S16F2 - Process Start Response \u00b6 Format: {L:2 PROCESSID ACKC16 } Where: - PROCESSID: Process ID (A) - ACKC16: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Process not found - 3: Equipment busy S16F3 - Process Stop Request \u00b6 Format: PROCESSID Where: - PROCESSID: Process ID (A) S16F4 - Process Stop Response \u00b6 Format: {L:2 PROCESSID ACKC16 } Where: - PROCESSID: Process ID (A) - ACKC16: Acknowledge Code (B[1]) S16F5 - Process Status Request \u00b6 Format: PROCESSID Where: - PROCESSID: Process ID (A) S16F6 - Process Status Response \u00b6 Format: {L:3 PROCESSID PRSTAT PRDATA } Where: - PROCESSID: Process ID (A) - PRSTAT: Process Status (U1) - PRDATA: Process Data (various) S16F7 - Process Parameter Request \u00b6 Format: {L:2 PROCESSID {L:n PRPARNM_1 PRPARNM_2 ... PRPARNM_n } } Where: - PROCESSID: Process ID (A) - PRPARNM: Process Parameter Name (A) S16F8 - Process Parameter Response \u00b6 Format: {L:2 PROCESSID {L:n {L:3 PRPARNM PRPARVAL UNITS } } } Where: - PROCESSID: Process ID (A) - PRPARNM: Process Parameter Name (A) - PRPARVAL: Process Parameter Value (various) - UNITS: Units (A) S16F9 - Process Job Status Request \u00b6 Format: PJOBID Where: - PJOBID: Process Job ID (A) S16F10 - Process Job Status Response \u00b6 Format: {L:4 PJOBID PJOBST PRPROCESSTIME PRREMTIME } Where: - PJOBID: Process Job ID (A) - PJOBST: Process Job State (U1) - PRPROCESSTIME: Process Time (U4) - PRREMTIME: Remaining Time (U4) S16F11 - Process Job Priority Request \u00b6 Format: {L:2 PJOBID PRIORITY } Where: - PJOBID: Process Job ID (A) - PRIORITY: Priority (U1) S16F12 - Process Job Priority Response \u00b6 Format: {L:2 PJOBID ACKC16 } Where: - PJOBID: Process Job ID (A) - ACKC16: Acknowledge Code (B[1]) S16F13 - Process Job Queue Request \u00b6 Format: <none> (empty data) S16F14 - Process Job Queue Response \u00b6 Format: {L:n {L:3 PJOBID PRIORITY PJOBST } } Where: - PJOBID: Process Job ID (A) - PRIORITY: Priority (U1) - PJOBST: Process Job State (U1) S16F15 - Process Step Control Request \u00b6 Format: {L:3 PJOBID STEPID STEPCONTROL } Where: - PJOBID: Process Job ID (A) - STEPID: Step ID (A) - STEPCONTROL: Step Control (U1) S16F16 - Process Step Control Response \u00b6 Format: {L:3 PJOBID STEPID ACKC16 } Where: - PJOBID: Process Job ID (A) - STEPID: Step ID (A) - ACKC16: Acknowledge Code (B[1]) S16F17 - Process Data Request \u00b6 Format: {L:2 PJOBID {L:n DATAID_1 DATAID_2 ... DATAID_n } } Where: - PJOBID: Process Job ID (A) - DATAID: Data ID (A) S16F18 - Process Data Response \u00b6 Format: {L:2 PJOBID {L:n {L:3 DATAID DATAVALUE UNITS } } } Where: - PJOBID: Process Job ID (A) - DATAID: Data ID (A) - DATAVALUE: Data Value (various) - UNITS: Units (A) S16F19 - Process Recipe Request \u00b6 Format: {L:2 PJOBID RECIPEID } Where: - PJOBID: Process Job ID (A) - RECIPEID: Recipe ID (A) S16F20 - Process Recipe Response \u00b6 Format: {L:2 PJOBID ACKC16 } Where: - PJOBID: Process Job ID (A) - ACKC16: Acknowledge Code (B[1]) S16F21 - Process Material Request \u00b6 Format: {L:2 PJOBID {L:n MATID_1 MATID_2 ... MATID_n } } Where: - PJOBID: Process Job ID (A) - MATID: Material ID (A) S16F22 - Process Material Response \u00b6 Format: {L:2 PJOBID {L:n {L:3 MATID MATSTATUS MATDATA } } } Where: - PJOBID: Process Job ID (A) - MATID: Material ID (A) - MATSTATUS: Material Status (U1) - MATDATA: Material Data (various) S16F23 - Process Resource Request \u00b6 Format: {L:2 PJOBID {L:n RESOURCEID_1 RESOURCEID_2 ... RESOURCEID_n } } Where: - PJOBID: Process Job ID (A) - RESOURCEID: Resource ID (A) S16F24 - Process Resource Response \u00b6 Format: {L:2 PJOBID {L:n {L:3 RESOURCEID RESOURCESTATUS RESOURCEDATA } } } Where: - PJOBID: Process Job ID (A) - RESOURCEID: Resource ID (A) - RESOURCESTATUS: Resource Status (U1) - RESOURCEDATA: Resource Data (various) S16F25 - Process Event Report \u00b6 Format: {L:4 PJOBID EVENTTYPE EVENTDATA TIME } Where: - PJOBID: Process Job ID (A) - EVENTTYPE: Event Type (U1) - EVENTDATA: Event Data (various) - TIME: Timestamp (A) S16F26 - Process Event Acknowledge \u00b6 Format: {L:2 PJOBID ACKC16 } Where: - PJOBID: Process Job ID (A) - ACKC16: Acknowledge Code (B[1]) S16F27 - Process Log Request \u00b6 Format: {L:3 PJOBID STARTTIME ENDTIME } Where: - PJOBID: Process Job ID (A) - STARTTIME: Start Time (A) - ENDTIME: End Time (A) S16F28 - Process Log Response \u00b6 Format: {L:2 PJOBID {L:n {L:4 TIME LOGTYPE LOGDATA SEVERITY } } } Where: - PJOBID: Process Job ID (A) - TIME: Timestamp (A) - LOGTYPE: Log Type (U1) - LOGDATA: Log Data (A) - SEVERITY: Severity Level (U1) S16F29 - Process Control Request \u00b6 Format: {L:3 PJOBID CONTROLTYPE CONTROLDATA } Where: - PJOBID: Process Job ID (A) - CONTROLTYPE: Control Type (U1) - CONTROLDATA: Control Data (various) S16F30 - Process Control Response \u00b6 Format: {L:2 PJOBID ACKC16 } Where: - PJOBID: Process Job ID (A) - ACKC16: Acknowledge Code (B[1]) Stream 17: Clock Management \u00b6 Purpose : Time synchronization and clock control Message Direction Description S17F1 \u2192 Equipment Clock Set Request S17F2 \u2190 Equipment Clock Set Response S17F3 \u2192 Equipment Clock Read Request S17F4 \u2190 Equipment Clock Read Response S17F5 \u2192 Equipment Time Zone Set Request S17F6 \u2190 Equipment Time Zone Set Response S17F1 - Clock Set Request \u00b6 Format: {L:2 CLOCK TIMEZONE } Where: - CLOCK: Clock Time (A[19]) format: \"YYYY-MM-DD HH:MM:SS\" - TIMEZONE: Time Zone (A) S17F2 - Clock Set Response \u00b6 Format: ACKC17 Where: - ACKC17: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Invalid time format Stream 18: Data Collection Management \u00b6 Purpose : Advanced data collection configuration Message Direction Description S18F1 \u2192 Equipment Data Collection Setup S18F2 \u2190 Equipment Data Collection Setup Response S18F3 \u2192 Equipment Data Collection Start S18F4 \u2190 Equipment Data Collection Start Response S18F5 \u2192 Equipment Data Collection Stop S18F6 \u2190 Equipment Data Collection Stop Response S18F1 - Data Collection Setup \u00b6 Format: {L:3 DCID DCPLAN {L:n VID_1 VID_2 ... VID_n } } Where: - DCID: Data Collection ID (A) - DCPLAN: Data Collection Plan (A) - VID: Variable ID (U1, U2, U4, or A) S18F2 - Data Collection Setup Response \u00b6 Format: {L:2 DCID ACKC18 } Where: - DCID: Data Collection ID (A) - ACKC18: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Invalid plan Stream 19: Inventory Management \u00b6 Purpose : Equipment and material inventory tracking Message Direction Description S19F1 \u2192 Equipment Inventory Request S19F2 \u2190 Equipment Inventory Response S19F3 \u2192 Equipment Inventory Update S19F4 \u2190 Equipment Inventory Update Response S19F5 \u2192 Equipment Inventory Add Request S19F6 \u2190 Equipment Inventory Add Response S19F7 \u2192 Equipment Inventory Remove Request S19F8 \u2190 Equipment Inventory Remove Response S19F9 \u2192 Equipment Inventory Status Request S19F10 \u2190 Equipment Inventory Status Response S19F11 \u2192 Equipment Inventory Move Request S19F12 \u2190 Equipment Inventory Move Response S19F13 \u2192 Equipment Inventory Search Request S19F14 \u2190 Equipment Inventory Search Response S19F15 \u2192 Equipment Inventory Lock Request S19F16 \u2190 Equipment Inventory Lock Response S19F17 \u2192 Equipment Inventory History Request S19F18 \u2190 Equipment Inventory History Response S19F19 \u2192 Equipment Inventory Audit Request S19F20 \u2190 Equipment Inventory Audit Response S19F1 - Inventory Request \u00b6 Format: {L:n INVTYPE_1 INVTYPE_2 ... INVTYPE_n } Where: - INVTYPE: Inventory Type (A) - \"SUBSTRATE\": Substrate inventory - \"CARRIER\": Carrier inventory - \"TOOL\": Tool inventory S19F2 - Inventory Response \u00b6 Format: {L:n {L:3 INVTYPE INVID INVDATA } } Where: - INVTYPE: Inventory Type (A) - INVID: Inventory ID (A) - INVDATA: Inventory Data (any format) S19F3 - Inventory Update \u00b6 Format: {L:3 INVTYPE INVID INVDATA } Where: - INVTYPE: Inventory Type (A) - INVID: Inventory ID (A) - INVDATA: Inventory Data (any format) S19F4 - Inventory Update Response \u00b6 Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1]) S19F5 - Inventory Add Request \u00b6 Format: {L:4 INVTYPE INVID INVDATA LOCATION } Where: - INVTYPE: Inventory Type (A) - INVID: Inventory ID (A) - INVDATA: Inventory Data (any format) - LOCATION: Location (A) S19F6 - Inventory Add Response \u00b6 Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1]) S19F7 - Inventory Remove Request \u00b6 Format: {L:2 INVTYPE INVID } Where: - INVTYPE: Inventory Type (A) - INVID: Inventory ID (A) S19F8 - Inventory Remove Response \u00b6 Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1]) S19F9 - Inventory Status Request \u00b6 Format: INVID Where: - INVID: Inventory ID (A) S19F10 - Inventory Status Response \u00b6 Format: {L:4 INVID INVSTATUS LOCATION INVDATA } Where: - INVID: Inventory ID (A) - INVSTATUS: Inventory Status (U1) - LOCATION: Location (A) - INVDATA: Inventory Data (any format) S19F11 - Inventory Move Request \u00b6 Format: {L:3 INVID SRCLOCATION DESTLOCATION } Where: - INVID: Inventory ID (A) - SRCLOCATION: Source Location (A) - DESTLOCATION: Destination Location (A) S19F12 - Inventory Move Response \u00b6 Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1]) S19F13 - Inventory Search Request \u00b6 Format: {L:3 INVTYPE SEARCHCRITERIA SEARCHOPTIONS } Where: - INVTYPE: Inventory Type (A) - SEARCHCRITERIA: Search Criteria (any format) - SEARCHOPTIONS: Search Options (any format) S19F14 - Inventory Search Response \u00b6 Format: {L:n {L:4 INVID INVTYPE LOCATION INVDATA } } Where: - INVID: Inventory ID (A) - INVTYPE: Inventory Type (A) - LOCATION: Location (A) - INVDATA: Inventory Data (any format) S19F15 - Inventory Lock Request \u00b6 Format: {L:3 INVID LOCKTYPE LOCKDURATION } Where: - INVID: Inventory ID (A) - LOCKTYPE: Lock Type (U1) - LOCKDURATION: Lock Duration (U4) S19F16 - Inventory Lock Response \u00b6 Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1]) S19F17 - Inventory History Request \u00b6 Format: {L:3 INVID STARTTIME ENDTIME } Where: - INVID: Inventory ID (A) - STARTTIME: Start Time (A) - ENDTIME: End Time (A) S19F18 - Inventory History Response \u00b6 Format: {L:2 INVID {L:n {L:4 TIME ACTION LOCATION INVDATA } } } Where: - INVID: Inventory ID (A) - TIME: Timestamp (A) - ACTION: Action Type (A) - LOCATION: Location (A) - INVDATA: Inventory Data (any format) S19F19 - Inventory Audit Request \u00b6 Format: {L:2 INVTYPE AUDITTYPE } Where: - INVTYPE: Inventory Type (A) - AUDITTYPE: Audit Type (U1) S19F20 - Inventory Audit Response \u00b6 Format: {L:3 INVTYPE AUDITRESULTS ACKC19 } Where: - INVTYPE: Inventory Type (A) - AUDITRESULTS: Audit Results (any format) - ACKC19: Acknowledge Code (B[1]) Stream 20: Substrate Transfer (SEMI-E157) \u00b6 Purpose : Advanced substrate transfer operations Message Direction Description S20F1 \u2192 Equipment Transfer Request S20F2 \u2190 Equipment Transfer Response S20F3 \u2192 Equipment Transfer Status Request S20F4 \u2190 Equipment Transfer Status Response S20F5 \u2192 Equipment Transfer Abort Request S20F6 \u2190 Equipment Transfer Abort Response S20F7 \u2192 Equipment Transfer Pause Request S20F8 \u2190 Equipment Transfer Pause Response S20F9 \u2192 Equipment Transfer Resume Request S20F10 \u2190 Equipment Transfer Resume Response S20F11 \u2192 Equipment Transfer Queue Request S20F12 \u2190 Equipment Transfer Queue Response S20F13 \u2192 Equipment Transfer Priority Request S20F14 \u2190 Equipment Transfer Priority Response S20F15 \u2192 Equipment Transfer Route Request S20F16 \u2190 Equipment Transfer Route Response S20F17 \u2192 Equipment Transfer Schedule Request S20F18 \u2190 Equipment Transfer Schedule Response S20F19 \u2192 Equipment Transfer Log Request S20F20 \u2190 Equipment Transfer Log Response S20F21 \u2192 Equipment Transfer Config Request S20F22 \u2190 Equipment Transfer Config Response S20F23 \u2192 Equipment Transfer Monitor Request S20F24 \u2190 Equipment Transfer Monitor Response S20F25 \u2192 Equipment Transfer Resource Request S20F26 \u2190 Equipment Transfer Resource Response S20F27 \u2192 Equipment Transfer Event Report S20F28 \u2190 Equipment Transfer Event Acknowledge S20F29 \u2192 Equipment Transfer Optimization Request S20F30 \u2190 Equipment Transfer Optimization Response S20F31 \u2192 Equipment Transfer History Request S20F32 \u2190 Equipment Transfer History Response S20F33 \u2192 Equipment Transfer Performance Request S20F34 \u2190 Equipment Transfer Performance Response S20F1 - Transfer Request \u00b6 Format: {L:4 TRANSFERID SOURCEID DESTID TRANSFERTYPE } Where: - TRANSFERID: Transfer ID (A) - SOURCEID: Source Location ID (A) - DESTID: Destination Location ID (A) - TRANSFERTYPE: Transfer Type (U1) - 0: Move - 1: Copy - 2: Exchange S20F2 - Transfer Response \u00b6 Format: {L:2 TRANSFERID ACKC20 } Where: - TRANSFERID: Transfer ID (A) - ACKC20: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Invalid location - 3: Transfer not possible Stream 21: Material Transfer Management \u00b6 Purpose : High-level material transfer coordination Message Direction Description S21F1 \u2192 Equipment Material Transfer Plan S21F2 \u2190 Equipment Material Transfer Plan Response S21F3 \u2192 Equipment Material Transfer Execute S21F4 \u2190 Equipment Material Transfer Execute Response S21F5 \u2192 Equipment Material Tracking Request S21F6 \u2190 Equipment Material Tracking Response S21F7 \u2192 Equipment Material Location Request S21F8 \u2190 Equipment Material Location Response S21F9 \u2192 Equipment Material History Request S21F10 \u2190 Equipment Material History Response S21F11 \u2192 Equipment Material Routing Request S21F12 \u2190 Equipment Material Routing Response S21F13 \u2192 Equipment Material Processing Request S21F14 \u2190 Equipment Material Processing Response S21F15 \u2192 Equipment Material Quality Request S21F16 \u2190 Equipment Material Quality Response S21F17 \u2192 Equipment Material Recipe Request S21F18 \u2190 Equipment Material Recipe Response S21F19 \u2192 Equipment Material Event Report S21F20 \u2190 Equipment Material Event Acknowledge S21F1 - Material Transfer Plan \u00b6 Format: {L:3 PLANID {L:n {L:3 MATERIALID SOURCEID DESTID } } PRIORITY } Where: - PLANID: Plan ID (A) - MATERIALID: Material ID (A) - SOURCEID: Source Location ID (A) - DESTID: Destination Location ID (A) - PRIORITY: Priority Level (U1) - 0: Low - 1: Normal - 2: High - 3: Critical S21F2 - Material Transfer Plan Response \u00b6 Format: {L:2 PLANID ACKC21 } Where: - PLANID: Plan ID (A) - ACKC21: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Invalid plan - 3: Resource conflict Message Categories \u00b6 Equipment Status (Stream 1) \u00b6 Basic communication establishment Equipment state monitoring Online/Offline control Equipment Control (Stream 2) \u00b6 Configuration management Time synchronization Event reporting setup Material Management (Streams 3-4) \u00b6 Carrier and substrate tracking Transfer job management Material handling control Exception Handling (Stream 5) \u00b6 Alarm management Exception reporting Error notification Data Collection (Stream 6) \u00b6 Process data gathering Event monitoring Trace data collection Program Management (Stream 7) \u00b6 Recipe management Process program control EPPD handling System Services (Streams 9-10) \u00b6 Error reporting Terminal communication System diagnostics Advanced Features (Streams 12+) \u00b6 Wafer mapping Object services Recipe management Processing control Common Message Examples \u00b6 S1F13 - Establish Communications Request \u00b6 Hex Format: Length: 00 00 00 0C (12 bytes) Header: 00 00 81 0D 00 00 xx xx xx xx Data: 01 00 (empty list) SECS-II Format: {L:0} // Empty list S1F14 - Establish Communications Response \u00b6 Hex Format: Length: 00 00 00 0D (13 bytes) Header: 00 00 01 0E 00 00 xx xx xx xx Data: 21 01 00 (COMMACK = 0, accepted) SECS-II Format: COMMACK = B[1] = 0 // Communication accepted Or with model info: {L:2 COMMACK = B[1] = 0 {L:2 MDLN = A[20] = \"EQUIPMENT_MODEL_NAME\" SOFTREV = A[20] = \"SOFTWARE_VERSION_1.0\" } } S1F1 - Are You There Request \u00b6 Hex Format: Length: 00 00 00 0A (10 bytes) Header: 00 00 81 01 00 00 xx xx xx xx Data: (empty) SECS-II Format: <none> (no data) S1F2 - Are You There Response \u00b6 Hex Format: Length: 00 00 00 0A (10 bytes) Header: 00 00 01 02 00 00 xx xx xx xx Data: (empty) SECS-II Format: <none> (no data) or {L:0} (empty list) S5F1 - Alarm Report Example \u00b6 Hex Format: Length: 00 00 00 1F (31 bytes) Header: 00 00 05 01 00 00 xx xx xx xx Data: 01 03 81 01 81 A1 01 01 41 0F Temperature Alarm SECS-II Format: {L:3 ALCD = B[1] = 129 (0x81) // Alarm Set + Alarm Type ALID = U1[1] = 1 ALTX = A[15] = \"Temperature Alarm\" } S6F11 - Event Report Example \u00b6 SECS-II Format: {L:3 DATAID = U4[1] = 12345 CEID = U2[1] = 1001 {L:1 {L:3 RPTID = U2[1] = 2001 {L:2 Temperature = F4[1] = 25.5 Pressure = F4[1] = 760.0 } } } } Data Type Format Examples \u00b6 ASCII Text: A[10] = \"TEST_VALUE\" Hex: 41 0A 54 45 53 54 5F 56 41 4C 55 45 Binary Data: B[4] = 0x12345678 Hex: 21 04 12 34 56 78 Unsigned Int: U1[1] = 255 Hex: F1 01 FF U2[1] = 65535 Hex: E1 02 FF FF U4[1] = 4294967295 ## SECS Data Item Definitions This section provides definitions for all standard SECS data items used in message formats. ### A **ABS** - Absolute Position (F4, F8) - Absolute position coordinate **ACCESSMODE** - Access Mode (U1) - 0: Read only - 1: Read/Write - 2: Write only **ACDS** - Alarm Collection Definition Send (various) - Alarm collection definition data **ACKA** - Acknowledge (B[1]) - General acknowledge code **ACKC10** - Terminal Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error **ACKC13** - Data Set Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Data set already exists - 3: No space available **ACKC15** - Recipe Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Recipe already exists - 3: No space available **ACKC3** - Carrier Acknowledge Code (B[1]) - 0: Completed successfully - 1: Command does not exist - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists **ACKC5** - Alarm Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error **ACKC6** - Data Collection Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error **ACKC7** - Process Program Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy **ACKC7A** - Alternative Process Program Acknowledge Code (B[1]) - Same as ACKC7 with additional codes **AGENT** - Agent Identifier (A) - Software agent identification **ALCD** - Alarm Code (B[1]) - Bit 0: Alarm Set (1) or Clear (0) - Bit 7: Alarm (1) or Warning (0) **ALED** - Alarm Enable/Disable (B[1]) - 128 (0x80): Enable - 0: Disable **ALID** - Alarm ID (U1, U2, U4, or A) - Unique identifier for alarm **ALIDVECTOR** - Alarm ID Vector (List of ALID) - Collection of alarm identifiers **ALTX** - Alarm Text (A[120]) - Descriptive text for alarm ### B-C **ASSGNID** - Assignment ID (A) - Unique assignment identifier **ATTRDATA** - Attribute Data (various) - Data value for object attribute **ATTRID** - Attribute ID (U1, U2, U4, or A) - Identifier for object attribute **ATTRRELN** - Attribute Relation (U1) - Relationship type between attributes **AUTOCLEAR_DISABLE** - Auto Clear Disable (BOOLEAN) - Disable automatic clearing **AUTOCLOSE** - Auto Close (BOOLEAN) - Automatic closing flag **AUTOPOST_DISABLE** - Auto Post Disable (BOOLEAN) - Disable automatic posting **BCDS** - Binary Collection Definition Send (B) - Binary collection definition data **BCEQU** - Binary Collection Equipment (B) - Equipment binary collection data **BINLT** - Binary Data (B) - Binary data content **BLKDEF** - Block Definition (various) - Definition of data block structure **BPD** - Bytes Per Die (U2) - Number of bytes per die **BYTMAX** - Maximum Bytes (U4) - Maximum byte count **CAACK** - Carrier Action Acknowledge (B[1]) - 0: Completed successfully - 1: Command does not exist - 2: Cannot perform now - 3: At least one parameter invalid **CARRIERACTION** - Carrier Action (U1) - 1: Load - 2: Unload - 3: Transfer - 4: Map - 5: Clamp - 6: Unclamp **CARRIERID** - Carrier ID (A) - Unique identifier for carrier **CARRIERSPEC** - Carrier Specification (various) - Carrier specification data **CATTRDATA** - Carrier Attribute Data (various) - Data for carrier attribute **CATTRID** - Carrier Attribute ID (U1, U2, U4, or A) - Identifier for carrier attribute **CCEACK** - Collection Event Change Acknowledge (B[1]) - Collection event change response **CCODE** - Command Code (A) - Command identifier string **CEED** - Collection Event Enable/Disable (BOOLEAN) - Enable or disable collection event **CEID** - Collection Event ID (U1, U2, U4, or A) - Unique identifier for collection event **CEIDSTART** - Collection Event ID Start (CEID) - Starting collection event ID **CEIDSTOP** - Collection Event ID Stop (CEID) - Stopping collection event ID **CENAME** - Collection Event Name (A) - Name of collection event **CEPACK** - Collection Event Parameter Acknowledge (B[1]) - Collection event parameter response **CEPVAL** - Collection Event Parameter Value (various) - Value of collection event parameter **CHKINFO** - Check Information (A) - Information for checking/validation **CKPNT** - Checkpoint (A) - Process checkpoint identifier **CMDA** - Command Acknowledge (B[1]) - Command acknowledgment **CMDMAX** - Command Maximum (U2) - Maximum command value **CNAME** - Collection Name (A) - Name of data collection **COACK** - Control Job Command Acknowledge (B[1]) - Control job command response **COLCT** - Collection Count (U2) - Number of items in collection **COLHDR** - Collection Header (various) - Header information for collection **COMMACK** - Communication Acknowledge (B[1]) - 0: Accepted - 1: Denied, Try Again - 2: Denied, Permission Not Granted **COMPARISONOPERATOR** - Comparison Operator (U1) - 0: Equal - 1: Not equal - 2: Less than - 3: Less than or equal - 4: Greater than - 5: Greater than or equal **CONDITION** - Condition (A) - Condition specification **COPYID** - Copy ID (A) - Identifier for copy operation **CPACK** - Command Parameter Acknowledge (various) - Command parameter acknowledgment **CPNAME** - Command Parameter Name (A) - Name of command parameter **CPVAL** - Command Parameter Value (various) - Value of command parameter ### D-E **CSAACK** - Carrier Slot Assignment Acknowledge (B[1]) - Carrier slot assignment response **CTLJOBCMD** - Control Job Command (A) - Control job command string **CTLJOBID** - Control Job ID (A) - Unique identifier for control job **DATA** - Data (various) - Generic data field **DATAACK** - Data Acknowledge (B[1]) - Data acknowledgment **DATAID** - Data ID (U1, U2, U4, or A) - Unique identifier for data **DATALENGTH** - Data Length (U1, U2, U4) - Length of data in bytes **DATASEG** - Data Segment (B) - Segment of larger data **DATASRC** - Data Source (A) - Source of data **DATLC** - Data Location (A) - Location of data **DELRSPSTAT** - Delete Response Status (B[1]) - Status of delete operation **DIRRSPSTAT** - Directory Response Status (B[1]) - Status of directory operation **DRACK** - Define Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one RPTID already defined - 4: Denied, At least one VID does not exist **DRRACK** - Define Report Request Acknowledge (B[1]) - Define report request response **DSID** - Data Set ID (U1, U2, U4, or A) - Unique identifier for data set **DSNAME** - Data Set Name (A) - Name of data set **DSPER** - Data Sample Period (U1, U2, U4) - Sampling period for data collection **DUTMS** - Device Under Test Milliseconds (U4) - Time in milliseconds for device test **DVNAME** - Discrete Variable Name (A) - Name of discrete variable **DVVAL** - Discrete Variable Value (various) - Value of discrete variable **DVVALNAME** - Discrete Variable Value Name (A) - Name for discrete variable value **EAC** - Equipment Acknowledge Code (B[1]) - 0: Accepted - 1: Denied, At least one constant does not exist - 2: Denied, Busy - 3: Denied, At least one constant out of range **ECDEF** - Equipment Constant Default (various) - Default value for equipment constant **ECID** - Equipment Constant ID (U1, U2, U4, or A) - Unique identifier for equipment constant **ECMAX** - Equipment Constant Maximum (various) - Maximum value for equipment constant **ECMIN** - Equipment Constant Minimum (various) - Minimum value for equipment constant **ECNAME** - Equipment Constant Name (A) - Name of equipment constant **ECV** - Equipment Constant Value (various) - Value of equipment constant **EDID** - Equipment ID (U1, U2, U4, or A) - Unique identifier for equipment **EMID** - Equipment Module ID (A) - Identifier for equipment module **EPD** - Equipment Parameter Data (various) - Equipment parameter information **EQID** - Equipment ID (A) - Equipment identifier **EQNAME** - Equipment Name (A) - Name of equipment **EQUSERID** - Equipment User ID (A) - User identifier for equipment access **ERACK** - Enable/Disable Event Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, At least one CEID does not exist - 2: Denied, Busy **ERRCODE** - Error Code (U2) - Numeric error code **ERRTEXT** - Error Text (A) - Descriptive error text **ERRW7** - Error W7 (B[1]) - W7-specific error code **EVNTSRC** - Event Source (A) - Source of event **EVNTSRC2** - Event Source 2 (A) - Secondary event source **EXID** - Exception ID (U4) - Exception identifier **EXMESSAGE** - Exception Message (A) - Exception message text **EXRECVRA** - Exception Recovery Action (A) - Recovery action for exception **EXTYPE** - Exception Type (U1) - Type of exception ### F-L **FCNID** - Function ID (B[1]) - SECS function identifier **FFROT** - Flat Finder Rotation (F4) - Rotation angle for flat finder **FILDAT** - File Data (B) - File content data **FNLOC** - Final Location (A) - Final destination location **FRMLEN** - Frame Length (U2) - Length of data frame **GETRSPSTAT** - Get Response Status (B[1]) - Status of get operation **GOILACK** - Go Online Acknowledge (B[1]) - Go online response **GRANT** - Grant Code (B[1]) - 0: Granted - 1: Busy, try again - 2: No space **GRANT6** - Grant Code 6 (B[1]) - Stream 6 specific grant code **GRNT1** - Grant 1 (B[1]) - First grant code **GRXLACK** - Get Recipe Acknowledge (B[1]) - Recipe get acknowledgment **HANDLE** - Handle (A) - Object handle identifier **HCACK** - Host Command Acknowledge (B[1]) - 0: Acknowledged - 1: Invalid command - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists **HOACK** - Host Online Acknowledge (B[1]) - Host online acknowledgment **HOCANCELACK** - Host Online Cancel Acknowledge (B[1]) - Host online cancel response **HOCMDNAME** - Host Online Command Name (A) - Name of host online command **HOHALTACK** - Host Online Halt Acknowledge (B[1]) - Host online halt response **IACDS** - Input Alarm Collection Definition Send (various) - Input alarm collection definition **IBCDS** - Input Binary Collection Definition Send (B) - Input binary collection definition **IDTYP** - ID Type (B[1]) - 0: Data ID - 1: Equipment ID **INPTN** - Input Pattern (A) - Input pattern specification **ITEMACK** - Item Acknowledge (B[1]) - Item operation acknowledgment **ITEMERROR** - Item Error (A) - Error information for item **ITEMID** - Item ID (A) - Unique identifier for item **ITEMINDEX** - Item Index (U4) - Index position of item **ITEMLENGTH** - Item Length (U4) - Length of item data **ITEMPART** - Item Part (various) - Part of larger item **ITEMPARTCOUNT** - Item Part Count (U4) - Number of parts in item **ITEMPARTLENGTH** - Item Part Length (U4) - Length of item part **ITEMTYPE** - Item Type (U1) - Type classification of item **ITEMTYPESUPPORT** - Item Type Support (B[1]) - Support indicator for item type **ITEMVERSION** - Item Version (A) - Version of item **JOBACTION** - Job Action (U1) - Action to perform on job **LENGTH** - Length (U1, U2, U4) - Generic length value **LIMITACK** - Limit Acknowledge (B[1]) - Limit operation acknowledgment **LIMITID** - Limit ID (A) - Identifier for limit **LIMITMAX** - Limit Maximum (various) - Maximum limit value **LIMITMIN** - Limit Minimum (various) - Minimum limit value **LINKID** - Link ID (A) - Identifier for link **LOC** - Location (A) - General location identifier **LOCID** - Location ID (A) - Specific location identifier **LOWERDB** - Lower Deadband (various) - Lower deadband value **LRACK** - Link Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one CEID already defined - 4: Denied, At least one CEID does not exist - 5: Denied, At least one RPTID does not exist **LVACK** - Limit Value Acknowledge (B[1]) - Limit value acknowledgment ### M-P **MAPER** - Map Error (U1) - Map operation error code **MAPFT** - Map Format (U1) - Format of map data **MAXNUMBER** - Maximum Number (U4) - Maximum numeric value **MAXTIME** - Maximum Time (U4) - Maximum time value **MCINDEX** - Multi-Collection Index (U2) - Index for multi-collection **MDACK** - Mode Data Acknowledge (B[1]) - Mode data acknowledgment **MDLN** - Model Number (A[20]) - Equipment model designation **MEXP** - Message Expected (B[1]) - Expected message indicator **MF** - Message Format (U1) - Format of message **MHEAD** - Message Header (B[10]) - Complete 10-byte SECS message header **MID** - Message ID (U1, U2, U4, or A) - Message identifier **MIDAC** - Message ID Acknowledge (B[1]) - Message ID acknowledgment **MIDRA** - Message ID Response Acknowledge (B[1]) - Message ID response acknowledgment **MLCL** - Multi-Level Collection List (various) - Multi-level collection data **MMODE** - Machine Mode (U1) - Current machine operating mode **NACDS** - New Alarm Collection Definition Send (various) - New alarm collection definition **NBCDS** - New Binary Collection Definition Send (B) - New binary collection definition **NULBC** - Null Byte Count (U1) - Count of null bytes **OBJACK** - Object Acknowledge (B[1]) - Object operation acknowledgment **OBJCMD** - Object Command (A) - Command for object **OBJID** - Object ID (A) - Unique identifier for object **OBJSPEC** - Object Specification (A) - Object specification string **OBJTOKEN** - Object Token (A) - Token for object access **OBJTYPE** - Object Type (A) - Type classification of object **OCEACK** - Object Collection Event Acknowledge (B[1]) - Object collection event response **OFLACK** - Offline Acknowledge (B[1]) - 0: Offline Accepted - 1: Offline Not Allowed **ONLACK** - Online Acknowledge (B[1]) - 0: Online Accepted - 1: Online Not Allowed **OPEID** - Operation Event ID (A) - Identifier for operation event **OPETYPE** - Operation Event Type (U1) - Type of operation event **OPID** - Operation ID (A) - Unique operation identifier **ORLOC** - Origin Location (A) - Origin location identifier **OUTPTN** - Output Pattern (A) - Output pattern specification **PARAMNAME** - Parameter Name (A) - Name of parameter **PARAMVAL** - Parameter Value (various) - Value of parameter **PDEATTRIBUTE** - Process Data Element Attribute (various) - Process data element attribute **PDEATTRIBUTENAME** - Process Data Element Attribute Name (A) - Name of process data element attribute **PDEATTRIBUTEVALUE** - Process Data Element Attribute Value (various) - Value of process data element attribute **PDEREF** - Process Data Element Reference (A) - Reference to process data element **PECEACK** - Process Event Collection Enable Acknowledge (B[1]) - Process event collection enable response **PECRSLT** - Process Event Collection Result (various) - Result of process event collection **PFCD** - Process Function Code (U1) - Function code for process **PGRPACTION** - Port Group Action (U1) - Action for port group **PODID** - Point of Delivery ID (A) - Identifier for delivery point **PORTACTION** - Port Action (U1) - Action for port **PORTGRPNAME** - Port Group Name (A) - Name of port group **PPARM** - Process Parameter (various) - Process parameter value **PPBODY** - Process Program Body (A or B) - Content of process program **PPGNT** - Process Program Grant (B[1]) - Process program grant response **PPID** - Process Program ID (A) - Unique identifier for process program **PRAXI** - Process Axis (A) - Process axis identifier **PRCMDNAME** - Process Command Name (A) - Name of process command **PRCPREEXECHK** - Process Pre-Execution Check (B[1]) - Pre-execution check flag **PRDCT** - Product (A) - Product identifier **PREACK** - Process Recipe Acknowledge (B[1]) - Process recipe acknowledgment **PREVENTID** - Process Event ID (A) - Process event identifier **PRJOBID** - Process Job ID (A) - Process job identifier **PRJOBMILESTONE** - Process Job Milestone (A) - Process job milestone **PRJOBSPACE** - Process Job Space (A) - Process job space allocation **PRMTRLORDER** - Process Material Order (U2) - Order of process material **PRPAUSEEVENTID** - Process Pause Event ID (A) - Event ID for process pause **PRPROCESSSTART** - Process Process Start (A) - Process start identifier **PRRECIPEMETHOD** - Process Recipe Method (A) - Process recipe method **PRSTATE** - Process State (U1) - Current state of process **PSRACK** - Process Start Request Acknowledge (B[1]) - Process start request response **PSREACK** - Process State Request Acknowledge (B[1]) - Process state request response **PTN** - Port Number (U1) - Port identification number ### Q-Z **QPRKEACK** - Query Process Recipe Key Acknowledge (B[1]) - Query process recipe key response **QREACK** - Query Recipe Acknowledge (B[1]) - Query recipe response **QRXLEACK** - Query Recipe Exclude Acknowledge (B[1]) - Query recipe exclude response **QUA** - Quality (U1) - Quality indicator **RAC** - Report Acknowledge (B[1]) - Report acknowledgment **RCMD** - Remote Command (A) - Remote command string **RCPATTRDATA** - Recipe Attribute Data (various) - Recipe attribute data **RCPATTRID** - Recipe Attribute ID (A) - Recipe attribute identifier **RCPBODY** - Recipe Body (A or B) - Recipe content **RCPBODYA** - Recipe Body A (A) - Recipe body in ASCII format **RCPCLASS** - Recipe Class (A) - Classification of recipe **RCPCMD** - Recipe Command (A) - Recipe command **RCPDEL** - Recipe Delete (A) - Recipe deletion identifier **RCPDESCLTH** - Recipe Description Length (U2) - Length of recipe description **RCPDESCNM** - Recipe Description Name (A) - Recipe description name **RCPDESCTIME** - Recipe Description Time (A) - Recipe description timestamp **RCPID** - Recipe ID (A) - Unique recipe identifier **RCPNAME** - Recipe Name (A) - Name of recipe **RCPNEWID** - Recipe New ID (A) - New recipe identifier **RCPOWCODE** - Recipe Owner Code (A) - Recipe ownership code **RCPPARNM** - Recipe Parameter Name (A) - Name of recipe parameter **RCPPARRULE** - Recipe Parameter Rule (A) - Rule for recipe parameter **RCPPARVAL** - Recipe Parameter Value (various) - Value of recipe parameter **RCPRENAME** - Recipe Rename (A) - New name for recipe **RCPSECCODE** - Recipe Security Code (A) - Security code for recipe **RCPSECNM** - Recipe Section Name (A) - Name of recipe section **RCPSPEC** - Recipe Specification (A) - Recipe specification **RCPSTAT** - Recipe Status (U1) - Status of recipe **RCPUPDT** - Recipe Update (A) - Recipe update identifier **RCPVERS** - Recipe Version (A) - Version of recipe **READLN** - Read Length (U4) - Length to read **REAPER** - Report Error (U1) - Report error code **RECLEN** - Record Length (U2) - Length of record **REFP** - Reference Point (F4, F8) - Reference coordinate point **REPGSZ** - Report Group Size (U2) - Size of report group **RESOLUTION** - Resolution (F4) - Measurement resolution **RESPDESTAT** - Response Delete Status (B[1]) - Status of response deletion **RESPEC** - Request Specification (A) - Request specification string **RETAINRECIPE_DISABLE** - Retain Recipe Disable (BOOLEAN) - Disable recipe retention **RETICLEID** - Reticle ID (A) - Reticle identifier **RETICLEID2** - Reticle ID 2 (A) - Secondary reticle identifier **RETPLACEINSTR** - Reticle Place Instruction (A) - Instruction for reticle placement **RETREMOVEINSTR** - Reticle Remove Instruction (A) - Instruction for reticle removal **REVID** - Revision ID (A) - Revision identifier **RIC** - Report Item Count (U2) - Count of items in report **RMACK** - Resource Manager Acknowledge (B[1]) - Resource manager acknowledgment **RMCHGSTAT** - Resource Manager Change Status (B[1]) - Resource manager change status **RMCHGTYPE** - Resource Manager Change Type (U1) - Type of resource manager change **RMDATASIZE** - Resource Manager Data Size (U4) - Size of resource manager data **RMGRNT** - Resource Manager Grant (B[1]) - Resource manager grant **RMNEWNS** - Resource Manager New Namespace (A) - New namespace for resource manager **RMNSCMD** - Resource Manager Namespace Command (A) - Resource manager namespace command **RMNSSPEC** - Resource Manager Namespace Specification (A) - Resource manager namespace specification **RMRECSPEC** - Resource Manager Record Specification (A) - Resource manager record specification **RMREQUESTOR** - Resource Manager Requestor (A) - Resource manager requestor identifier **RMSEGSPEC** - Resource Manager Segment Specification (A) - Resource manager segment specification **RMSPACE** - Resource Manager Space (A) - Resource manager space identifier **RMSPWD** - Resource Manager Space Password (A) - Password for resource manager space **RMSUSERID** - Resource Manager Space User ID (A) - User ID for resource manager space **ROWCT** - Row Count (U2) - Number of rows **RPMACK** - Report Parameter Acknowledge (B[1]) - Report parameter acknowledgment **RPSEL** - Report Selection (U1) - Report selection criteria **RPTID** - Report ID (U1, U2, U4, or A) - Unique identifier for report **RPTOC** - Report Occurrence (U2) - Report occurrence count **RQCMD** - Request Command (A) - Request command string **RRACK** - Recipe Request Acknowledge (B[1]) - Recipe request acknowledgment **RRACK_S20** - Recipe Request Acknowledge S20 (B[1]) - S20 specific recipe request acknowledgment **RSACK** - Recipe Send Acknowledge (B[1]) - Recipe send acknowledgment **RSDA** - Recipe Send Data A (A) - Recipe send data in ASCII **RSDC** - Recipe Send Data C (various) - Recipe send data compressed **RSINF** - Recipe Send Information (A) - Recipe send information **RSPACK** - Reset Spool Acknowledge (B[1]) - Reset spool acknowledgment **RTSRSPSTAT** - Real Time Status Response Status (B[1]) - Real time status response **RTYPE** - Report Type (U1) - Type of report **RecID** - Record ID (A) - Record identifier **SDACK** - Send Data Acknowledge (B[1]) - Send data acknowledgment **SDBIN** - Send Data Binary (B) - Binary data to send **SENDRSPSTAT** - Send Response Status (B[1]) - Status of send response **SEQNUM** - Sequence Number (U4) - Sequence number **SFCD** - Stream Function Code (U2) - SECS stream and function code **SHEAD** - Stream Header (B[4]) - Stream header information **SLOTID** - Slot ID (U1, U2) - Slot identifier **SMPLN** - Sample Number (U1, U2, U4) - Sample identification number **SOFTREV** - Software Revision (A[20]) - Software revision string **SPAACK** - Substrate Position Acknowledge (B[1]) - Substrate position acknowledgment **SPD** - Substrate Position Data (various) - Substrate position information **SPID** - Substrate Position ID (A) - Substrate position identifier **SPNAME** - Substrate Position Name (A) - Name of substrate position **SPR** - Substrate Position Reference (A) - Reference for substrate position **SPVAL** - Substrate Position Value (various) - Value of substrate position **SSAACK** - Substrate Status Acknowledge (B[1]) - Substrate status acknowledgment **SSACK** - Substrate Send Acknowledge (B[1]) - Substrate send acknowledgment **SSCMD** - Substrate Send Command (A) - Substrate send command **STATUS** - Status (U1) - General status indicator **STATUSTXT** - Status Text (A) - Status description text **STIME** - Start Time (A) - Start time stamp **STRACK** - Substrate Track (A) - Substrate tracking identifier **STRID** - Stream ID (B[1]) - SECS stream identifier **STRP** - Map Strip Data (various) - Wafer map strip data **SV** - Status Variable (various) - Status variable value **SV0** - Status Variable 0 (various) - First status variable **SVCACK** - Service Acknowledge (B[1]) - Service acknowledgment **SVCNAME** - Service Name (A) - Name of service **SVID** - Status Variable ID (U1, U2, U4, or A) - Status variable identifier **SVNAME** - Status Variable Name (A) - Name of status variable **TARGETID** - Target ID (A) - Target identifier **TARGETPDE** - Target Process Data Element (A) - Target process data element **TARGETSPEC** - Target Specification (A) - Target specification **TBLACK** - Table Acknowledge (B[1]) - Table operation acknowledgment **TBLCMD** - Table Command (A) - Table command **TBLELT** - Table Element (various) - Table element data **TBLID** - Table ID (A) - Table identifier **TBLTYP** - Table Type (U1) - Type of table **TCID** - Transaction Control ID (A) - Transaction control identifier **TEXT** - Text (A) - Text data **TIAACK** - Trace Initialize Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one SVID does not exist - 4: Denied, Busy **TIACK** - Time Acknowledge (B[1]) - 0: Acknowledged - 1: Error **TID** - Terminal ID (B[1]) - Terminal identifier **TIME** - Time (A[16]) - Time stamp in format \"YYMMDDhhmmss[cc]\" **TIMESTAMP** - Time Stamp (A) - General timestamp **TOTSMP** - Total Samples (U1, U2, U4) - Total number of samples **TRACK** - Track (A) - Track identifier **TRANSFERSIZE** - Transfer Size (U4) - Size of data transfer **TRATOMCID** - Transaction Atomic ID (A) - Atomic transaction identifier **TRAUTOD** - Transaction Auto Delete (BOOLEAN) - Auto delete transaction flag **TRAUTOSTART** - Transaction Auto Start (BOOLEAN) - Auto start transaction flag **TRCMDNAME** - Transaction Command Name (A) - Name of transaction command **TRDIR** - Transfer Direction (U1) - Direction of transfer **TRID** - Trace Request ID (U1, U2, U4, or A) - Trace request identifier **TRJOBID** - Transaction Job ID (A) - Transaction job identifier **TRJOBMS** - Transaction Job Milestone (A) - Transaction job milestone **TRJOBNAME** - Transaction Job Name (A) - Name of transaction job **TRLINK** - Transaction Link (A) - Transaction link identifier **TRLOCATION** - Transaction Location (A) - Transaction location **TROBJNAME** - Transaction Object Name (A) - Name of transaction object **TROBJTYPE** - Transaction Object Type (A) - Type of transaction object **TRPORT** - Transfer Port (U1) - Transfer port number **TRPTNR** - Transfer Partner (A) - Transfer partner identifier **TRPTPORT** - Transfer Point Port (U1) - Transfer point port **TRRCP** - Transaction Recipe (A) - Transaction recipe **TRROLE** - Transaction Role (A) - Role in transaction **TRTYPE** - Transfer Type (U1) - Type of transfer **TSIP** - Time Stamp Input (A) - Input timestamp **TSOP** - Time Stamp Output (A) - Output timestamp **TTC** - Total Transfer Count (U4) - Total count of transfers **TYPEID** - Type ID (A) - Type identifier **UID** - User ID (A) - User identifier **UNFLEN** - Unformatted Length (U4) - Length of unformatted data **UNITS** - Units (A) - Measurement units **UPPERDB** - Upper Deadband (various) - Upper deadband value **V** - Variable Value (various) - Generic variable value **VERID** - Version ID (A) - Version identifier **VERIFYDEPTH** - Verify Depth (U1) - Depth of verification **VERIFYRSPSTAT** - Verify Response Status (B[1]) - Verification response status **VERIFYSUCCESS** - Verify Success (BOOLEAN) - Verification success flag **VERIFYTYPE** - Verify Type (U1) - Type of verification **VID** - Variable ID (U1, U2, U4, or A) - Variable identifier **VLAACK** - Variable Limit Attribute Acknowledge (B[1]) - Variable limit attribute acknowledgment **WRACK** - Write Acknowledge (B[1]) - Write operation acknowledgment **XDIES** - X Dies (U2) - Number of dies in X direction **XYPOS** - XY Position (F4, F8) - X,Y coordinate position **YDIES** - Y Dies (U2) - Number of dies in Y direction Hex: D1 04 FF FF FF FF Signed Int: I1[1] = -128 Hex: 81 01 80 I2[1] = -32768 Hex: 71 01 80 00 Float: F4[1] = 3.14159 Hex: B1 04 40 49 0F D0 List: {L:2 item1 item2} Hex: 01 02 ... ... Empty List: {L:0} Hex: 01 00 Implementation Guidelines \u00b6 1. Message Validation \u00b6 Verify message length consistency Validate stream/function combinations Check wait bit appropriateness Ensure proper system bytes uniqueness 2. Response Handling \u00b6 Always respond to messages with wait bit set Use same system bytes in response Implement proper timeout handling Handle transaction aborts gracefully 3. State Management \u00b6 Track connection state (Not Connected, Selected, Online) Implement proper state transitions Handle communication establishment sequence Manage heartbeat and linktest mechanisms 4. Error Handling \u00b6 Implement S9 error messages for invalid requests Use proper reject codes Log communication errors appropriately Provide meaningful error descriptions 5. Data Encoding \u00b6 Use appropriate SECS-II data types Handle endianness correctly Validate data item structure Support multi-byte length fields when needed References \u00b6 SEMI E5 Specification SEMI E37 HSMS Generic Services SEMI E30 GEM (Generic Equipment Model)","title":"Secs"},{"location":"secs/#secs-message-format-specification","text":"","title":"SECS Message Format Specification"},{"location":"secs/#table-of-contents","text":"Overview HSMS Message Structure SECS-II Data Format Stream Definitions Message Categories Common Message Examples Implementation Guidelines","title":"Table of Contents"},{"location":"secs/#overview","text":"This document describes the SECS (Semiconductor Equipment Communication Standard) message format as defined in SEMI E5 specification SECS defines a standardized communication protocol for semiconductor manufacturing equipment, enabling consistent equipment integration and automation.","title":"Overview"},{"location":"secs/#hsms-message-structure","text":"","title":"HSMS Message Structure"},{"location":"secs/#message-layout","text":"[4 bytes: Length][10 bytes: Header][Variable: SECS-II Data]","title":"Message Layout"},{"location":"secs/#header-format-10-bytes","text":"Byte 0-1: Session ID (2 bytes) Byte 2: Stream (7 bits) + Wait Bit (1 bit) Byte 3: Function (1 byte) Byte 4: PType (1 byte) - always 0 for data messages Byte 5: SType (1 byte) - always 0 for data messages Byte 6-9: System Bytes (4 bytes) - unique message identifier","title":"Header Format (10 bytes)"},{"location":"secs/#wait-bit","text":"Set (1) : Primary message requiring response Clear (0) : Secondary message (response) or no response required","title":"Wait Bit"},{"location":"secs/#message-length","text":"4-byte big-endian integer preceding the header Excludes the length field itself (only counts header + data)","title":"Message Length"},{"location":"secs/#secs-ii-data-format","text":"","title":"SECS-II Data Format"},{"location":"secs/#data-item-format","text":"[Format Byte][Length Byte(s)][Data Bytes]","title":"Data Item Format"},{"location":"secs/#format-codes","text":"Format Type Description 0x01 List Container for multiple items 0x21 Binary Binary data (1 byte length) 0x25 Binary Binary data (2 byte length) 0x29 Binary Binary data (3 byte length) 0x41 ASCII ASCII text (1 byte length) 0x45 ASCII ASCII text (2 byte length) 0x61 JIS-8 Japanese text (1 byte length) 0x71 2-byte Signed 2-byte integer (1 byte length) 0x75 2-byte Signed 2-byte integer (2 byte length) 0x81 1-byte Signed 1-byte integer (1 byte length) 0x91 8-byte Signed 8-byte integer (1 byte length) 0xA1 4-byte Signed 4-byte integer (1 byte length) 0xB1 Float 4-byte floating point (1 byte length) 0xC1 8-byte Unsigned 8-byte integer (1 byte length) 0xD1 4-byte Unsigned 4-byte integer (1 byte length) 0xE1 2-byte Unsigned 2-byte integer (1 byte length) 0xF1 1-byte Unsigned 1-byte integer (1 byte length)","title":"Format Codes"},{"location":"secs/#stream-definitions","text":"","title":"Stream Definitions"},{"location":"secs/#stream-1-equipment-status","text":"Purpose : Equipment state information and basic communication Message Direction Description S1F1 \u2192 Equipment Are You There (Request) S1F2 \u2190 Equipment Are You There (Response) S1F3 \u2192 Equipment Selected Equipment Status Request S1F4 \u2190 Equipment Selected Equipment Status Response S1F11 \u2192 Equipment Status Variable Namelist Request S1F12 \u2190 Equipment Status Variable Namelist Response S1F13 \u2192 Equipment Establish Communications Request S1F14 \u2190 Equipment Establish Communications Response S1F15 \u2192 Equipment Request Offline S1F16 \u2190 Equipment Offline Acknowledge S1F17 \u2192 Equipment Request Online S1F18 \u2190 Equipment Online Acknowledge S1F19 \u2192 Equipment Recipe Name Request S1F20 \u2190 Equipment Recipe Name Response S1F21 \u2192 Equipment Recipe Body Request S1F22 \u2190 Equipment Recipe Body Response S1F23 \u2192 Equipment Process Program Request S1F24 \u2190 Equipment Process Program Response","title":"Stream 1: Equipment Status"},{"location":"secs/#s1f1-are-you-there-request","text":"Format: <none> (empty data)","title":"S1F1 - Are You There (Request)"},{"location":"secs/#s1f2-are-you-there-response","text":"Format: <none> (empty data) or {L:0} (empty list)","title":"S1F2 - Are You There (Response)"},{"location":"secs/#s1f3-selected-equipment-status-request","text":"Format: {L:n SVID_1 SVID_2 ... SVID_n } Where: - SVID: Status Variable ID (U1, U2, U4, or A)","title":"S1F3 - Selected Equipment Status Request"},{"location":"secs/#s1f4-selected-equipment-status-response","text":"Format: {L:n SV_1 SV_2 ... SV_n } Where: - SV: Status Variable value (any format)","title":"S1F4 - Selected Equipment Status Response"},{"location":"secs/#s1f13-establish-communications-request","text":"Format: {L:2 MDLN SOFTREV } Where: - MDLN: Model Number (A[20]) - SOFTREV: Software Revision (A[20]) Or simply: <L:0> (empty list)","title":"S1F13 - Establish Communications Request"},{"location":"secs/#s1f14-establish-communications-response","text":"Format: {L:2 COMMACK {L:2 MDLN SOFTREV } } Where: - COMMACK: Communication Acknowledge (B[1]) - 0: Accepted - 1: Denied, Try Again - 2: Denied, Permission Not Granted - MDLN: Model Number (A[20]) - SOFTREV: Software Revision (A[20])","title":"S1F14 - Establish Communications Response"},{"location":"secs/#s1f15-request-offline","text":"Format: <none> (empty data)","title":"S1F15 - Request Offline"},{"location":"secs/#s1f16-offline-acknowledge","text":"Format: OFLACK Where: - OFLACK: Offline Acknowledge (B[1]) - 0: Offline Accepted - 1: Offline Not Allowed","title":"S1F16 - Offline Acknowledge"},{"location":"secs/#s1f17-request-online","text":"Format: <none> (empty data)","title":"S1F17 - Request Online"},{"location":"secs/#s1f18-online-acknowledge","text":"Format: ONLACK Where: - ONLACK: Online Acknowledge (B[1]) - 0: Online Accepted - 1: Online Not Allowed","title":"S1F18 - Online Acknowledge"},{"location":"secs/#s1f19-recipe-name-request","text":"Format: <none> (empty data)","title":"S1F19 - Recipe Name Request"},{"location":"secs/#s1f20-recipe-name-response","text":"Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A)","title":"S1F20 - Recipe Name Response"},{"location":"secs/#s1f21-recipe-body-request","text":"Format: PPID Where: - PPID: Process Program ID (A)","title":"S1F21 - Recipe Body Request"},{"location":"secs/#s1f22-recipe-body-response","text":"Format: {L:2 PPID PPBODY } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B)","title":"S1F22 - Recipe Body Response"},{"location":"secs/#s1f23-process-program-request","text":"Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A)","title":"S1F23 - Process Program Request"},{"location":"secs/#s1f24-process-program-response","text":"Format: {L:n {L:3 PPID PPBODY PPSTATUS } } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) - PPSTATUS: Process Program Status (U1) - 0: Available - 1: Not Available - 2: In Use - 3: Error","title":"S1F24 - Process Program Response"},{"location":"secs/#stream-2-equipment-control-and-diagnostics","text":"Purpose : Equipment configuration and diagnostic operations Message Direction Description S2F1 \u2192 Equipment Equipment Status Request S2F2 \u2190 Equipment Equipment Status Response S2F3 \u2192 Equipment Status Variable Value Request S2F4 \u2190 Equipment Status Variable Value Response S2F5 \u2190 Equipment Send Equipment Status S2F6 \u2192 Equipment Send Equipment Status Acknowledge S2F7 \u2192 Equipment Load Port Status Request S2F8 \u2190 Equipment Load Port Status Response S2F9 \u2192 Equipment Equipment Status Multi-Block Inquire S2F10 \u2190 Equipment Equipment Status Multi-Block Grant S2F11 \u2190 Equipment Equipment Status Multi-Block S2F12 \u2192 Equipment Equipment Status Multi-Block Acknowledge S2F13 \u2192 Equipment Equipment Constant Request S2F14 \u2190 Equipment Equipment Constant Response S2F15 \u2192 Equipment New Equipment Constant Send S2F16 \u2190 Equipment New Equipment Constant Acknowledge S2F17 \u2192 Equipment Date and Time Request S2F18 \u2190 Equipment Date and Time Response S2F19 \u2192 Equipment Recipe Body Request S2F20 \u2190 Equipment Recipe Body Response S2F21 \u2192 Equipment Recipe Body Send S2F22 \u2190 Equipment Recipe Body Acknowledge S2F23 \u2192 Equipment Trace Initialize Send S2F24 \u2190 Equipment Trace Initialize Acknowledge S2F25 \u2192 Equipment Loopback Diagnostic Request S2F26 \u2190 Equipment Loopback Diagnostic Response S2F27 \u2192 Equipment Initiate Processing Request S2F28 \u2190 Equipment Initiate Processing Acknowledge S2F29 \u2192 Equipment Equipment Constant Namelist Request S2F30 \u2190 Equipment Equipment Constant Namelist Response S2F31 \u2192 Equipment Date and Time Set Request S2F32 \u2190 Equipment Date and Time Set Response S2F33 \u2192 Equipment Define Report S2F34 \u2190 Equipment Define Report Acknowledge S2F35 \u2192 Equipment Link Event Report S2F36 \u2190 Equipment Link Event Report Acknowledge S2F37 \u2192 Equipment Enable/Disable Event Report S2F38 \u2190 Equipment Enable/Disable Event Report Acknowledge S2F39 \u2192 Equipment Status Variable Namelist Request S2F40 \u2190 Equipment Status Variable Namelist Response S2F41 \u2192 Equipment Host Command Send S2F42 \u2190 Equipment Host Command Acknowledge S2F43 \u2192 Equipment Reset Spooling Streams and Functions S2F44 \u2190 Equipment Reset Spooling Acknowledge S2F45 \u2192 Equipment Define Variable Limit Attributes S2F46 \u2190 Equipment Define Variable Limit Attributes Acknowledge S2F47 \u2192 Equipment Variable Limit Attribute Request S2F48 \u2190 Equipment Variable Limit Attribute Response S2F49 \u2192 Equipment Enhanced Remote Command S2F50 \u2190 Equipment Enhanced Remote Command Acknowledge S2F51 \u2192 Equipment Automated Substrate Mapping S2F52 \u2190 Equipment Automated Substrate Mapping Acknowledge S2F53 \u2192 Equipment Enhanced Define Report S2F54 \u2190 Equipment Enhanced Define Report Acknowledge S2F55 \u2192 Equipment Enhanced Link Event Report S2F56 \u2190 Equipment Enhanced Link Event Report Acknowledge S2F57 \u2192 Equipment Enhanced Enable/Disable Event Report S2F58 \u2190 Equipment Enhanced Enable/Disable Event Report Acknowledge S2F59 \u2192 Equipment Formatted Process Program Send S2F60 \u2190 Equipment Formatted Process Program Acknowledge S2F61 \u2192 Equipment Formatted Process Program Request S2F62 \u2190 Equipment Formatted Process Program Response S2F63 \u2192 Equipment Define Object S2F64 \u2190 Equipment Define Object Acknowledge","title":"Stream 2: Equipment Control and Diagnostics"},{"location":"secs/#s2f1-equipment-status-request","text":"Format: {L:n SVID_1 SVID_2 ... SVID_n } Where: - SVID: Status Variable ID (U1, U2, U4, or A)","title":"S2F1 - Equipment Status Request"},{"location":"secs/#s2f2-equipment-status-response","text":"Format: {L:n SV_1 SV_2 ... SV_n } Where: - SV: Status Variable value (any format)","title":"S2F2 - Equipment Status Response"},{"location":"secs/#s2f13-equipment-constant-request","text":"Format: {L:n ECID_1 ECID_2 ... ECID_n } Where: - ECID: Equipment Constant ID (U1, U2, U4, or A)","title":"S2F13 - Equipment Constant Request"},{"location":"secs/#s2f14-equipment-constant-response","text":"Format: {L:n ECV_1 ECV_2 ... ECV_n } Where: - ECV: Equipment Constant Value (any format)","title":"S2F14 - Equipment Constant Response"},{"location":"secs/#s2f15-new-equipment-constant-send","text":"Format: {L:n {L:2 ECID ECV } } Where: - ECID: Equipment Constant ID (U1, U2, U4, or A) - ECV: Equipment Constant Value (any format)","title":"S2F15 - New Equipment Constant Send"},{"location":"secs/#s2f16-new-equipment-constant-acknowledge","text":"Format: EAC Where: - EAC: Equipment Acknowledge Code (B[1]) - 0: Accepted - 1: Denied, At least one constant does not exist - 2: Denied, Busy - 3: Denied, At least one constant out of range","title":"S2F16 - New Equipment Constant Acknowledge"},{"location":"secs/#s2f17-date-and-time-request","text":"Format: <none> (empty data)","title":"S2F17 - Date and Time Request"},{"location":"secs/#s2f18-date-and-time-response","text":"Format: TIME Where: - TIME: Current Time (A[16]) format: \"YYMMDDhhmmss[cc]\" - YY: Year (2 digits) - MM: Month (01-12) - DD: Day (01-31) - hh: Hour (00-23) - mm: Minute (00-59) - ss: Second (00-59) - cc: Centisecond (00-99) optional","title":"S2F18 - Date and Time Response"},{"location":"secs/#s2f31-date-and-time-set-request","text":"Format: TIME Where: - TIME: Time to Set (A[16]) format: \"YYMMDDhhmmss[cc]\"","title":"S2F31 - Date and Time Set Request"},{"location":"secs/#s2f32-date-and-time-set-response","text":"Format: TIACK Where: - TIACK: Time Acknowledge (B[1]) - 0: Acknowledged - 1: Error","title":"S2F32 - Date and Time Set Response"},{"location":"secs/#s2f33-define-report","text":"Format: {L:n {L:2 DATAID {L:m {L:2 RPTID {L:k VID_1 VID_2 ... VID_k } } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A) - VID: Variable ID (U1, U2, U4, or A)","title":"S2F33 - Define Report"},{"location":"secs/#s2f34-define-report-acknowledge","text":"Format: DRACK Where: - DRACK: Define Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one RPTID already defined - 4: Denied, At least one VID does not exist","title":"S2F34 - Define Report Acknowledge"},{"location":"secs/#s2f35-link-event-report","text":"Format: {L:n {L:2 DATAID {L:m {L:2 CEID {L:k RPTID_1 RPTID_2 ... RPTID_k } } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CEID: Collection Event ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A)","title":"S2F35 - Link Event Report"},{"location":"secs/#s2f36-link-event-report-acknowledge","text":"Format: LRACK Where: - LRACK: Link Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one CEID already defined - 4: Denied, At least one CEID does not exist - 5: Denied, At least one RPTID does not exist","title":"S2F36 - Link Event Report Acknowledge"},{"location":"secs/#s2f37-enabledisable-event-report","text":"Format: {L:2 CEED {L:n CEID_1 CEID_2 ... CEID_n } } Where: - CEED: Collection Event Enable/Disable (BOOLEAN) - True: Enable - False: Disable - CEID: Collection Event ID (U1, U2, U4, or A)","title":"S2F37 - Enable/Disable Event Report"},{"location":"secs/#s2f38-enabledisable-event-report-acknowledge","text":"Format: ERACK Where: - ERACK: Enable/Disable Event Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, At least one CEID does not exist - 2: Denied, Busy","title":"S2F38 - Enable/Disable Event Report Acknowledge"},{"location":"secs/#s2f3-status-variable-value-request","text":"Format: {L:n SVID_1 SVID_2 ... SVID_n } Where: - SVID: Status Variable ID (U1, U2, U4, or A)","title":"S2F3 - Status Variable Value Request"},{"location":"secs/#s2f4-status-variable-value-response","text":"Format: {L:n SV_1 SV_2 ... SV_n } Where: - SV: Status Variable value (any format)","title":"S2F4 - Status Variable Value Response"},{"location":"secs/#s2f5-send-equipment-status","text":"Format: {L:n {L:2 SVID SV } } Where: - SVID: Status Variable ID (U1, U2, U4, or A) - SV: Status Variable value (any format)","title":"S2F5 - Send Equipment Status"},{"location":"secs/#s2f6-send-equipment-status-acknowledge","text":"Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S2F6 - Send Equipment Status Acknowledge"},{"location":"secs/#s2f7-load-port-status-request","text":"Format: {L:n PORTID_1 PORTID_2 ... PORTID_n } Where: - PORTID: Port ID (U1, U2, U4, or A)","title":"S2F7 - Load Port Status Request"},{"location":"secs/#s2f8-load-port-status-response","text":"Format: {L:n {L:3 PORTID PORTSTATE PORTMODE } } Where: - PORTID: Port ID (U1, U2, U4, or A) - PORTSTATE: Port State (U1) - 0: Unloaded - 1: Transfer Blocked - 2: Ready to Load - 3: Ready to Unload - 4: Transfer Ready - PORTMODE: Port Mode (U1) - 0: Manual - 1: Auto","title":"S2F8 - Load Port Status Response"},{"location":"secs/#s2f9-equipment-status-multi-block-inquire","text":"Format: {L:2 DSPER TOTSMP } Where: - DSPER: Data Sample Period (U1, U2, U4) - TOTSMP: Total Samples (U1, U2, U4)","title":"S2F9 - Equipment Status Multi-Block Inquire"},{"location":"secs/#s2f10-equipment-status-multi-block-grant","text":"Format: GRANT Where: - GRANT: Grant Code (B[1]) - 0: Granted - 1: Busy, try again - 2: No space","title":"S2F10 - Equipment Status Multi-Block Grant"},{"location":"secs/#s2f11-equipment-status-multi-block","text":"Format: {L:3 DSID SMPLN {L:n SV_1 SV_2 ... SV_n } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - SMPLN: Sample Number (U1, U2, U4) - SV: Status Variable value (any format)","title":"S2F11 - Equipment Status Multi-Block"},{"location":"secs/#s2f12-equipment-status-multi-block-acknowledge","text":"Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S2F12 - Equipment Status Multi-Block Acknowledge"},{"location":"secs/#s2f19-recipe-body-request","text":"Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A)","title":"S2F19 - Recipe Body Request"},{"location":"secs/#s2f20-recipe-body-response","text":"Format: {L:n {L:2 PPID PPBODY } } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B)","title":"S2F20 - Recipe Body Response"},{"location":"secs/#s2f21-recipe-body-send","text":"Format: {L:n {L:2 PPID PPBODY } } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B)","title":"S2F21 - Recipe Body Send"},{"location":"secs/#s2f22-recipe-body-acknowledge","text":"Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Recipe ID already exists - 3: No space available","title":"S2F22 - Recipe Body Acknowledge"},{"location":"secs/#s2f23-trace-initialize-send","text":"Format: {L:2 TRID {L:n SVID_1 SVID_2 ... SVID_n } } Where: - TRID: Trace Request ID (U1, U2, U4, or A) - SVID: Status Variable ID (U1, U2, U4, or A)","title":"S2F23 - Trace Initialize Send"},{"location":"secs/#s2f24-trace-initialize-acknowledge","text":"Format: TIAACK Where: - TIAACK: Trace Initialize Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one SVID does not exist - 4: Denied, Busy","title":"S2F24 - Trace Initialize Acknowledge"},{"location":"secs/#s2f25-loopback-diagnostic-request","text":"Format: {L:n DATA_1 DATA_2 ... DATA_n } Where: - DATA: Test Data (any format)","title":"S2F25 - Loopback Diagnostic Request"},{"location":"secs/#s2f26-loopback-diagnostic-response","text":"Format: {L:n DATA_1 DATA_2 ... DATA_n } Where: - DATA: Echoed Test Data (any format)","title":"S2F26 - Loopback Diagnostic Response"},{"location":"secs/#s2f27-initiate-processing-request","text":"Format: {L:2 PPID {L:n PARAMETER_1 PARAMETER_2 ... PARAMETER_n } } Where: - PPID: Process Program ID (A) - PARAMETER: Process Parameters (any format)","title":"S2F27 - Initiate Processing Request"},{"location":"secs/#s2f28-initiate-processing-acknowledge","text":"Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Recipe not found - 3: Equipment busy","title":"S2F28 - Initiate Processing Acknowledge"},{"location":"secs/#s2f29-equipment-constant-namelist-request","text":"Format: <none> (empty data)","title":"S2F29 - Equipment Constant Namelist Request"},{"location":"secs/#s2f30-equipment-constant-namelist-response","text":"Format: {L:n {L:6 ECID ECNAME ECMIN ECMAX ECDEF UNITS } } Where: - ECID: Equipment Constant ID (U1, U2, U4, or A) - ECNAME: Equipment Constant Name (A) - ECMIN: Minimum Value (any format) - ECMAX: Maximum Value (any format) - ECDEF: Default Value (any format) - UNITS: Units (A)","title":"S2F30 - Equipment Constant Namelist Response"},{"location":"secs/#s2f39-status-variable-namelist-request","text":"Format: <none> (empty data)","title":"S2F39 - Status Variable Namelist Request"},{"location":"secs/#s2f40-status-variable-namelist-response","text":"Format: {L:n {L:6 SVID SVNAME SVMIN SVMAX SVDEF UNITS } } Where: - SVID: Status Variable ID (U1, U2, U4, or A) - SVNAME: Status Variable Name (A) - SVMIN: Minimum Value (any format) - SVMAX: Maximum Value (any format) - SVDEF: Default Value (any format) - UNITS: Units (A)","title":"S2F40 - Status Variable Namelist Response"},{"location":"secs/#s2f41-host-command-send","text":"Format: {L:3 RCMD {L:n CPNAME_1 CPNAME_2 ... CPNAME_n } {L:n CPVAL_1 CPVAL_2 ... CPVAL_n } } Where: - RCMD: Remote Command (A) - CPNAME: Command Parameter Name (A) - CPVAL: Command Parameter Value (any format)","title":"S2F41 - Host Command Send"},{"location":"secs/#s2f42-host-command-acknowledge","text":"Format: {L:2 HCACK {L:n CPNAME_1 CPNAME_2 ... CPNAME_n } } Where: - HCACK: Host Command Acknowledge (B[1]) - 0: Acknowledged - 1: Invalid command - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists - CPNAME: Command Parameter Name (A)","title":"S2F42 - Host Command Acknowledge"},{"location":"secs/#s2f43-reset-spooling-streams-and-functions","text":"Format: {L:2 STRID FCNID } Where: - STRID: Stream ID (B[1]) - FCNID: Function ID (B[1])","title":"S2F43 - Reset Spooling Streams and Functions"},{"location":"secs/#s2f44-reset-spooling-acknowledge","text":"Format: RSPACK Where: - RSPACK: Reset Spool Acknowledge (B[1]) - 0: Acknowledged - 1: Error","title":"S2F44 - Reset Spooling Acknowledge"},{"location":"secs/#s2f45-define-variable-limit-attributes","text":"Format: {L:n {L:8 VID LIMITID UPPERDB LOWERDB UPPERDB LOWERDB LVID DVVAL } } Where: - VID: Variable ID (U1, U2, U4, or A) - LIMITID: Limit ID (U1, U2, U4, or A) - UPPERDB: Upper Deadband (any format) - LOWERDB: Lower Deadband (any format) - LVID: Limit Variable ID (U1, U2, U4, or A) - DVVAL: Default Variable Value (any format)","title":"S2F45 - Define Variable Limit Attributes"},{"location":"secs/#s2f46-define-variable-limit-attributes-acknowledge","text":"Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: At least one VID does not exist - 3: Invalid limit specification","title":"S2F46 - Define Variable Limit Attributes Acknowledge"},{"location":"secs/#s2f47-variable-limit-attribute-request","text":"Format: {L:n VID_1 VID_2 ... VID_n } Where: - VID: Variable ID (U1, U2, U4, or A)","title":"S2F47 - Variable Limit Attribute Request"},{"location":"secs/#s2f48-variable-limit-attribute-response","text":"Format: {L:n {L:8 VID LIMITID UPPERDB LOWERDB UPPERDB LOWERDB LVID DVVAL } } Where: - VID: Variable ID (U1, U2, U4, or A) - LIMITID: Limit ID (U1, U2, U4, or A) - UPPERDB: Upper Deadband (any format) - LOWERDB: Lower Deadband (any format) - LVID: Limit Variable ID (U1, U2, U4, or A) - DVVAL: Default Variable Value (any format)","title":"S2F48 - Variable Limit Attribute Response"},{"location":"secs/#s2f49-enhanced-remote-command","text":"Format: {L:4 DATAID OBJSPEC RCMD {L:n {L:2 CPNAME CPACK } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJSPEC: Object Specifier (A) - RCMD: Remote Command (A) - CPNAME: Command Parameter Name (A) - CPACK: Command Parameter Acknowledge (any format)","title":"S2F49 - Enhanced Remote Command"},{"location":"secs/#s2f50-enhanced-remote-command-acknowledge","text":"Format: {L:3 DATAID HCACK {L:n {L:2 CPNAME CPACK } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - HCACK: Host Command Acknowledge (B[1]) - CPNAME: Command Parameter Name (A) - CPACK: Command Parameter Acknowledge (any format)","title":"S2F50 - Enhanced Remote Command Acknowledge"},{"location":"secs/#s2f51-automated-substrate-mapping","text":"Format: {L:3 DATAID OBJSPEC {L:n MAPDATA_1 MAPDATA_2 ... MAPDATA_n } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJSPEC: Object Specifier (A) - MAPDATA: Mapping Data (various formats)","title":"S2F51 - Automated Substrate Mapping"},{"location":"secs/#s2f52-automated-substrate-mapping-acknowledge","text":"Format: {L:2 DATAID HCACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - HCACK: Host Command Acknowledge (B[1])","title":"S2F52 - Automated Substrate Mapping Acknowledge"},{"location":"secs/#s2f53-enhanced-define-report","text":"Format: {L:3 DATAID OBJTYPE {L:n {L:2 RPTID {L:m VID_1 VID_2 ... VID_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJTYPE: Object Type (A) - RPTID: Report ID (U1, U2, U4, or A) - VID: Variable ID (U1, U2, U4, or A)","title":"S2F53 - Enhanced Define Report"},{"location":"secs/#s2f54-enhanced-define-report-acknowledge","text":"Format: {L:2 DATAID DRACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - DRACK: Define Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one RPTID already defined - 4: Denied, At least one VID does not exist","title":"S2F54 - Enhanced Define Report Acknowledge"},{"location":"secs/#s2f55-enhanced-link-event-report","text":"Format: {L:3 DATAID OBJTYPE {L:n {L:2 CEID {L:m RPTID_1 RPTID_2 ... RPTID_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJTYPE: Object Type (A) - CEID: Collection Event ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A)","title":"S2F55 - Enhanced Link Event Report"},{"location":"secs/#s2f56-enhanced-link-event-report-acknowledge","text":"Format: {L:2 DATAID LRACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - LRACK: Link Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one CEID already defined - 4: Denied, At least one CEID does not exist - 5: Denied, At least one RPTID does not exist","title":"S2F56 - Enhanced Link Event Report Acknowledge"},{"location":"secs/#s2f57-enhanced-enabledisable-event-report","text":"Format: {L:3 DATAID CEED {L:n CEID_1 CEID_2 ... CEID_n } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CEED: Collection Event Enable/Disable (BOOLEAN) - CEID: Collection Event ID (U1, U2, U4, or A)","title":"S2F57 - Enhanced Enable/Disable Event Report"},{"location":"secs/#s2f58-enhanced-enabledisable-event-report-acknowledge","text":"Format: {L:2 DATAID ERACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - ERACK: Enable/Disable Event Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, At least one CEID does not exist - 2: Denied, Busy","title":"S2F58 - Enhanced Enable/Disable Event Report Acknowledge"},{"location":"secs/#s2f59-formatted-process-program-send","text":"Format: {L:3 PPID PPBODY PPFORMAT } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) - PPFORMAT: Process Program Format (U1) - 0: ASCII - 1: Binary - 2: Structured","title":"S2F59 - Formatted Process Program Send"},{"location":"secs/#s2f60-formatted-process-program-acknowledge","text":"Format: ACKC2 Where: - ACKC2: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Format not supported - 3: PPID already exists - 4: No space available","title":"S2F60 - Formatted Process Program Acknowledge"},{"location":"secs/#s2f61-formatted-process-program-request","text":"Format: {L:2 PPID PPFORMAT } Where: - PPID: Process Program ID (A) - PPFORMAT: Process Program Format (U1) - 0: ASCII - 1: Binary - 2: Structured","title":"S2F61 - Formatted Process Program Request"},{"location":"secs/#s2f62-formatted-process-program-response","text":"Format: {L:3 PPID PPBODY PPFORMAT } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) - PPFORMAT: Process Program Format (U1) - 0: ASCII - 1: Binary - 2: Structured","title":"S2F62 - Formatted Process Program Response"},{"location":"secs/#s2f63-define-object","text":"Format: {L:3 DATAID OBJTYPE {L:n {L:3 OBJID OBJNAME {L:m ATTRID_1 ATTRID_2 ... ATTRID_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJTYPE: Object Type (A) - OBJID: Object ID (A) - OBJNAME: Object Name (A) - ATTRID: Attribute ID (U1, U2, U4, or A)","title":"S2F63 - Define Object"},{"location":"secs/#s2f64-define-object-acknowledge","text":"Format: {L:2 DATAID OBJACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - OBJACK: Object Acknowledge (B[1]) - 0: Acknowledged - 1: Error - 2: Object type not supported - 3: Object already exists - 4: No space available","title":"S2F64 - Define Object Acknowledge"},{"location":"secs/#stream-3-material-status","text":"Purpose : Material and carrier tracking Message Direction Description S3F1 \u2192 Equipment Carrier Action Request S3F2 \u2190 Equipment Carrier Action Response S3F3 \u2192 Equipment Carrier Status Request S3F4 \u2190 Equipment Carrier Status Response S3F5 \u2190 Equipment Carrier Status Send S3F6 \u2192 Equipment Carrier Status Acknowledge S3F7 \u2192 Equipment Port Status Request S3F8 \u2190 Equipment Port Status Response S3F9 \u2190 Equipment Port Status Send S3F10 \u2192 Equipment Port Status Acknowledge S3F11 \u2192 Equipment Substrate Map Request S3F12 \u2190 Equipment Substrate Map Response S3F13 \u2190 Equipment Substrate Map Send S3F14 \u2192 Equipment Substrate Map Acknowledge S3F15 \u2192 Equipment Substrate Position Request S3F16 \u2190 Equipment Substrate Position Response S3F17 \u2192 Equipment Carrier Action Request (Extended) S3F18 \u2190 Equipment Carrier Action Response (Extended) S3F19 \u2192 Equipment Port Action Request S3F20 \u2190 Equipment Port Action Response S3F21 \u2192 Equipment Port Group Request S3F22 \u2190 Equipment Port Group Response S3F23 \u2192 Equipment Port Group Define S3F24 \u2190 Equipment Port Group Define Acknowledge S3F25 \u2192 Equipment Carrier ID Request S3F26 \u2190 Equipment Carrier ID Response S3F27 \u2192 Equipment Carrier ID Send S3F28 \u2190 Equipment Carrier ID Acknowledge S3F29 \u2192 Equipment Substrate Location Request S3F30 \u2190 Equipment Substrate Location Response S3F31 \u2190 Equipment Substrate Location Send S3F32 \u2192 Equipment Substrate Location Acknowledge S3F33 \u2192 Equipment Load Lock Status Request S3F34 \u2190 Equipment Load Lock Status Response S3F35 \u2190 Equipment Load Lock Status Send S3F36 \u2192 Equipment Load Lock Status Acknowledge","title":"Stream 3: Material Status"},{"location":"secs/#s3f1-carrier-action-request","text":"Format: {L:5 DATAID CARRIERACTION CARRIERID PTN {L:n {L:2 CATTRID CATTRDATA } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CARRIERACTION: Carrier Action (U1) - 1: Load - 2: Unload - 3: Transfer - CARRIERID: Carrier ID (A) - PTN: Port Number (U1) - CATTRID: Carrier Attribute ID (U1, U2, U4, or A) - CATTRDATA: Carrier Attribute Data (any format)","title":"S3F1 - Carrier Action Request"},{"location":"secs/#s3f2-carrier-action-response","text":"Format: {L:2 DATAID CAACK } Where: - DATAID: Data ID (matching request) - CAACK: Carrier Action Acknowledge (U1) - 0: Acknowledged - 1: Denied, Invalid Command - 2: Denied, Cannot Perform Now","title":"S3F2 - Carrier Action Response"},{"location":"secs/#s3f3-carrier-status-request","text":"Format: {L:n CARRIERID_1 CARRIERID_2 ... CARRIERID_n } Where: - CARRIERID: Carrier ID (A)","title":"S3F3 - Carrier Status Request"},{"location":"secs/#s3f4-carrier-status-response","text":"Format: {L:n {L:3 CARRIERID CARRIERSTATUS {L:m {L:2 CATTRID CATTRDATA } } } } Where: - CARRIERID: Carrier ID (A) - CARRIERSTATUS: Carrier Status (U1) - 0: No State - 1: Not Present - 2: Present - 3: Moving - CATTRID: Carrier Attribute ID (U1, U2, U4, or A) - CATTRDATA: Carrier Attribute Data (any format)","title":"S3F4 - Carrier Status Response"},{"location":"secs/#s3f5-carrier-status-send","text":"Format: {L:3 CARRIERID CARRIERSTATUS {L:n {L:2 CATTRID CATTRDATA } } } Where: - CARRIERID: Carrier ID (A) - CARRIERSTATUS: Carrier Status (U1) - 0: No State - 1: Not Present - 2: Present - 3: Moving - CATTRID: Carrier Attribute ID (U1, U2, U4, or A) - CATTRDATA: Carrier Attribute Data (any format)","title":"S3F5 - Carrier Status Send"},{"location":"secs/#s3f6-carrier-status-acknowledge","text":"Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S3F6 - Carrier Status Acknowledge"},{"location":"secs/#s3f7-port-status-request","text":"Format: {L:n PTN_1 PTN_2 ... PTN_n } Where: - PTN: Port Number (U1)","title":"S3F7 - Port Status Request"},{"location":"secs/#s3f8-port-status-response","text":"Format: {L:n {L:3 PTN PORTSTATUS {L:m {L:2 PATTRID PATTRDATA } } } } Where: - PTN: Port Number (U1) - PORTSTATUS: Port Status (U1) - 0: No State - 1: Unoccupied - 2: Occupied - 3: Loading - 4: Unloading - PATTRID: Port Attribute ID (U1, U2, U4, or A) - PATTRDATA: Port Attribute Data (any format)","title":"S3F8 - Port Status Response"},{"location":"secs/#s3f9-port-status-send","text":"Format: {L:3 PTN PORTSTATUS {L:n {L:2 PATTRID PATTRDATA } } } Where: - PTN: Port Number (U1) - PORTSTATUS: Port Status (U1) - PATTRID: Port Attribute ID (U1, U2, U4, or A) - PATTRDATA: Port Attribute Data (any format)","title":"S3F9 - Port Status Send"},{"location":"secs/#s3f10-port-status-acknowledge","text":"Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S3F10 - Port Status Acknowledge"},{"location":"secs/#s3f11-substrate-map-request","text":"Format: {L:2 CARRIERID {L:n SUBSTRATEID_1 SUBSTRATEID_2 ... SUBSTRATEID_n } } Where: - CARRIERID: Carrier ID (A) - SUBSTRATEID: Substrate ID (A)","title":"S3F11 - Substrate Map Request"},{"location":"secs/#s3f12-substrate-map-response","text":"Format: {L:n {L:3 SUBSTRATEID SUBSTRATELOC {L:m {L:2 SATTRID SATTRDATA } } } } Where: - SUBSTRATEID: Substrate ID (A) - SUBSTRATELOC: Substrate Location (U1) - SATTRID: Substrate Attribute ID (U1, U2, U4, or A) - SATTRDATA: Substrate Attribute Data (any format)","title":"S3F12 - Substrate Map Response"},{"location":"secs/#s3f13-substrate-map-send","text":"Format: {L:2 CARRIERID {L:n {L:3 SUBSTRATEID SUBSTRATELOC {L:m {L:2 SATTRID SATTRDATA } } } } } Where: - CARRIERID: Carrier ID (A) - SUBSTRATEID: Substrate ID (A) - SUBSTRATELOC: Substrate Location (U1) - SATTRID: Substrate Attribute ID (U1, U2, U4, or A) - SATTRDATA: Substrate Attribute Data (any format)","title":"S3F13 - Substrate Map Send"},{"location":"secs/#s3f14-substrate-map-acknowledge","text":"Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S3F14 - Substrate Map Acknowledge"},{"location":"secs/#s3f15-substrate-position-request","text":"Format: {L:2 CARRIERID SUBSTRATEID } Where: - CARRIERID: Carrier ID (A) - SUBSTRATEID: Substrate ID (A)","title":"S3F15 - Substrate Position Request"},{"location":"secs/#s3f16-substrate-position-response","text":"Format: {L:3 SUBSTRATEID SUBSTRATELOC SUBSTRATESTATUS } Where: - SUBSTRATEID: Substrate ID (A) - SUBSTRATELOC: Substrate Location (U1) - SUBSTRATESTATUS: Substrate Status (U1) - 0: No State - 1: Present - 2: Processing - 3: Completed","title":"S3F16 - Substrate Position Response"},{"location":"secs/#s3f17-carrier-action-request-extended","text":"Format: {L:5 DATAID CARRIERACTION CARRIERID PTN {L:n {L:2 CATTRID CATTRDATA } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CARRIERACTION: Carrier Action (U1) - CARRIERID: Carrier ID (A) - PTN: Port Number (U1) - CATTRID: Carrier Attribute ID (U1, U2, U4, or A) - CATTRDATA: Carrier Attribute Data (any format)","title":"S3F17 - Carrier Action Request (Extended)"},{"location":"secs/#s3f18-carrier-action-response-extended","text":"Format: {L:2 DATAID CAACK } Where: - DATAID: Data ID (matching request) - CAACK: Carrier Action Acknowledge (U1) - 0: Acknowledged - 1: Denied, Invalid Command - 2: Denied, Cannot Perform Now","title":"S3F18 - Carrier Action Response (Extended)"},{"location":"secs/#s3f19-port-action-request","text":"Format: {L:4 DATAID PORTACTION PTN {L:n {L:2 PATTRID PATTRDATA } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - PORTACTION: Port Action (U1) - 1: Open - 2: Close - 3: Lock - 4: Unlock - PTN: Port Number (U1) - PATTRID: Port Attribute ID (U1, U2, U4, or A) - PATTRDATA: Port Attribute Data (any format)","title":"S3F19 - Port Action Request"},{"location":"secs/#s3f20-port-action-response","text":"Format: {L:2 DATAID PAACK } Where: - DATAID: Data ID (matching request) - PAACK: Port Action Acknowledge (U1) - 0: Acknowledged - 1: Denied, Invalid Command - 2: Denied, Cannot Perform Now","title":"S3F20 - Port Action Response"},{"location":"secs/#s3f21-port-group-request","text":"Format: {L:n PORTGROUPID_1 PORTGROUPID_2 ... PORTGROUPID_n } Where: - PORTGROUPID: Port Group ID (A)","title":"S3F21 - Port Group Request"},{"location":"secs/#s3f22-port-group-response","text":"Format: {L:n {L:2 PORTGROUPID {L:m PTN_1 PTN_2 ... PTN_m } } } Where: - PORTGROUPID: Port Group ID (A) - PTN: Port Number (U1)","title":"S3F22 - Port Group Response"},{"location":"secs/#s3f23-port-group-define","text":"Format: {L:2 PORTGROUPID {L:n PTN_1 PTN_2 ... PTN_n } } Where: - PORTGROUPID: Port Group ID (A) - PTN: Port Number (U1)","title":"S3F23 - Port Group Define"},{"location":"secs/#s3f24-port-group-define-acknowledge","text":"Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S3F24 - Port Group Define Acknowledge"},{"location":"secs/#s3f25-carrier-id-request","text":"Format: PTN Where: - PTN: Port Number (U1)","title":"S3F25 - Carrier ID Request"},{"location":"secs/#s3f26-carrier-id-response","text":"Format: {L:2 PTN CARRIERID } Where: - PTN: Port Number (U1) - CARRIERID: Carrier ID (A)","title":"S3F26 - Carrier ID Response"},{"location":"secs/#s3f27-carrier-id-send","text":"Format: {L:2 PTN CARRIERID } Where: - PTN: Port Number (U1) - CARRIERID: Carrier ID (A)","title":"S3F27 - Carrier ID Send"},{"location":"secs/#s3f28-carrier-id-acknowledge","text":"Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S3F28 - Carrier ID Acknowledge"},{"location":"secs/#s3f29-substrate-location-request","text":"Format: {L:n SUBSTRATEID_1 SUBSTRATEID_2 ... SUBSTRATEID_n } Where: - SUBSTRATEID: Substrate ID (A)","title":"S3F29 - Substrate Location Request"},{"location":"secs/#s3f30-substrate-location-response","text":"Format: {L:n {L:3 SUBSTRATEID CARRIERID SUBSTRATELOC } } Where: - SUBSTRATEID: Substrate ID (A) - CARRIERID: Carrier ID (A) - SUBSTRATELOC: Substrate Location (U1)","title":"S3F30 - Substrate Location Response"},{"location":"secs/#s3f31-substrate-location-send","text":"Format: {L:3 SUBSTRATEID CARRIERID SUBSTRATELOC } Where: - SUBSTRATEID: Substrate ID (A) - CARRIERID: Carrier ID (A) - SUBSTRATELOC: Substrate Location (U1)","title":"S3F31 - Substrate Location Send"},{"location":"secs/#s3f32-substrate-location-acknowledge","text":"Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S3F32 - Substrate Location Acknowledge"},{"location":"secs/#s3f33-load-lock-status-request","text":"Format: {L:n LLID_1 LLID_2 ... LLID_n } Where: - LLID: Load Lock ID (A)","title":"S3F33 - Load Lock Status Request"},{"location":"secs/#s3f34-load-lock-status-response","text":"Format: {L:n {L:3 LLID LLSTATUS {L:m {L:2 LLATTRID LLATTRDATA } } } } Where: - LLID: Load Lock ID (A) - LLSTATUS: Load Lock Status (U1) - 0: No State - 1: Open - 2: Closed - 3: Pumping - 4: Venting - LLATTRID: Load Lock Attribute ID (U1, U2, U4, or A) - LLATTRDATA: Load Lock Attribute Data (any format)","title":"S3F34 - Load Lock Status Response"},{"location":"secs/#s3f35-load-lock-status-send","text":"Format: {L:3 LLID LLSTATUS {L:n {L:2 LLATTRID LLATTRDATA } } } Where: - LLID: Load Lock ID (A) - LLSTATUS: Load Lock Status (U1) - LLATTRID: Load Lock Attribute ID (U1, U2, U4, or A) - LLATTRDATA: Load Lock Attribute Data (any format)","title":"S3F35 - Load Lock Status Send"},{"location":"secs/#s3f36-load-lock-status-acknowledge","text":"Format: ACKC3 Where: - ACKC3: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S3F36 - Load Lock Status Acknowledge"},{"location":"secs/#stream-4-material-control","text":"Purpose : Material transfer and handling Message Direction Description S4F1 \u2192 Equipment Transfer Job Create S4F2 \u2190 Equipment Transfer Job Create Acknowledge S4F3 \u2192 Equipment Transfer Job Data S4F4 \u2190 Equipment Transfer Job Data Acknowledge S4F5 \u2192 Equipment Transfer Command S4F6 \u2190 Equipment Transfer Command Acknowledge","title":"Stream 4: Material Control"},{"location":"secs/#s4f1-transfer-job-create","text":"Format: {L:5 DATAID JOBID CARRIERID FROMPTN TOPTN } Where: - DATAID: Data ID (U1, U2, U4, or A) - JOBID: Job ID (A) - CARRIERID: Carrier ID (A) - FROMPTN: From Port Number (U1) - TOPTN: To Port Number (U1)","title":"S4F1 - Transfer Job Create"},{"location":"secs/#s4f2-transfer-job-create-acknowledge","text":"Format: {L:2 DATAID HCACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - HCACK: Host Command Acknowledge (B[1]) - 0: Acknowledged - 1: Invalid command - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists","title":"S4F2 - Transfer Job Create Acknowledge"},{"location":"secs/#s4f3-transfer-job-data","text":"Format: {L:n {L:5 JOBID CARRIERID FROMPTN TOPTN JOBST } } Where: - JOBID: Job ID (A) - CARRIERID: Carrier ID (A) - FROMPTN: From Port Number (U1) - TOPTN: To Port Number (U1) - JOBST: Job State (U1) - 0: Queued - 1: Selected - 2: Executing - 3: Completed - 4: Canceled - 5: Aborted - 6: Failed","title":"S4F3 - Transfer Job Data"},{"location":"secs/#s4f4-transfer-job-data-acknowledge","text":"Format: ACKC4 Where: - ACKC4: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S4F4 - Transfer Job Data Acknowledge"},{"location":"secs/#s4f5-transfer-command","text":"Format: {L:3 DATAID COMMCODE {L:n PARAMETER_1 PARAMETER_2 ... PARAMETER_n } } Where: - DATAID: Data ID (U1, U2, U4, or A) - COMMCODE: Command Code (A) - \"START\": Start transfer - \"STOP\": Stop transfer - \"PAUSE\": Pause transfer - \"RESUME\": Resume transfer - \"CANCEL\": Cancel transfer - PARAMETER: Command Parameters (various formats)","title":"S4F5 - Transfer Command"},{"location":"secs/#s4f6-transfer-command-acknowledge","text":"Format: {L:2 DATAID HCACK } Where: - DATAID: Data ID (U1, U2, U4, or A) - HCACK: Host Command Acknowledge (B[1]) - 0: Acknowledged - 1: Invalid command - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists","title":"S4F6 - Transfer Command Acknowledge"},{"location":"secs/#stream-5-exception-reporting","text":"Purpose : Alarm and exception handling Message Direction Description S5F1 \u2190 Equipment Alarm Report Send S5F2 \u2192 Equipment Alarm Report Acknowledge S5F3 \u2192 Equipment En/Disable Alarm Send S5F4 \u2190 Equipment En/Disable Alarm Acknowledge S5F5 \u2192 Equipment List Alarms Request S5F6 \u2190 Equipment List Alarms Response S5F7 \u2192 Equipment List Enabled Alarm Request S5F8 \u2190 Equipment List Enabled Alarm Response","title":"Stream 5: Exception Reporting"},{"location":"secs/#s5f1-alarm-report-send","text":"Format: {L:3 ALCD ALID ALTX } Where: - ALCD: Alarm Code (B[1]) - Bit 0: Alarm Set (1) or Clear (0) - Bit 7: Alarm (1) or Warning (0) - ALID: Alarm ID (U1, U2, U4, or A) - ALTX: Alarm Text (A[120])","title":"S5F1 - Alarm Report Send"},{"location":"secs/#s5f2-alarm-report-acknowledge","text":"Format: ACKC5 Where: - ACKC5: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S5F2 - Alarm Report Acknowledge"},{"location":"secs/#s5f3-enabledisable-alarm-send","text":"Format: {L:2 ALED {L:n ALID_1 ALID_2 ... ALID_n } } Where: - ALED: Alarm Enable/Disable (B[1]) - 128 (0x80): Enable - 0: Disable - ALID: Alarm ID (U1, U2, U4, or A)","title":"S5F3 - Enable/Disable Alarm Send"},{"location":"secs/#s5f4-enabledisable-alarm-acknowledge","text":"Format: ACKC5 Where: - ACKC5: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S5F4 - Enable/Disable Alarm Acknowledge"},{"location":"secs/#s5f5-list-alarms-request","text":"Format: <none> (empty data)","title":"S5F5 - List Alarms Request"},{"location":"secs/#s5f6-list-alarms-response","text":"Format: {L:n ALID_1 ALID_2 ... ALID_n } Where: - ALID: Alarm ID (U1, U2, U4, or A)","title":"S5F6 - List Alarms Response"},{"location":"secs/#s5f7-list-enabled-alarm-request","text":"Format: <none> (empty data)","title":"S5F7 - List Enabled Alarm Request"},{"location":"secs/#s5f8-list-enabled-alarm-response","text":"Format: {L:n ALID_1 ALID_2 ... ALID_n } Where: - ALID: Alarm ID (U1, U2, U4, or A) - Only enabled alarms","title":"S5F8 - List Enabled Alarm Response"},{"location":"secs/#stream-6-data-collection","text":"Purpose : Process data collection and event reporting Message Direction Description S6F1 \u2190 Equipment Trace Data Send S6F2 \u2192 Equipment Trace Data Acknowledge S6F3 \u2190 Equipment Discrete Variable Data Send S6F4 \u2192 Equipment Discrete Variable Data Acknowledge S6F5 \u2190 Equipment Multi-block Data Send S6F6 \u2192 Equipment Multi-block Grant S6F7 \u2192 Equipment Data Transfer Request S6F8 \u2190 Equipment Data Transfer Response S6F11 \u2190 Equipment Event Report Send S6F12 \u2192 Equipment Event Report Acknowledge S6F15 \u2192 Equipment Event Report Request S6F16 \u2190 Equipment Event Report Response S6F19 \u2192 Equipment Individual Report Request S6F20 \u2190 Equipment Individual Report Response S6F21 \u2192 Equipment Annotated Individual Report Request S6F22 \u2190 Equipment Annotated Individual Report Response S6F23 \u2192 Equipment Request Spooled Data S6F24 \u2190 Equipment Request Spooled Data Response S6F25 \u2192 Equipment Data Set Upload S6F26 \u2190 Equipment Data Set Upload Acknowledge S6F27 \u2192 Equipment Data Set Download Request S6F28 \u2190 Equipment Data Set Download Response S6F29 \u2192 Equipment Data Set List Request S6F30 \u2190 Equipment Data Set List Response","title":"Stream 6: Data Collection"},{"location":"secs/#s6f11-event-report-send","text":"Format: {L:3 DATAID CEID {L:n {L:3 RPTID {L:m V_1 V_2 ... V_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - CEID: Collection Event ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A) - V: Variable Value (any format)","title":"S6F11 - Event Report Send"},{"location":"secs/#s6f12-event-report-acknowledge","text":"Format: ACKC6 Where: - ACKC6: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S6F12 - Event Report Acknowledge"},{"location":"secs/#s6f15-event-report-request","text":"Format: CEID Where: - CEID: Collection Event ID (U1, U2, U4, or A)","title":"S6F15 - Event Report Request"},{"location":"secs/#s6f16-event-report-response","text":"Format: {L:2 DATAID {L:n {L:3 RPTID {L:m V_1 V_2 ... V_m } } } } Where: - DATAID: Data ID (U1, U2, U4, or A) - RPTID: Report ID (U1, U2, U4, or A) - V: Variable Value (any format)","title":"S6F16 - Event Report Response"},{"location":"secs/#s6f1-trace-data-send","text":"Format: {L:3 TRID SMPLN {L:n SV_1 SV_2 ... SV_n } } Where: - TRID: Trace Request ID (U1, U2, U4, or A) - SMPLN: Sample Number (U1, U2, U4) - SV: Sample Value (any format)","title":"S6F1 - Trace Data Send"},{"location":"secs/#s6f2-trace-data-acknowledge","text":"Format: ACKC6 Where: - ACKC6: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S6F2 - Trace Data Acknowledge"},{"location":"secs/#s6f3-discrete-variable-data-send","text":"Format: {L:2 DVID DVVAL } Where: - DVID: Discrete Variable ID (U1, U2, U4, or A) - DVVAL: Discrete Variable Value (any format)","title":"S6F3 - Discrete Variable Data Send"},{"location":"secs/#s6f4-discrete-variable-data-acknowledge","text":"Format: ACKC6 Where: - ACKC6: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S6F4 - Discrete Variable Data Acknowledge"},{"location":"secs/#s6f5-multi-block-data-send","text":"Format: {L:3 MID IDTYP {L:n DATA_1 DATA_2 ... DATA_n } } Where: - MID: Message ID (U1, U2, U4, or A) - IDTYP: ID Type (B[1]) - 0: Data ID - 1: Equipment ID - DATA: Data blocks (any format)","title":"S6F5 - Multi-block Data Send"},{"location":"secs/#s6f6-multi-block-grant","text":"Format: GRANT Where: - GRANT: Grant Code (B[1]) - 0: Granted - 1: Busy, try again - 2: No space","title":"S6F6 - Multi-block Grant"},{"location":"secs/#s6f7-data-transfer-request","text":"Format: {L:2 DATALENGTH DATA } Where: - DATALENGTH: Data Length (U1, U2, U4) - DATA: Binary Data (B)","title":"S6F7 - Data Transfer Request"},{"location":"secs/#s6f8-data-transfer-response","text":"Format: ACK Where: - ACK: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S6F8 - Data Transfer Response"},{"location":"secs/#s6f19-individual-report-request","text":"Format: RPTID Where: - RPTID: Report ID (U1, U2, U4, or A)","title":"S6F19 - Individual Report Request"},{"location":"secs/#s6f20-individual-report-response","text":"Format: {L:n V_1 V_2 ... V_n } Where: - V: Variable Value (any format)","title":"S6F20 - Individual Report Response"},{"location":"secs/#s6f21-annotated-individual-report-request","text":"Format: RPTID Where: - RPTID: Report ID (U1, U2, U4, or A)","title":"S6F21 - Annotated Individual Report Request"},{"location":"secs/#s6f22-annotated-individual-report-response","text":"Format: {L:n {L:2 VID V } } Where: - VID: Variable ID (U1, U2, U4, or A) - V: Variable Value (any format)","title":"S6F22 - Annotated Individual Report Response"},{"location":"secs/#s6f23-request-spooled-data","text":"Format: DSID Where: - DSID: Data Set ID (U1, U2, U4, or A)","title":"S6F23 - Request Spooled Data"},{"location":"secs/#s6f24-request-spooled-data-response","text":"Format: {L:3 DSID DSCOUNT {L:n DATA_1 DATA_2 ... DATA_n } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSCOUNT: Data Set Count (U1, U2, U4) - DATA: Spooled Data (any format)","title":"S6F24 - Request Spooled Data Response"},{"location":"secs/#s6f25-data-set-upload","text":"Format: {L:4 DSID DSNAME DSTYPE {L:n DATA_1 DATA_2 ... DATA_n } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) - DSTYPE: Data Set Type (U1) - 0: Process data - 1: Equipment data - 2: Alarm data - 3: Event data - DATA: Data Set Content (any format)","title":"S6F25 - Data Set Upload"},{"location":"secs/#s6f26-data-set-upload-acknowledge","text":"Format: {L:2 DSID DSUPACK } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSUPACK: Data Set Upload Acknowledge (B[1]) - 0: Acknowledged - 1: Error - 2: Data set already exists - 3: No space available","title":"S6F26 - Data Set Upload Acknowledge"},{"location":"secs/#s6f27-data-set-download-request","text":"Format: {L:2 DSID DSNAME } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A)","title":"S6F27 - Data Set Download Request"},{"location":"secs/#s6f28-data-set-download-response","text":"Format: {L:4 DSID DSNAME DSTYPE {L:n DATA_1 DATA_2 ... DATA_n } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) - DSTYPE: Data Set Type (U1) - DATA: Data Set Content (any format)","title":"S6F28 - Data Set Download Response"},{"location":"secs/#s6f29-data-set-list-request","text":"Format: <none> (empty data)","title":"S6F29 - Data Set List Request"},{"location":"secs/#s6f30-data-set-list-response","text":"Format: {L:n {L:3 DSID DSNAME DSTYPE } } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) - DSTYPE: Data Set Type (U1) - 0: Process data - 1: Equipment data - 2: Alarm data - 3: Event data","title":"S6F30 - Data Set List Response"},{"location":"secs/#stream-7-process-program-management","text":"Purpose : Recipe and process program handling Message Direction Description S7F1 \u2192 Equipment Process Program Load Inquire S7F2 \u2190 Equipment Process Program Load Grant S7F3 \u2192 Equipment Process Program Send S7F4 \u2190 Equipment Process Program Acknowledge S7F5 \u2192 Equipment Process Program Request S7F6 \u2190 Equipment Process Program Data S7F17 \u2192 Equipment Delete Process Program Send S7F18 \u2190 Equipment Delete Process Program Acknowledge S7F19 \u2192 Equipment Current EPPD Request S7F20 \u2190 Equipment Current EPPD Data S7F21 \u2192 Equipment Process Program Directory Request S7F22 \u2190 Equipment Process Program Directory Response S7F23 \u2192 Equipment Process Program Upload S7F24 \u2190 Equipment Process Program Upload Acknowledge S7F25 \u2192 Equipment Process Program Status Request S7F26 \u2190 Equipment Process Program Status Response S7F27 \u2192 Equipment Process Program Execute S7F28 \u2190 Equipment Process Program Execute Acknowledge S7F29 \u2192 Equipment Process Program Stop S7F30 \u2190 Equipment Process Program Stop Acknowledge S7F31 \u2192 Equipment Process Program Pause S7F32 \u2190 Equipment Process Program Pause Acknowledge S7F33 \u2192 Equipment Process Program Resume S7F34 \u2190 Equipment Process Program Resume Acknowledge S7F35 \u2192 Equipment Process Program Variable Request S7F36 \u2190 Equipment Process Program Variable Response S7F37 \u2192 Equipment Process Program Variable Send S7F38 \u2190 Equipment Process Program Variable Acknowledge S7F39 \u2192 Equipment Recipe Validation Request S7F40 \u2190 Equipment Recipe Validation Response S7F41 \u2192 Equipment Recipe Parameter Request S7F42 \u2190 Equipment Recipe Parameter Response S7F43 \u2192 Equipment Recipe Parameter Set S7F44 \u2190 Equipment Recipe Parameter Set Acknowledge","title":"Stream 7: Process Program Management"},{"location":"secs/#s7f1-process-program-load-inquire","text":"Format: {L:2 PPID LENGTH } Where: - PPID: Process Program ID (A) - LENGTH: Length of Process Program (U1, U2, U4)","title":"S7F1 - Process Program Load Inquire"},{"location":"secs/#s7f2-process-program-load-grant","text":"Format: GRANT Where: - GRANT: Grant Code (B[1]) - 0: OK - 1: Busy, try again - 2: No space - 3: Invalid PPID - 4: Mode not supported - 5: Communication not available - 6: PPID already exists","title":"S7F2 - Process Program Load Grant"},{"location":"secs/#s7f3-process-program-send","text":"Format: {L:2 PPID PPBODY } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B)","title":"S7F3 - Process Program Send"},{"location":"secs/#s7f4-process-program-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F4 - Process Program Acknowledge"},{"location":"secs/#s7f5-process-program-request","text":"Format: PPID Where: - PPID: Process Program ID (A)","title":"S7F5 - Process Program Request"},{"location":"secs/#s7f6-process-program-data","text":"Format: {L:2 PPID PPBODY } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B)","title":"S7F6 - Process Program Data"},{"location":"secs/#s7f17-delete-process-program-send","text":"Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A)","title":"S7F17 - Delete Process Program Send"},{"location":"secs/#s7f18-delete-process-program-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F18 - Delete Process Program Acknowledge"},{"location":"secs/#s7f19-current-eppd-request","text":"Format: <none> (empty data)","title":"S7F19 - Current EPPD Request"},{"location":"secs/#s7f20-current-eppd-data","text":"Format: {L:n {L:2 PPID {L:m PARAMETER_1 PARAMETER_2 ... PARAMETER_m } } } Where: - PPID: Process Program ID (A) - PARAMETER: Process Parameter (any format)","title":"S7F20 - Current EPPD Data"},{"location":"secs/#s7f21-process-program-directory-request","text":"Format: <none> (empty data)","title":"S7F21 - Process Program Directory Request"},{"location":"secs/#s7f22-process-program-directory-response","text":"Format: {L:n PPID_1 PPID_2 ... PPID_n } Where: - PPID: Process Program ID (A)","title":"S7F22 - Process Program Directory Response"},{"location":"secs/#s7f23-process-program-upload","text":"Format: {L:3 PPID PPBODY PPFORMAT } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B) - PPFORMAT: Process Program Format (U1) - 0: ASCII - 1: Binary - 2: Structured","title":"S7F23 - Process Program Upload"},{"location":"secs/#s7f24-process-program-upload-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F24 - Process Program Upload Acknowledge"},{"location":"secs/#s7f25-process-program-status-request","text":"Format: PPID Where: - PPID: Process Program ID (A)","title":"S7F25 - Process Program Status Request"},{"location":"secs/#s7f26-process-program-status-response","text":"Format: {L:3 PPID PPSTATUS PPSIZE } Where: - PPID: Process Program ID (A) - PPSTATUS: Process Program Status (U1) - 0: Not exists - 1: Exists - 2: Active - 3: Paused - PPSIZE: Process Program Size (U1, U2, U4)","title":"S7F26 - Process Program Status Response"},{"location":"secs/#s7f27-process-program-execute","text":"Format: {L:2 PPID {L:n PARAMETER_1 PARAMETER_2 ... PARAMETER_n } } Where: - PPID: Process Program ID (A) - PARAMETER: Execution Parameters (any format)","title":"S7F27 - Process Program Execute"},{"location":"secs/#s7f28-process-program-execute-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F28 - Process Program Execute Acknowledge"},{"location":"secs/#s7f29-process-program-stop","text":"Format: PPID Where: - PPID: Process Program ID (A)","title":"S7F29 - Process Program Stop"},{"location":"secs/#s7f30-process-program-stop-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F30 - Process Program Stop Acknowledge"},{"location":"secs/#s7f31-process-program-pause","text":"Format: PPID Where: - PPID: Process Program ID (A)","title":"S7F31 - Process Program Pause"},{"location":"secs/#s7f32-process-program-pause-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F32 - Process Program Pause Acknowledge"},{"location":"secs/#s7f33-process-program-resume","text":"Format: PPID Where: - PPID: Process Program ID (A)","title":"S7F33 - Process Program Resume"},{"location":"secs/#s7f34-process-program-resume-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F34 - Process Program Resume Acknowledge"},{"location":"secs/#s7f35-process-program-variable-request","text":"Format: {L:2 PPID {L:n PPVARID_1 PPVARID_2 ... PPVARID_n } } Where: - PPID: Process Program ID (A) - PPVARID: Process Program Variable ID (A)","title":"S7F35 - Process Program Variable Request"},{"location":"secs/#s7f36-process-program-variable-response","text":"Format: {L:2 PPID {L:n {L:2 PPVARID PPVARVAL } } } Where: - PPID: Process Program ID (A) - PPVARID: Process Program Variable ID (A) - PPVARVAL: Process Program Variable Value (any format)","title":"S7F36 - Process Program Variable Response"},{"location":"secs/#s7f37-process-program-variable-send","text":"Format: {L:2 PPID {L:n {L:2 PPVARID PPVARVAL } } } Where: - PPID: Process Program ID (A) - PPVARID: Process Program Variable ID (A) - PPVARVAL: Process Program Variable Value (any format)","title":"S7F37 - Process Program Variable Send"},{"location":"secs/#s7f38-process-program-variable-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F38 - Process Program Variable Acknowledge"},{"location":"secs/#s7f39-recipe-validation-request","text":"Format: {L:2 PPID PPBODY } Where: - PPID: Process Program ID (A) - PPBODY: Process Program Body (A or B)","title":"S7F39 - Recipe Validation Request"},{"location":"secs/#s7f40-recipe-validation-response","text":"Format: {L:3 PPID VALRESULT {L:n ERROR_1 ERROR_2 ... ERROR_n } } Where: - PPID: Process Program ID (A) - VALRESULT: Validation Result (B[1]) - 0: Valid - 1: Invalid - ERROR: Validation Error (A)","title":"S7F40 - Recipe Validation Response"},{"location":"secs/#s7f41-recipe-parameter-request","text":"Format: {L:2 PPID {L:n PARAMID_1 PARAMID_2 ... PARAMID_n } } Where: - PPID: Process Program ID (A) - PARAMID: Parameter ID (A)","title":"S7F41 - Recipe Parameter Request"},{"location":"secs/#s7f42-recipe-parameter-response","text":"Format: {L:2 PPID {L:n {L:3 PARAMID PARAMVAL PARAMUNIT } } } Where: - PPID: Process Program ID (A) - PARAMID: Parameter ID (A) - PARAMVAL: Parameter Value (any format) - PARAMUNIT: Parameter Unit (A)","title":"S7F42 - Recipe Parameter Response"},{"location":"secs/#s7f43-recipe-parameter-set","text":"Format: {L:2 PPID {L:n {L:3 PARAMID PARAMVAL PARAMUNIT } } } Where: - PPID: Process Program ID (A) - PARAMID: Parameter ID (A) - PARAMVAL: Parameter Value (any format) - PARAMUNIT: Parameter Unit (A)","title":"S7F43 - Recipe Parameter Set"},{"location":"secs/#s7f44-recipe-parameter-set-acknowledge","text":"Format: ACKC7 Where: - ACKC7: Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy","title":"S7F44 - Recipe Parameter Set Acknowledge"},{"location":"secs/#stream-8-control-program-management","text":"Purpose : Control program and recipe management Message Direction Description S8F1 \u2192 Equipment Format ECP S8F2 \u2190 Equipment Format ECP Acknowledge S8F3 \u2192 Equipment ECP Data S8F4 \u2190 Equipment ECP Data Acknowledge","title":"Stream 8: Control Program Management"},{"location":"secs/#s8f1-format-ecp","text":"Format: {L:2 ECPID ECPBODY } Where: - ECPID: Equipment Control Program ID (A) - ECPBODY: Equipment Control Program Body (A or B)","title":"S8F1 - Format ECP"},{"location":"secs/#s8f2-format-ecp-acknowledge","text":"Format: ACKC8 Where: - ACKC8: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: ECP ID already exists - 3: No space available","title":"S8F2 - Format ECP Acknowledge"},{"location":"secs/#s8f3-ecp-data","text":"Format: {L:2 ECPID ECPBODY } Where: - ECPID: Equipment Control Program ID (A) - ECPBODY: Equipment Control Program Body (A or B)","title":"S8F3 - ECP Data"},{"location":"secs/#s8f4-ecp-data-acknowledge","text":"Format: ACKC8 Where: - ACKC8: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: ECP ID not found - 3: Format error","title":"S8F4 - ECP Data Acknowledge"},{"location":"secs/#stream-9-system-errors","text":"Purpose : Communication error reporting Message Direction Description S9F1 \u2190 Equipment Unrecognized Device ID S9F3 \u2190 Equipment Unrecognized Stream Type S9F5 \u2190 Equipment Unrecognized Function Type S9F7 \u2190 Equipment Illegal Data S9F9 \u2190 Equipment Transaction Timer Timeout S9F11 \u2190 Equipment Data Too Long S9F13 \u2190 Equipment Conversation Timeout","title":"Stream 9: System Errors"},{"location":"secs/#s9f1-unrecognized-device-id","text":"Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the unrecognized message","title":"S9F1 - Unrecognized Device ID"},{"location":"secs/#s9f3-unrecognized-stream-type","text":"Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message with unrecognized stream type","title":"S9F3 - Unrecognized Stream Type"},{"location":"secs/#s9f5-unrecognized-function-type","text":"Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message with unrecognized function type","title":"S9F5 - Unrecognized Function Type"},{"location":"secs/#s9f7-illegal-data","text":"Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message with illegal data","title":"S9F7 - Illegal Data"},{"location":"secs/#s9f9-transaction-timer-timeout","text":"Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message that timed out","title":"S9F9 - Transaction Timer Timeout"},{"location":"secs/#s9f11-data-too-long","text":"Format: MHEAD Where: - MHEAD: Message Header (B[10]) The complete 10-byte header of the message that was too long","title":"S9F11 - Data Too Long"},{"location":"secs/#s9f13-conversation-timeout","text":"Format: {L:2 MEXP EDID } Where: - MEXP: Message Expected (B[1]) - Stream and Function of the expected message - EDID: Equipment ID (U1, U2, U4, or A) - ID of the equipment that timed out","title":"S9F13 - Conversation Timeout"},{"location":"secs/#stream-10-terminal-services","text":"Purpose : Operator interface communication Message Direction Description S10F1 \u2192 Equipment Terminal Request S10F2 \u2190 Equipment Terminal Response S10F3 \u2192 Equipment Terminal Display, Single S10F5 \u2192 Equipment Terminal Display, Multi-Block S10F9 \u2192 Equipment Broadcast Display Request S10F10 \u2190 Equipment Broadcast Display Acknowledge","title":"Stream 10: Terminal Services"},{"location":"secs/#s10f1-terminal-request","text":"Format: {L:2 TID TEXT } Where: - TID: Terminal ID (B[1]) - TEXT: Text Message (A)","title":"S10F1 - Terminal Request"},{"location":"secs/#s10f2-terminal-response","text":"Format: {L:2 TID TEXT } Where: - TID: Terminal ID (B[1]) - TEXT: Response Text (A)","title":"S10F2 - Terminal Response"},{"location":"secs/#s10f3-terminal-display-single","text":"Format: {L:2 TID TEXT } Where: - TID: Terminal ID (B[1]) - TEXT: Display Text (A)","title":"S10F3 - Terminal Display, Single"},{"location":"secs/#s10f5-terminal-display-multi-block","text":"Format: {L:2 TID {L:n TEXT_1 TEXT_2 ... TEXT_n } } Where: - TID: Terminal ID (B[1]) - TEXT: Display Text Lines (A)","title":"S10F5 - Terminal Display, Multi-Block"},{"location":"secs/#s10f9-broadcast-display-request","text":"Format: TEXT Where: - TEXT: Broadcast Message (A)","title":"S10F9 - Broadcast Display Request"},{"location":"secs/#s10f10-broadcast-display-acknowledge","text":"Format: ACKC10 Where: - ACKC10: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S10F10 - Broadcast Display Acknowledge"},{"location":"secs/#stream-12-wafer-mapping","text":"Purpose : Wafer map data handling Message Direction Description S12F1 \u2192 Equipment Map Setup Data Send S12F2 \u2190 Equipment Map Setup Data Acknowledge S12F3 \u2192 Equipment Map Setup Data Request S12F4 \u2190 Equipment Map Setup Data Response S12F5 \u2192 Equipment Map Transmit Inquire S12F6 \u2190 Equipment Map Transmit Grant S12F7 \u2192 Equipment Map Data Send S12F8 \u2190 Equipment Map Data Acknowledge S12F9 \u2192 Equipment Map Data Request S12F10 \u2190 Equipment Map Data Response S12F11 \u2192 Equipment Map Data Request 2 S12F12 \u2190 Equipment Map Data Response 2 S12F13 \u2190 Equipment Map Error Report S12F14 \u2192 Equipment Map Error Acknowledge S12F15 \u2192 Equipment Map Sample Send S12F16 \u2190 Equipment Map Sample Acknowledge S12F17 \u2192 Equipment Map Sample Request S12F18 \u2190 Equipment Map Sample Response S12F19 \u2192 Equipment Map Update Send S12F20 \u2190 Equipment Map Update Acknowledge","title":"Stream 12: Wafer Mapping"},{"location":"secs/#s12f1-map-setup-data-send","text":"Format: {L:3 MID IDTYP {L:n STRP_1 STRP_2 ... STRP_n } } Where: - MID: Map ID (A) - IDTYP: ID Type (B[1]) - 0: Wafer ID - 1: Die ID - STRP: Map Strip Data (various formats)","title":"S12F1 - Map Setup Data Send"},{"location":"secs/#s12f2-map-setup-data-acknowledge","text":"Format: ACKC12 Where: - ACKC12: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Map ID already exists - 3: No space available","title":"S12F2 - Map Setup Data Acknowledge"},{"location":"secs/#s12f3-map-setup-data-request","text":"Format: MID Where: - MID: Map ID (A)","title":"S12F3 - Map Setup Data Request"},{"location":"secs/#s12f4-map-setup-data-response","text":"Format: {L:3 MID IDTYP {L:n STRP_1 STRP_2 ... STRP_n } } Where: - MID: Map ID (A) - IDTYP: ID Type (B[1]) - STRP: Map Strip Data (various formats)","title":"S12F4 - Map Setup Data Response"},{"location":"secs/#s12f5-map-transmit-inquire","text":"Format: {L:2 MID DATALENGTH } Where: - MID: Map ID (A) - DATALENGTH: Expected Data Length (U1, U2, U4)","title":"S12F5 - Map Transmit Inquire"},{"location":"secs/#s12f6-map-transmit-grant","text":"Format: GRANT Where: - GRANT: Grant Code (B[1]) - 0: Granted - 1: Busy, try again - 2: No space - 3: Map ID not found","title":"S12F6 - Map Transmit Grant"},{"location":"secs/#s12f7-map-data-send","text":"Format: {L:2 MID BINLT } Where: - MID: Map ID (A) - BINLT: Binary Map Data (B)","title":"S12F7 - Map Data Send"},{"location":"secs/#s12f8-map-data-acknowledge","text":"Format: ACKC12 Where: - ACKC12: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Map ID not found - 3: Data format error","title":"S12F8 - Map Data Acknowledge"},{"location":"secs/#s12f9-map-data-request","text":"Format: MID Where: - MID: Map ID (A)","title":"S12F9 - Map Data Request"},{"location":"secs/#s12f10-map-data-response","text":"Format: {L:2 MID BINLT } Where: - MID: Map ID (A) - BINLT: Binary Map Data (B)","title":"S12F10 - Map Data Response"},{"location":"secs/#s12f13-map-error-report","text":"Format: {L:3 MID MERLOC MERDESCRP } Where: - MID: Map ID (A) - MERLOC: Map Error Location (U1, U2, U4) - MERDESCRP: Map Error Description (A)","title":"S12F13 - Map Error Report"},{"location":"secs/#s12f14-map-error-acknowledge","text":"Format: ACKC12 Where: - ACKC12: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error","title":"S12F14 - Map Error Acknowledge"},{"location":"secs/#stream-13-data-set-management","text":"Purpose : Advanced data set handling and management Message Direction Description S13F1 \u2192 Equipment Data Set Upload Request S13F2 \u2190 Equipment Data Set Upload Response S13F3 \u2192 Equipment Data Set Download Request S13F4 \u2190 Equipment Data Set Download Response S13F5 \u2192 Equipment Data Set Directory Request S13F6 \u2190 Equipment Data Set Directory Response S13F7 \u2192 Equipment Data Set Delete Request S13F8 \u2190 Equipment Data Set Delete Response","title":"Stream 13: Data Set Management"},{"location":"secs/#s13f1-data-set-upload-request","text":"Format: {L:3 DSID DSNAME DSTYPE } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSNAME: Data Set Name (A) - DSTYPE: Data Set Type (U1) - 0: Process data - 1: Equipment data - 2: Alarm data - 3: Event data","title":"S13F1 - Data Set Upload Request"},{"location":"secs/#s13f2-data-set-upload-response","text":"Format: {L:2 DSID DSACK } Where: - DSID: Data Set ID (U1, U2, U4, or A) - DSACK: Data Set Acknowledge (B[1]) - 0: Acknowledged - 1: Error - 2: Data set already exists - 3: No space available","title":"S13F2 - Data Set Upload Response"},{"location":"secs/#stream-14-object-services","text":"Purpose : Object-oriented equipment control and management Message Direction Description S14F1 \u2192 Equipment Object Request S14F2 \u2190 Equipment Object Response S14F3 \u2192 Equipment Object Attribute Request S14F4 \u2190 Equipment Object Attribute Response S14F5 \u2192 Equipment Object Attribute Set S14F6 \u2190 Equipment Object Attribute Acknowledge","title":"Stream 14: Object Services"},{"location":"secs/#s14f1-object-request","text":"Format: {L:2 OBJTYPE OBJID } Where: - OBJTYPE: Object Type (A) - OBJID: Object ID (A)","title":"S14F1 - Object Request"},{"location":"secs/#s14f2-object-response","text":"Format: {L:3 OBJTYPE OBJID {L:n ATTRID_1 ATTRID_2 ... ATTRID_n } } Where: - OBJTYPE: Object Type (A) - OBJID: Object ID (A) - ATTRID: Attribute ID (A)","title":"S14F2 - Object Response"},{"location":"secs/#stream-15-recipe-management","text":"Purpose : Advanced recipe handling and validation Message Direction Description S15F1 \u2192 Equipment Recipe Upload Request S15F2 \u2190 Equipment Recipe Upload Response S15F3 \u2192 Equipment Recipe Download Request S15F4 \u2190 Equipment Recipe Download Response S15F5 \u2192 Equipment Recipe Validation Request S15F6 \u2190 Equipment Recipe Validation Response S15F7 \u2192 Equipment Recipe Execute Request S15F8 \u2190 Equipment Recipe Execute Response","title":"Stream 15: Recipe Management"},{"location":"secs/#s15f1-recipe-upload-request","text":"Format: {L:3 RECIPEID RECIPEBODY RECIPEFORMAT } Where: - RECIPEID: Recipe ID (A) - RECIPEBODY: Recipe Body (A or B) - RECIPEFORMAT: Recipe Format (U1) - 0: ASCII - 1: Binary - 2: XML","title":"S15F1 - Recipe Upload Request"},{"location":"secs/#s15f2-recipe-upload-response","text":"Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Recipe already exists - 3: No space available","title":"S15F2 - Recipe Upload Response"},{"location":"secs/#s15f9-recipe-directory-request","text":"Format: <none> (empty data)","title":"S15F9 - Recipe Directory Request"},{"location":"secs/#s15f10-recipe-directory-response","text":"Format: {L:n RECIPEID_1 RECIPEID_2 ... RECIPEID_n } Where: - RECIPEID: Recipe ID (A)","title":"S15F10 - Recipe Directory Response"},{"location":"secs/#s15f11-recipe-delete-request","text":"Format: {L:n RECIPEID_1 RECIPEID_2 ... RECIPEID_n } Where: - RECIPEID: Recipe ID (A)","title":"S15F11 - Recipe Delete Request"},{"location":"secs/#s15f12-recipe-delete-response","text":"Format: {L:n {L:2 RECIPEID ACKC15 } } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F12 - Recipe Delete Response"},{"location":"secs/#s15f13-recipe-parameter-request","text":"Format: {L:2 RECIPEID {L:n RCPPARNM_1 RCPPARNM_2 ... RCPPARNM_n } } Where: - RECIPEID: Recipe ID (A) - RCPPARNM: Recipe Parameter Name (A)","title":"S15F13 - Recipe Parameter Request"},{"location":"secs/#s15f14-recipe-parameter-response","text":"Format: {L:2 RECIPEID {L:n {L:3 RCPPARNM RCPPARVAL UNITS } } } Where: - RECIPEID: Recipe ID (A) - RCPPARNM: Recipe Parameter Name (A) - RCPPARVAL: Recipe Parameter Value (various) - UNITS: Units (A)","title":"S15F14 - Recipe Parameter Response"},{"location":"secs/#s15f15-recipe-parameter-set","text":"Format: {L:2 RECIPEID {L:n {L:3 RCPPARNM RCPPARVAL UNITS } } } Where: - RECIPEID: Recipe ID (A) - RCPPARNM: Recipe Parameter Name (A) - RCPPARVAL: Recipe Parameter Value (various) - UNITS: Units (A)","title":"S15F15 - Recipe Parameter Set"},{"location":"secs/#s15f16-recipe-parameter-set-acknowledge","text":"Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F16 - Recipe Parameter Set Acknowledge"},{"location":"secs/#s15f17-recipe-status-request","text":"Format: RECIPEID Where: - RECIPEID: Recipe ID (A)","title":"S15F17 - Recipe Status Request"},{"location":"secs/#s15f18-recipe-status-response","text":"Format: {L:3 RECIPEID RCPSTAT RCPVERS } Where: - RECIPEID: Recipe ID (A) - RCPSTAT: Recipe Status (U1) - 0: Not exists - 1: Available - 2: Active - 3: Paused - RCPVERS: Recipe Version (A)","title":"S15F18 - Recipe Status Response"},{"location":"secs/#s15f19-recipe-copy-request","text":"Format: {L:2 RECIPEID RCPNEWID } Where: - RECIPEID: Recipe ID (A) - RCPNEWID: Recipe New ID (A)","title":"S15F19 - Recipe Copy Request"},{"location":"secs/#s15f20-recipe-copy-response","text":"Format: {L:2 RCPNEWID ACKC15 } Where: - RCPNEWID: Recipe New ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F20 - Recipe Copy Response"},{"location":"secs/#s15f21-recipe-lock-request","text":"Format: {L:2 RECIPEID LOCKTYPE } Where: - RECIPEID: Recipe ID (A) - LOCKTYPE: Lock Type (U1) - 0: Unlock - 1: Read lock - 2: Write lock - 3: Exclusive lock","title":"S15F21 - Recipe Lock Request"},{"location":"secs/#s15f22-recipe-lock-response","text":"Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F22 - Recipe Lock Response"},{"location":"secs/#s15f23-recipe-attribute-request","text":"Format: {L:2 RECIPEID {L:n RCPATTRID_1 RCPATTRID_2 ... RCPATTRID_n } } Where: - RECIPEID: Recipe ID (A) - RCPATTRID: Recipe Attribute ID (A)","title":"S15F23 - Recipe Attribute Request"},{"location":"secs/#s15f24-recipe-attribute-response","text":"Format: {L:2 RECIPEID {L:n {L:2 RCPATTRID RCPATTRDATA } } } Where: - RECIPEID: Recipe ID (A) - RCPATTRID: Recipe Attribute ID (A) - RCPATTRDATA: Recipe Attribute Data (various)","title":"S15F24 - Recipe Attribute Response"},{"location":"secs/#s15f25-recipe-security-request","text":"Format: {L:3 RECIPEID RCPSECCODE ACCESSMODE } Where: - RECIPEID: Recipe ID (A) - RCPSECCODE: Recipe Security Code (A) - ACCESSMODE: Access Mode (U1)","title":"S15F25 - Recipe Security Request"},{"location":"secs/#s15f26-recipe-security-response","text":"Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F26 - Recipe Security Response"},{"location":"secs/#s15f27-recipe-version-request","text":"Format: RECIPEID Where: - RECIPEID: Recipe ID (A)","title":"S15F27 - Recipe Version Request"},{"location":"secs/#s15f28-recipe-version-response","text":"Format: {L:3 RECIPEID RCPVERS {L:n VERSIONHISTORY_1 VERSIONHISTORY_2 ... VERSIONHISTORY_n } } Where: - RECIPEID: Recipe ID (A) - RCPVERS: Recipe Version (A) - VERSIONHISTORY: Version History (A)","title":"S15F28 - Recipe Version Response"},{"location":"secs/#s15f29-recipe-export-request","text":"Format: {L:3 RECIPEID EXPORTFORMAT EXPORTOPTIONS } Where: - RECIPEID: Recipe ID (A) - EXPORTFORMAT: Export Format (U1) - 0: Native - 1: XML - 2: JSON - EXPORTOPTIONS: Export Options (various)","title":"S15F29 - Recipe Export Request"},{"location":"secs/#s15f30-recipe-export-response","text":"Format: {L:3 RECIPEID EXPORTDATA ACKC15 } Where: - RECIPEID: Recipe ID (A) - EXPORTDATA: Export Data (A or B) - ACKC15: Acknowledge Code (B[1])","title":"S15F30 - Recipe Export Response"},{"location":"secs/#s15f31-recipe-import-request","text":"Format: {L:4 RECIPEID IMPORTFORMAT IMPORTDATA IMPORTOPTIONS } Where: - RECIPEID: Recipe ID (A) - IMPORTFORMAT: Import Format (U1) - IMPORTDATA: Import Data (A or B) - IMPORTOPTIONS: Import Options (various)","title":"S15F31 - Recipe Import Request"},{"location":"secs/#s15f32-recipe-import-response","text":"Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F32 - Recipe Import Response"},{"location":"secs/#s15f33-recipe-template-request","text":"Format: TEMPLATETYPE Where: - TEMPLATETYPE: Template Type (A)","title":"S15F33 - Recipe Template Request"},{"location":"secs/#s15f34-recipe-template-response","text":"Format: {L:3 TEMPLATETYPE TEMPLATEBODY TEMPLATEFORMAT } Where: - TEMPLATETYPE: Template Type (A) - TEMPLATEBODY: Template Body (A or B) - TEMPLATEFORMAT: Template Format (U1)","title":"S15F34 - Recipe Template Response"},{"location":"secs/#s15f35-recipe-dependency-request","text":"Format: RECIPEID Where: - RECIPEID: Recipe ID (A)","title":"S15F35 - Recipe Dependency Request"},{"location":"secs/#s15f36-recipe-dependency-response","text":"Format: {L:2 RECIPEID {L:n DEPENDENCY_1 DEPENDENCY_2 ... DEPENDENCY_n } } Where: - RECIPEID: Recipe ID (A) - DEPENDENCY: Recipe Dependency (A)","title":"S15F36 - Recipe Dependency Response"},{"location":"secs/#s15f37-recipe-schedule-request","text":"Format: {L:3 RECIPEID SCHEDULETIME SCHEDULETYPE } Where: - RECIPEID: Recipe ID (A) - SCHEDULETIME: Schedule Time (A) - SCHEDULETYPE: Schedule Type (U1)","title":"S15F37 - Recipe Schedule Request"},{"location":"secs/#s15f38-recipe-schedule-response","text":"Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F38 - Recipe Schedule Response"},{"location":"secs/#s15f39-recipe-optimization-request","text":"Format: {L:3 RECIPEID OPTIMIZATIONTYPE OPTIMIZATIONPARAMS } Where: - RECIPEID: Recipe ID (A) - OPTIMIZATIONTYPE: Optimization Type (U1) - OPTIMIZATIONPARAMS: Optimization Parameters (various)","title":"S15F39 - Recipe Optimization Request"},{"location":"secs/#s15f40-recipe-optimization-response","text":"Format: {L:3 RECIPEID OPTIMIZEDRECIPE ACKC15 } Where: - RECIPEID: Recipe ID (A) - OPTIMIZEDRECIPE: Optimized Recipe (A or B) - ACKC15: Acknowledge Code (B[1])","title":"S15F40 - Recipe Optimization Response"},{"location":"secs/#s15f41-recipe-simulation-request","text":"Format: {L:3 RECIPEID SIMULATIONPARAMS SIMULATIONTYPE } Where: - RECIPEID: Recipe ID (A) - SIMULATIONPARAMS: Simulation Parameters (various) - SIMULATIONTYPE: Simulation Type (U1)","title":"S15F41 - Recipe Simulation Request"},{"location":"secs/#s15f42-recipe-simulation-response","text":"Format: {L:3 RECIPEID SIMULATIONRESULTS ACKC15 } Where: - RECIPEID: Recipe ID (A) - SIMULATIONRESULTS: Simulation Results (various) - ACKC15: Acknowledge Code (B[1])","title":"S15F42 - Recipe Simulation Response"},{"location":"secs/#s15f43-recipe-checkpoint-request","text":"Format: {L:2 RECIPEID CHECKPOINTNAME } Where: - RECIPEID: Recipe ID (A) - CHECKPOINTNAME: Checkpoint Name (A)","title":"S15F43 - Recipe Checkpoint Request"},{"location":"secs/#s15f44-recipe-checkpoint-response","text":"Format: {L:3 RECIPEID CHECKPOINTDATA ACKC15 } Where: - RECIPEID: Recipe ID (A) - CHECKPOINTDATA: Checkpoint Data (various) - ACKC15: Acknowledge Code (B[1])","title":"S15F44 - Recipe Checkpoint Response"},{"location":"secs/#s15f45-recipe-resume-request","text":"Format: {L:2 RECIPEID CHECKPOINTNAME } Where: - RECIPEID: Recipe ID (A) - CHECKPOINTNAME: Checkpoint Name (A)","title":"S15F45 - Recipe Resume Request"},{"location":"secs/#s15f46-recipe-resume-response","text":"Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F46 - Recipe Resume Response"},{"location":"secs/#s15f47-recipe-performance-request","text":"Format: {L:2 RECIPEID PERFORMANCEMETRICS } Where: - RECIPEID: Recipe ID (A) - PERFORMANCEMETRICS: Performance Metrics (various)","title":"S15F47 - Recipe Performance Request"},{"location":"secs/#s15f48-recipe-performance-response","text":"Format: {L:3 RECIPEID PERFORMANCEDATA ACKC15 } Where: - RECIPEID: Recipe ID (A) - PERFORMANCEDATA: Performance Data (various) - ACKC15: Acknowledge Code (B[1])","title":"S15F48 - Recipe Performance Response"},{"location":"secs/#s15f49-recipe-audit-request","text":"Format: {L:3 RECIPEID AUDITTYPE AUDITPARAMS } Where: - RECIPEID: Recipe ID (A) - AUDITTYPE: Audit Type (U1) - AUDITPARAMS: Audit Parameters (various)","title":"S15F49 - Recipe Audit Request"},{"location":"secs/#s15f50-recipe-audit-response","text":"Format: {L:3 RECIPEID AUDITRESULTS ACKC15 } Where: - RECIPEID: Recipe ID (A) - AUDITRESULTS: Audit Results (various) - ACKC15: Acknowledge Code (B[1])","title":"S15F50 - Recipe Audit Response"},{"location":"secs/#s15f51-recipe-backup-request","text":"Format: {L:3 RECIPEID BACKUPTYPE BACKUPPARAMS } Where: - RECIPEID: Recipe ID (A) - BACKUPTYPE: Backup Type (U1) - BACKUPPARAMS: Backup Parameters (various)","title":"S15F51 - Recipe Backup Request"},{"location":"secs/#s15f52-recipe-backup-response","text":"Format: {L:3 RECIPEID BACKUPDATA ACKC15 } Where: - RECIPEID: Recipe ID (A) - BACKUPDATA: Backup Data (B) - ACKC15: Acknowledge Code (B[1])","title":"S15F52 - Recipe Backup Response"},{"location":"secs/#s15f53-recipe-restore-request","text":"Format: {L:3 RECIPEID RESTOREDATA RESTOREOPTIONS } Where: - RECIPEID: Recipe ID (A) - RESTOREDATA: Restore Data (B) - RESTOREOPTIONS: Restore Options (various)","title":"S15F53 - Recipe Restore Request"},{"location":"secs/#s15f54-recipe-restore-response","text":"Format: {L:2 RECIPEID ACKC15 } Where: - RECIPEID: Recipe ID (A) - ACKC15: Acknowledge Code (B[1])","title":"S15F54 - Recipe Restore Response"},{"location":"secs/#stream-16-processing-management","text":"Purpose : Process control and monitoring Message Direction Description S16F1 \u2192 Equipment Process Start Request S16F2 \u2190 Equipment Process Start Response S16F3 \u2192 Equipment Process Stop Request S16F4 \u2190 Equipment Process Stop Response S16F5 \u2192 Equipment Process Status Request S16F6 \u2190 Equipment Process Status Response S16F7 \u2192 Equipment Process Parameter Request S16F8 \u2190 Equipment Process Parameter Response S16F9 \u2192 Equipment Process Job Status Request S16F10 \u2190 Equipment Process Job Status Response S16F11 \u2192 Equipment Process Job Priority Request S16F12 \u2190 Equipment Process Job Priority Response S16F13 \u2192 Equipment Process Job Queue Request S16F14 \u2190 Equipment Process Job Queue Response S16F15 \u2192 Equipment Process Step Control Request S16F16 \u2190 Equipment Process Step Control Response S16F17 \u2192 Equipment Process Data Request S16F18 \u2190 Equipment Process Data Response S16F19 \u2192 Equipment Process Recipe Request S16F20 \u2190 Equipment Process Recipe Response S16F21 \u2192 Equipment Process Material Request S16F22 \u2190 Equipment Process Material Response S16F23 \u2192 Equipment Process Resource Request S16F24 \u2190 Equipment Process Resource Response S16F25 \u2192 Equipment Process Event Report S16F26 \u2190 Equipment Process Event Acknowledge S16F27 \u2192 Equipment Process Log Request S16F28 \u2190 Equipment Process Log Response S16F29 \u2192 Equipment Process Control Request S16F30 \u2190 Equipment Process Control Response","title":"Stream 16: Processing Management"},{"location":"secs/#s16f1-process-start-request","text":"Format: {L:2 PROCESSID {L:n PARAMETER_1 PARAMETER_2 ... PARAMETER_n } } Where: - PROCESSID: Process ID (A) - PARAMETER: Process Parameters (any format)","title":"S16F1 - Process Start Request"},{"location":"secs/#s16f2-process-start-response","text":"Format: {L:2 PROCESSID ACKC16 } Where: - PROCESSID: Process ID (A) - ACKC16: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Process not found - 3: Equipment busy","title":"S16F2 - Process Start Response"},{"location":"secs/#s16f3-process-stop-request","text":"Format: PROCESSID Where: - PROCESSID: Process ID (A)","title":"S16F3 - Process Stop Request"},{"location":"secs/#s16f4-process-stop-response","text":"Format: {L:2 PROCESSID ACKC16 } Where: - PROCESSID: Process ID (A) - ACKC16: Acknowledge Code (B[1])","title":"S16F4 - Process Stop Response"},{"location":"secs/#s16f5-process-status-request","text":"Format: PROCESSID Where: - PROCESSID: Process ID (A)","title":"S16F5 - Process Status Request"},{"location":"secs/#s16f6-process-status-response","text":"Format: {L:3 PROCESSID PRSTAT PRDATA } Where: - PROCESSID: Process ID (A) - PRSTAT: Process Status (U1) - PRDATA: Process Data (various)","title":"S16F6 - Process Status Response"},{"location":"secs/#s16f7-process-parameter-request","text":"Format: {L:2 PROCESSID {L:n PRPARNM_1 PRPARNM_2 ... PRPARNM_n } } Where: - PROCESSID: Process ID (A) - PRPARNM: Process Parameter Name (A)","title":"S16F7 - Process Parameter Request"},{"location":"secs/#s16f8-process-parameter-response","text":"Format: {L:2 PROCESSID {L:n {L:3 PRPARNM PRPARVAL UNITS } } } Where: - PROCESSID: Process ID (A) - PRPARNM: Process Parameter Name (A) - PRPARVAL: Process Parameter Value (various) - UNITS: Units (A)","title":"S16F8 - Process Parameter Response"},{"location":"secs/#s16f9-process-job-status-request","text":"Format: PJOBID Where: - PJOBID: Process Job ID (A)","title":"S16F9 - Process Job Status Request"},{"location":"secs/#s16f10-process-job-status-response","text":"Format: {L:4 PJOBID PJOBST PRPROCESSTIME PRREMTIME } Where: - PJOBID: Process Job ID (A) - PJOBST: Process Job State (U1) - PRPROCESSTIME: Process Time (U4) - PRREMTIME: Remaining Time (U4)","title":"S16F10 - Process Job Status Response"},{"location":"secs/#s16f11-process-job-priority-request","text":"Format: {L:2 PJOBID PRIORITY } Where: - PJOBID: Process Job ID (A) - PRIORITY: Priority (U1)","title":"S16F11 - Process Job Priority Request"},{"location":"secs/#s16f12-process-job-priority-response","text":"Format: {L:2 PJOBID ACKC16 } Where: - PJOBID: Process Job ID (A) - ACKC16: Acknowledge Code (B[1])","title":"S16F12 - Process Job Priority Response"},{"location":"secs/#s16f13-process-job-queue-request","text":"Format: <none> (empty data)","title":"S16F13 - Process Job Queue Request"},{"location":"secs/#s16f14-process-job-queue-response","text":"Format: {L:n {L:3 PJOBID PRIORITY PJOBST } } Where: - PJOBID: Process Job ID (A) - PRIORITY: Priority (U1) - PJOBST: Process Job State (U1)","title":"S16F14 - Process Job Queue Response"},{"location":"secs/#s16f15-process-step-control-request","text":"Format: {L:3 PJOBID STEPID STEPCONTROL } Where: - PJOBID: Process Job ID (A) - STEPID: Step ID (A) - STEPCONTROL: Step Control (U1)","title":"S16F15 - Process Step Control Request"},{"location":"secs/#s16f16-process-step-control-response","text":"Format: {L:3 PJOBID STEPID ACKC16 } Where: - PJOBID: Process Job ID (A) - STEPID: Step ID (A) - ACKC16: Acknowledge Code (B[1])","title":"S16F16 - Process Step Control Response"},{"location":"secs/#s16f17-process-data-request","text":"Format: {L:2 PJOBID {L:n DATAID_1 DATAID_2 ... DATAID_n } } Where: - PJOBID: Process Job ID (A) - DATAID: Data ID (A)","title":"S16F17 - Process Data Request"},{"location":"secs/#s16f18-process-data-response","text":"Format: {L:2 PJOBID {L:n {L:3 DATAID DATAVALUE UNITS } } } Where: - PJOBID: Process Job ID (A) - DATAID: Data ID (A) - DATAVALUE: Data Value (various) - UNITS: Units (A)","title":"S16F18 - Process Data Response"},{"location":"secs/#s16f19-process-recipe-request","text":"Format: {L:2 PJOBID RECIPEID } Where: - PJOBID: Process Job ID (A) - RECIPEID: Recipe ID (A)","title":"S16F19 - Process Recipe Request"},{"location":"secs/#s16f20-process-recipe-response","text":"Format: {L:2 PJOBID ACKC16 } Where: - PJOBID: Process Job ID (A) - ACKC16: Acknowledge Code (B[1])","title":"S16F20 - Process Recipe Response"},{"location":"secs/#s16f21-process-material-request","text":"Format: {L:2 PJOBID {L:n MATID_1 MATID_2 ... MATID_n } } Where: - PJOBID: Process Job ID (A) - MATID: Material ID (A)","title":"S16F21 - Process Material Request"},{"location":"secs/#s16f22-process-material-response","text":"Format: {L:2 PJOBID {L:n {L:3 MATID MATSTATUS MATDATA } } } Where: - PJOBID: Process Job ID (A) - MATID: Material ID (A) - MATSTATUS: Material Status (U1) - MATDATA: Material Data (various)","title":"S16F22 - Process Material Response"},{"location":"secs/#s16f23-process-resource-request","text":"Format: {L:2 PJOBID {L:n RESOURCEID_1 RESOURCEID_2 ... RESOURCEID_n } } Where: - PJOBID: Process Job ID (A) - RESOURCEID: Resource ID (A)","title":"S16F23 - Process Resource Request"},{"location":"secs/#s16f24-process-resource-response","text":"Format: {L:2 PJOBID {L:n {L:3 RESOURCEID RESOURCESTATUS RESOURCEDATA } } } Where: - PJOBID: Process Job ID (A) - RESOURCEID: Resource ID (A) - RESOURCESTATUS: Resource Status (U1) - RESOURCEDATA: Resource Data (various)","title":"S16F24 - Process Resource Response"},{"location":"secs/#s16f25-process-event-report","text":"Format: {L:4 PJOBID EVENTTYPE EVENTDATA TIME } Where: - PJOBID: Process Job ID (A) - EVENTTYPE: Event Type (U1) - EVENTDATA: Event Data (various) - TIME: Timestamp (A)","title":"S16F25 - Process Event Report"},{"location":"secs/#s16f26-process-event-acknowledge","text":"Format: {L:2 PJOBID ACKC16 } Where: - PJOBID: Process Job ID (A) - ACKC16: Acknowledge Code (B[1])","title":"S16F26 - Process Event Acknowledge"},{"location":"secs/#s16f27-process-log-request","text":"Format: {L:3 PJOBID STARTTIME ENDTIME } Where: - PJOBID: Process Job ID (A) - STARTTIME: Start Time (A) - ENDTIME: End Time (A)","title":"S16F27 - Process Log Request"},{"location":"secs/#s16f28-process-log-response","text":"Format: {L:2 PJOBID {L:n {L:4 TIME LOGTYPE LOGDATA SEVERITY } } } Where: - PJOBID: Process Job ID (A) - TIME: Timestamp (A) - LOGTYPE: Log Type (U1) - LOGDATA: Log Data (A) - SEVERITY: Severity Level (U1)","title":"S16F28 - Process Log Response"},{"location":"secs/#s16f29-process-control-request","text":"Format: {L:3 PJOBID CONTROLTYPE CONTROLDATA } Where: - PJOBID: Process Job ID (A) - CONTROLTYPE: Control Type (U1) - CONTROLDATA: Control Data (various)","title":"S16F29 - Process Control Request"},{"location":"secs/#s16f30-process-control-response","text":"Format: {L:2 PJOBID ACKC16 } Where: - PJOBID: Process Job ID (A) - ACKC16: Acknowledge Code (B[1])","title":"S16F30 - Process Control Response"},{"location":"secs/#stream-17-clock-management","text":"Purpose : Time synchronization and clock control Message Direction Description S17F1 \u2192 Equipment Clock Set Request S17F2 \u2190 Equipment Clock Set Response S17F3 \u2192 Equipment Clock Read Request S17F4 \u2190 Equipment Clock Read Response S17F5 \u2192 Equipment Time Zone Set Request S17F6 \u2190 Equipment Time Zone Set Response","title":"Stream 17: Clock Management"},{"location":"secs/#s17f1-clock-set-request","text":"Format: {L:2 CLOCK TIMEZONE } Where: - CLOCK: Clock Time (A[19]) format: \"YYYY-MM-DD HH:MM:SS\" - TIMEZONE: Time Zone (A)","title":"S17F1 - Clock Set Request"},{"location":"secs/#s17f2-clock-set-response","text":"Format: ACKC17 Where: - ACKC17: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Invalid time format","title":"S17F2 - Clock Set Response"},{"location":"secs/#stream-18-data-collection-management","text":"Purpose : Advanced data collection configuration Message Direction Description S18F1 \u2192 Equipment Data Collection Setup S18F2 \u2190 Equipment Data Collection Setup Response S18F3 \u2192 Equipment Data Collection Start S18F4 \u2190 Equipment Data Collection Start Response S18F5 \u2192 Equipment Data Collection Stop S18F6 \u2190 Equipment Data Collection Stop Response","title":"Stream 18: Data Collection Management"},{"location":"secs/#s18f1-data-collection-setup","text":"Format: {L:3 DCID DCPLAN {L:n VID_1 VID_2 ... VID_n } } Where: - DCID: Data Collection ID (A) - DCPLAN: Data Collection Plan (A) - VID: Variable ID (U1, U2, U4, or A)","title":"S18F1 - Data Collection Setup"},{"location":"secs/#s18f2-data-collection-setup-response","text":"Format: {L:2 DCID ACKC18 } Where: - DCID: Data Collection ID (A) - ACKC18: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Invalid plan","title":"S18F2 - Data Collection Setup Response"},{"location":"secs/#stream-19-inventory-management","text":"Purpose : Equipment and material inventory tracking Message Direction Description S19F1 \u2192 Equipment Inventory Request S19F2 \u2190 Equipment Inventory Response S19F3 \u2192 Equipment Inventory Update S19F4 \u2190 Equipment Inventory Update Response S19F5 \u2192 Equipment Inventory Add Request S19F6 \u2190 Equipment Inventory Add Response S19F7 \u2192 Equipment Inventory Remove Request S19F8 \u2190 Equipment Inventory Remove Response S19F9 \u2192 Equipment Inventory Status Request S19F10 \u2190 Equipment Inventory Status Response S19F11 \u2192 Equipment Inventory Move Request S19F12 \u2190 Equipment Inventory Move Response S19F13 \u2192 Equipment Inventory Search Request S19F14 \u2190 Equipment Inventory Search Response S19F15 \u2192 Equipment Inventory Lock Request S19F16 \u2190 Equipment Inventory Lock Response S19F17 \u2192 Equipment Inventory History Request S19F18 \u2190 Equipment Inventory History Response S19F19 \u2192 Equipment Inventory Audit Request S19F20 \u2190 Equipment Inventory Audit Response","title":"Stream 19: Inventory Management"},{"location":"secs/#s19f1-inventory-request","text":"Format: {L:n INVTYPE_1 INVTYPE_2 ... INVTYPE_n } Where: - INVTYPE: Inventory Type (A) - \"SUBSTRATE\": Substrate inventory - \"CARRIER\": Carrier inventory - \"TOOL\": Tool inventory","title":"S19F1 - Inventory Request"},{"location":"secs/#s19f2-inventory-response","text":"Format: {L:n {L:3 INVTYPE INVID INVDATA } } Where: - INVTYPE: Inventory Type (A) - INVID: Inventory ID (A) - INVDATA: Inventory Data (any format)","title":"S19F2 - Inventory Response"},{"location":"secs/#s19f3-inventory-update","text":"Format: {L:3 INVTYPE INVID INVDATA } Where: - INVTYPE: Inventory Type (A) - INVID: Inventory ID (A) - INVDATA: Inventory Data (any format)","title":"S19F3 - Inventory Update"},{"location":"secs/#s19f4-inventory-update-response","text":"Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1])","title":"S19F4 - Inventory Update Response"},{"location":"secs/#s19f5-inventory-add-request","text":"Format: {L:4 INVTYPE INVID INVDATA LOCATION } Where: - INVTYPE: Inventory Type (A) - INVID: Inventory ID (A) - INVDATA: Inventory Data (any format) - LOCATION: Location (A)","title":"S19F5 - Inventory Add Request"},{"location":"secs/#s19f6-inventory-add-response","text":"Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1])","title":"S19F6 - Inventory Add Response"},{"location":"secs/#s19f7-inventory-remove-request","text":"Format: {L:2 INVTYPE INVID } Where: - INVTYPE: Inventory Type (A) - INVID: Inventory ID (A)","title":"S19F7 - Inventory Remove Request"},{"location":"secs/#s19f8-inventory-remove-response","text":"Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1])","title":"S19F8 - Inventory Remove Response"},{"location":"secs/#s19f9-inventory-status-request","text":"Format: INVID Where: - INVID: Inventory ID (A)","title":"S19F9 - Inventory Status Request"},{"location":"secs/#s19f10-inventory-status-response","text":"Format: {L:4 INVID INVSTATUS LOCATION INVDATA } Where: - INVID: Inventory ID (A) - INVSTATUS: Inventory Status (U1) - LOCATION: Location (A) - INVDATA: Inventory Data (any format)","title":"S19F10 - Inventory Status Response"},{"location":"secs/#s19f11-inventory-move-request","text":"Format: {L:3 INVID SRCLOCATION DESTLOCATION } Where: - INVID: Inventory ID (A) - SRCLOCATION: Source Location (A) - DESTLOCATION: Destination Location (A)","title":"S19F11 - Inventory Move Request"},{"location":"secs/#s19f12-inventory-move-response","text":"Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1])","title":"S19F12 - Inventory Move Response"},{"location":"secs/#s19f13-inventory-search-request","text":"Format: {L:3 INVTYPE SEARCHCRITERIA SEARCHOPTIONS } Where: - INVTYPE: Inventory Type (A) - SEARCHCRITERIA: Search Criteria (any format) - SEARCHOPTIONS: Search Options (any format)","title":"S19F13 - Inventory Search Request"},{"location":"secs/#s19f14-inventory-search-response","text":"Format: {L:n {L:4 INVID INVTYPE LOCATION INVDATA } } Where: - INVID: Inventory ID (A) - INVTYPE: Inventory Type (A) - LOCATION: Location (A) - INVDATA: Inventory Data (any format)","title":"S19F14 - Inventory Search Response"},{"location":"secs/#s19f15-inventory-lock-request","text":"Format: {L:3 INVID LOCKTYPE LOCKDURATION } Where: - INVID: Inventory ID (A) - LOCKTYPE: Lock Type (U1) - LOCKDURATION: Lock Duration (U4)","title":"S19F15 - Inventory Lock Request"},{"location":"secs/#s19f16-inventory-lock-response","text":"Format: {L:2 INVID ACKC19 } Where: - INVID: Inventory ID (A) - ACKC19: Acknowledge Code (B[1])","title":"S19F16 - Inventory Lock Response"},{"location":"secs/#s19f17-inventory-history-request","text":"Format: {L:3 INVID STARTTIME ENDTIME } Where: - INVID: Inventory ID (A) - STARTTIME: Start Time (A) - ENDTIME: End Time (A)","title":"S19F17 - Inventory History Request"},{"location":"secs/#s19f18-inventory-history-response","text":"Format: {L:2 INVID {L:n {L:4 TIME ACTION LOCATION INVDATA } } } Where: - INVID: Inventory ID (A) - TIME: Timestamp (A) - ACTION: Action Type (A) - LOCATION: Location (A) - INVDATA: Inventory Data (any format)","title":"S19F18 - Inventory History Response"},{"location":"secs/#s19f19-inventory-audit-request","text":"Format: {L:2 INVTYPE AUDITTYPE } Where: - INVTYPE: Inventory Type (A) - AUDITTYPE: Audit Type (U1)","title":"S19F19 - Inventory Audit Request"},{"location":"secs/#s19f20-inventory-audit-response","text":"Format: {L:3 INVTYPE AUDITRESULTS ACKC19 } Where: - INVTYPE: Inventory Type (A) - AUDITRESULTS: Audit Results (any format) - ACKC19: Acknowledge Code (B[1])","title":"S19F20 - Inventory Audit Response"},{"location":"secs/#stream-20-substrate-transfer-semi-e157","text":"Purpose : Advanced substrate transfer operations Message Direction Description S20F1 \u2192 Equipment Transfer Request S20F2 \u2190 Equipment Transfer Response S20F3 \u2192 Equipment Transfer Status Request S20F4 \u2190 Equipment Transfer Status Response S20F5 \u2192 Equipment Transfer Abort Request S20F6 \u2190 Equipment Transfer Abort Response S20F7 \u2192 Equipment Transfer Pause Request S20F8 \u2190 Equipment Transfer Pause Response S20F9 \u2192 Equipment Transfer Resume Request S20F10 \u2190 Equipment Transfer Resume Response S20F11 \u2192 Equipment Transfer Queue Request S20F12 \u2190 Equipment Transfer Queue Response S20F13 \u2192 Equipment Transfer Priority Request S20F14 \u2190 Equipment Transfer Priority Response S20F15 \u2192 Equipment Transfer Route Request S20F16 \u2190 Equipment Transfer Route Response S20F17 \u2192 Equipment Transfer Schedule Request S20F18 \u2190 Equipment Transfer Schedule Response S20F19 \u2192 Equipment Transfer Log Request S20F20 \u2190 Equipment Transfer Log Response S20F21 \u2192 Equipment Transfer Config Request S20F22 \u2190 Equipment Transfer Config Response S20F23 \u2192 Equipment Transfer Monitor Request S20F24 \u2190 Equipment Transfer Monitor Response S20F25 \u2192 Equipment Transfer Resource Request S20F26 \u2190 Equipment Transfer Resource Response S20F27 \u2192 Equipment Transfer Event Report S20F28 \u2190 Equipment Transfer Event Acknowledge S20F29 \u2192 Equipment Transfer Optimization Request S20F30 \u2190 Equipment Transfer Optimization Response S20F31 \u2192 Equipment Transfer History Request S20F32 \u2190 Equipment Transfer History Response S20F33 \u2192 Equipment Transfer Performance Request S20F34 \u2190 Equipment Transfer Performance Response","title":"Stream 20: Substrate Transfer (SEMI-E157)"},{"location":"secs/#s20f1-transfer-request","text":"Format: {L:4 TRANSFERID SOURCEID DESTID TRANSFERTYPE } Where: - TRANSFERID: Transfer ID (A) - SOURCEID: Source Location ID (A) - DESTID: Destination Location ID (A) - TRANSFERTYPE: Transfer Type (U1) - 0: Move - 1: Copy - 2: Exchange","title":"S20F1 - Transfer Request"},{"location":"secs/#s20f2-transfer-response","text":"Format: {L:2 TRANSFERID ACKC20 } Where: - TRANSFERID: Transfer ID (A) - ACKC20: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Invalid location - 3: Transfer not possible","title":"S20F2 - Transfer Response"},{"location":"secs/#stream-21-material-transfer-management","text":"Purpose : High-level material transfer coordination Message Direction Description S21F1 \u2192 Equipment Material Transfer Plan S21F2 \u2190 Equipment Material Transfer Plan Response S21F3 \u2192 Equipment Material Transfer Execute S21F4 \u2190 Equipment Material Transfer Execute Response S21F5 \u2192 Equipment Material Tracking Request S21F6 \u2190 Equipment Material Tracking Response S21F7 \u2192 Equipment Material Location Request S21F8 \u2190 Equipment Material Location Response S21F9 \u2192 Equipment Material History Request S21F10 \u2190 Equipment Material History Response S21F11 \u2192 Equipment Material Routing Request S21F12 \u2190 Equipment Material Routing Response S21F13 \u2192 Equipment Material Processing Request S21F14 \u2190 Equipment Material Processing Response S21F15 \u2192 Equipment Material Quality Request S21F16 \u2190 Equipment Material Quality Response S21F17 \u2192 Equipment Material Recipe Request S21F18 \u2190 Equipment Material Recipe Response S21F19 \u2192 Equipment Material Event Report S21F20 \u2190 Equipment Material Event Acknowledge","title":"Stream 21: Material Transfer Management"},{"location":"secs/#s21f1-material-transfer-plan","text":"Format: {L:3 PLANID {L:n {L:3 MATERIALID SOURCEID DESTID } } PRIORITY } Where: - PLANID: Plan ID (A) - MATERIALID: Material ID (A) - SOURCEID: Source Location ID (A) - DESTID: Destination Location ID (A) - PRIORITY: Priority Level (U1) - 0: Low - 1: Normal - 2: High - 3: Critical","title":"S21F1 - Material Transfer Plan"},{"location":"secs/#s21f2-material-transfer-plan-response","text":"Format: {L:2 PLANID ACKC21 } Where: - PLANID: Plan ID (A) - ACKC21: Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Invalid plan - 3: Resource conflict","title":"S21F2 - Material Transfer Plan Response"},{"location":"secs/#message-categories","text":"","title":"Message Categories"},{"location":"secs/#equipment-status-stream-1","text":"Basic communication establishment Equipment state monitoring Online/Offline control","title":"Equipment Status (Stream 1)"},{"location":"secs/#equipment-control-stream-2","text":"Configuration management Time synchronization Event reporting setup","title":"Equipment Control (Stream 2)"},{"location":"secs/#material-management-streams-3-4","text":"Carrier and substrate tracking Transfer job management Material handling control","title":"Material Management (Streams 3-4)"},{"location":"secs/#exception-handling-stream-5","text":"Alarm management Exception reporting Error notification","title":"Exception Handling (Stream 5)"},{"location":"secs/#data-collection-stream-6","text":"Process data gathering Event monitoring Trace data collection","title":"Data Collection (Stream 6)"},{"location":"secs/#program-management-stream-7","text":"Recipe management Process program control EPPD handling","title":"Program Management (Stream 7)"},{"location":"secs/#system-services-streams-9-10","text":"Error reporting Terminal communication System diagnostics","title":"System Services (Streams 9-10)"},{"location":"secs/#advanced-features-streams-12","text":"Wafer mapping Object services Recipe management Processing control","title":"Advanced Features (Streams 12+)"},{"location":"secs/#common-message-examples","text":"","title":"Common Message Examples"},{"location":"secs/#s1f13-establish-communications-request_1","text":"Hex Format: Length: 00 00 00 0C (12 bytes) Header: 00 00 81 0D 00 00 xx xx xx xx Data: 01 00 (empty list) SECS-II Format: {L:0} // Empty list","title":"S1F13 - Establish Communications Request"},{"location":"secs/#s1f14-establish-communications-response_1","text":"Hex Format: Length: 00 00 00 0D (13 bytes) Header: 00 00 01 0E 00 00 xx xx xx xx Data: 21 01 00 (COMMACK = 0, accepted) SECS-II Format: COMMACK = B[1] = 0 // Communication accepted Or with model info: {L:2 COMMACK = B[1] = 0 {L:2 MDLN = A[20] = \"EQUIPMENT_MODEL_NAME\" SOFTREV = A[20] = \"SOFTWARE_VERSION_1.0\" } }","title":"S1F14 - Establish Communications Response"},{"location":"secs/#s1f1-are-you-there-request_1","text":"Hex Format: Length: 00 00 00 0A (10 bytes) Header: 00 00 81 01 00 00 xx xx xx xx Data: (empty) SECS-II Format: <none> (no data)","title":"S1F1 - Are You There Request"},{"location":"secs/#s1f2-are-you-there-response_1","text":"Hex Format: Length: 00 00 00 0A (10 bytes) Header: 00 00 01 02 00 00 xx xx xx xx Data: (empty) SECS-II Format: <none> (no data) or {L:0} (empty list)","title":"S1F2 - Are You There Response"},{"location":"secs/#s5f1-alarm-report-example","text":"Hex Format: Length: 00 00 00 1F (31 bytes) Header: 00 00 05 01 00 00 xx xx xx xx Data: 01 03 81 01 81 A1 01 01 41 0F Temperature Alarm SECS-II Format: {L:3 ALCD = B[1] = 129 (0x81) // Alarm Set + Alarm Type ALID = U1[1] = 1 ALTX = A[15] = \"Temperature Alarm\" }","title":"S5F1 - Alarm Report Example"},{"location":"secs/#s6f11-event-report-example","text":"SECS-II Format: {L:3 DATAID = U4[1] = 12345 CEID = U2[1] = 1001 {L:1 {L:3 RPTID = U2[1] = 2001 {L:2 Temperature = F4[1] = 25.5 Pressure = F4[1] = 760.0 } } } }","title":"S6F11 - Event Report Example"},{"location":"secs/#data-type-format-examples","text":"ASCII Text: A[10] = \"TEST_VALUE\" Hex: 41 0A 54 45 53 54 5F 56 41 4C 55 45 Binary Data: B[4] = 0x12345678 Hex: 21 04 12 34 56 78 Unsigned Int: U1[1] = 255 Hex: F1 01 FF U2[1] = 65535 Hex: E1 02 FF FF U4[1] = 4294967295 ## SECS Data Item Definitions This section provides definitions for all standard SECS data items used in message formats. ### A **ABS** - Absolute Position (F4, F8) - Absolute position coordinate **ACCESSMODE** - Access Mode (U1) - 0: Read only - 1: Read/Write - 2: Write only **ACDS** - Alarm Collection Definition Send (various) - Alarm collection definition data **ACKA** - Acknowledge (B[1]) - General acknowledge code **ACKC10** - Terminal Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error **ACKC13** - Data Set Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Data set already exists - 3: No space available **ACKC15** - Recipe Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error - 2: Recipe already exists - 3: No space available **ACKC3** - Carrier Acknowledge Code (B[1]) - 0: Completed successfully - 1: Command does not exist - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists **ACKC5** - Alarm Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error **ACKC6** - Data Collection Acknowledge Code (B[1]) - 0: Acknowledged - 1: Error **ACKC7** - Process Program Acknowledge Code (B[1]) - 0: Accepted - 1: Permission not granted - 2: Length error - 3: Matrix overflow - 4: PPID not found - 5: Mode unsupported - 6: Communication not available - 7: Busy **ACKC7A** - Alternative Process Program Acknowledge Code (B[1]) - Same as ACKC7 with additional codes **AGENT** - Agent Identifier (A) - Software agent identification **ALCD** - Alarm Code (B[1]) - Bit 0: Alarm Set (1) or Clear (0) - Bit 7: Alarm (1) or Warning (0) **ALED** - Alarm Enable/Disable (B[1]) - 128 (0x80): Enable - 0: Disable **ALID** - Alarm ID (U1, U2, U4, or A) - Unique identifier for alarm **ALIDVECTOR** - Alarm ID Vector (List of ALID) - Collection of alarm identifiers **ALTX** - Alarm Text (A[120]) - Descriptive text for alarm ### B-C **ASSGNID** - Assignment ID (A) - Unique assignment identifier **ATTRDATA** - Attribute Data (various) - Data value for object attribute **ATTRID** - Attribute ID (U1, U2, U4, or A) - Identifier for object attribute **ATTRRELN** - Attribute Relation (U1) - Relationship type between attributes **AUTOCLEAR_DISABLE** - Auto Clear Disable (BOOLEAN) - Disable automatic clearing **AUTOCLOSE** - Auto Close (BOOLEAN) - Automatic closing flag **AUTOPOST_DISABLE** - Auto Post Disable (BOOLEAN) - Disable automatic posting **BCDS** - Binary Collection Definition Send (B) - Binary collection definition data **BCEQU** - Binary Collection Equipment (B) - Equipment binary collection data **BINLT** - Binary Data (B) - Binary data content **BLKDEF** - Block Definition (various) - Definition of data block structure **BPD** - Bytes Per Die (U2) - Number of bytes per die **BYTMAX** - Maximum Bytes (U4) - Maximum byte count **CAACK** - Carrier Action Acknowledge (B[1]) - 0: Completed successfully - 1: Command does not exist - 2: Cannot perform now - 3: At least one parameter invalid **CARRIERACTION** - Carrier Action (U1) - 1: Load - 2: Unload - 3: Transfer - 4: Map - 5: Clamp - 6: Unclamp **CARRIERID** - Carrier ID (A) - Unique identifier for carrier **CARRIERSPEC** - Carrier Specification (various) - Carrier specification data **CATTRDATA** - Carrier Attribute Data (various) - Data for carrier attribute **CATTRID** - Carrier Attribute ID (U1, U2, U4, or A) - Identifier for carrier attribute **CCEACK** - Collection Event Change Acknowledge (B[1]) - Collection event change response **CCODE** - Command Code (A) - Command identifier string **CEED** - Collection Event Enable/Disable (BOOLEAN) - Enable or disable collection event **CEID** - Collection Event ID (U1, U2, U4, or A) - Unique identifier for collection event **CEIDSTART** - Collection Event ID Start (CEID) - Starting collection event ID **CEIDSTOP** - Collection Event ID Stop (CEID) - Stopping collection event ID **CENAME** - Collection Event Name (A) - Name of collection event **CEPACK** - Collection Event Parameter Acknowledge (B[1]) - Collection event parameter response **CEPVAL** - Collection Event Parameter Value (various) - Value of collection event parameter **CHKINFO** - Check Information (A) - Information for checking/validation **CKPNT** - Checkpoint (A) - Process checkpoint identifier **CMDA** - Command Acknowledge (B[1]) - Command acknowledgment **CMDMAX** - Command Maximum (U2) - Maximum command value **CNAME** - Collection Name (A) - Name of data collection **COACK** - Control Job Command Acknowledge (B[1]) - Control job command response **COLCT** - Collection Count (U2) - Number of items in collection **COLHDR** - Collection Header (various) - Header information for collection **COMMACK** - Communication Acknowledge (B[1]) - 0: Accepted - 1: Denied, Try Again - 2: Denied, Permission Not Granted **COMPARISONOPERATOR** - Comparison Operator (U1) - 0: Equal - 1: Not equal - 2: Less than - 3: Less than or equal - 4: Greater than - 5: Greater than or equal **CONDITION** - Condition (A) - Condition specification **COPYID** - Copy ID (A) - Identifier for copy operation **CPACK** - Command Parameter Acknowledge (various) - Command parameter acknowledgment **CPNAME** - Command Parameter Name (A) - Name of command parameter **CPVAL** - Command Parameter Value (various) - Value of command parameter ### D-E **CSAACK** - Carrier Slot Assignment Acknowledge (B[1]) - Carrier slot assignment response **CTLJOBCMD** - Control Job Command (A) - Control job command string **CTLJOBID** - Control Job ID (A) - Unique identifier for control job **DATA** - Data (various) - Generic data field **DATAACK** - Data Acknowledge (B[1]) - Data acknowledgment **DATAID** - Data ID (U1, U2, U4, or A) - Unique identifier for data **DATALENGTH** - Data Length (U1, U2, U4) - Length of data in bytes **DATASEG** - Data Segment (B) - Segment of larger data **DATASRC** - Data Source (A) - Source of data **DATLC** - Data Location (A) - Location of data **DELRSPSTAT** - Delete Response Status (B[1]) - Status of delete operation **DIRRSPSTAT** - Directory Response Status (B[1]) - Status of directory operation **DRACK** - Define Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one RPTID already defined - 4: Denied, At least one VID does not exist **DRRACK** - Define Report Request Acknowledge (B[1]) - Define report request response **DSID** - Data Set ID (U1, U2, U4, or A) - Unique identifier for data set **DSNAME** - Data Set Name (A) - Name of data set **DSPER** - Data Sample Period (U1, U2, U4) - Sampling period for data collection **DUTMS** - Device Under Test Milliseconds (U4) - Time in milliseconds for device test **DVNAME** - Discrete Variable Name (A) - Name of discrete variable **DVVAL** - Discrete Variable Value (various) - Value of discrete variable **DVVALNAME** - Discrete Variable Value Name (A) - Name for discrete variable value **EAC** - Equipment Acknowledge Code (B[1]) - 0: Accepted - 1: Denied, At least one constant does not exist - 2: Denied, Busy - 3: Denied, At least one constant out of range **ECDEF** - Equipment Constant Default (various) - Default value for equipment constant **ECID** - Equipment Constant ID (U1, U2, U4, or A) - Unique identifier for equipment constant **ECMAX** - Equipment Constant Maximum (various) - Maximum value for equipment constant **ECMIN** - Equipment Constant Minimum (various) - Minimum value for equipment constant **ECNAME** - Equipment Constant Name (A) - Name of equipment constant **ECV** - Equipment Constant Value (various) - Value of equipment constant **EDID** - Equipment ID (U1, U2, U4, or A) - Unique identifier for equipment **EMID** - Equipment Module ID (A) - Identifier for equipment module **EPD** - Equipment Parameter Data (various) - Equipment parameter information **EQID** - Equipment ID (A) - Equipment identifier **EQNAME** - Equipment Name (A) - Name of equipment **EQUSERID** - Equipment User ID (A) - User identifier for equipment access **ERACK** - Enable/Disable Event Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, At least one CEID does not exist - 2: Denied, Busy **ERRCODE** - Error Code (U2) - Numeric error code **ERRTEXT** - Error Text (A) - Descriptive error text **ERRW7** - Error W7 (B[1]) - W7-specific error code **EVNTSRC** - Event Source (A) - Source of event **EVNTSRC2** - Event Source 2 (A) - Secondary event source **EXID** - Exception ID (U4) - Exception identifier **EXMESSAGE** - Exception Message (A) - Exception message text **EXRECVRA** - Exception Recovery Action (A) - Recovery action for exception **EXTYPE** - Exception Type (U1) - Type of exception ### F-L **FCNID** - Function ID (B[1]) - SECS function identifier **FFROT** - Flat Finder Rotation (F4) - Rotation angle for flat finder **FILDAT** - File Data (B) - File content data **FNLOC** - Final Location (A) - Final destination location **FRMLEN** - Frame Length (U2) - Length of data frame **GETRSPSTAT** - Get Response Status (B[1]) - Status of get operation **GOILACK** - Go Online Acknowledge (B[1]) - Go online response **GRANT** - Grant Code (B[1]) - 0: Granted - 1: Busy, try again - 2: No space **GRANT6** - Grant Code 6 (B[1]) - Stream 6 specific grant code **GRNT1** - Grant 1 (B[1]) - First grant code **GRXLACK** - Get Recipe Acknowledge (B[1]) - Recipe get acknowledgment **HANDLE** - Handle (A) - Object handle identifier **HCACK** - Host Command Acknowledge (B[1]) - 0: Acknowledged - 1: Invalid command - 2: Cannot perform now - 3: At least one parameter invalid - 4: Acknowledge after completion - 5: Rejected, already in desired condition - 6: No such object exists **HOACK** - Host Online Acknowledge (B[1]) - Host online acknowledgment **HOCANCELACK** - Host Online Cancel Acknowledge (B[1]) - Host online cancel response **HOCMDNAME** - Host Online Command Name (A) - Name of host online command **HOHALTACK** - Host Online Halt Acknowledge (B[1]) - Host online halt response **IACDS** - Input Alarm Collection Definition Send (various) - Input alarm collection definition **IBCDS** - Input Binary Collection Definition Send (B) - Input binary collection definition **IDTYP** - ID Type (B[1]) - 0: Data ID - 1: Equipment ID **INPTN** - Input Pattern (A) - Input pattern specification **ITEMACK** - Item Acknowledge (B[1]) - Item operation acknowledgment **ITEMERROR** - Item Error (A) - Error information for item **ITEMID** - Item ID (A) - Unique identifier for item **ITEMINDEX** - Item Index (U4) - Index position of item **ITEMLENGTH** - Item Length (U4) - Length of item data **ITEMPART** - Item Part (various) - Part of larger item **ITEMPARTCOUNT** - Item Part Count (U4) - Number of parts in item **ITEMPARTLENGTH** - Item Part Length (U4) - Length of item part **ITEMTYPE** - Item Type (U1) - Type classification of item **ITEMTYPESUPPORT** - Item Type Support (B[1]) - Support indicator for item type **ITEMVERSION** - Item Version (A) - Version of item **JOBACTION** - Job Action (U1) - Action to perform on job **LENGTH** - Length (U1, U2, U4) - Generic length value **LIMITACK** - Limit Acknowledge (B[1]) - Limit operation acknowledgment **LIMITID** - Limit ID (A) - Identifier for limit **LIMITMAX** - Limit Maximum (various) - Maximum limit value **LIMITMIN** - Limit Minimum (various) - Minimum limit value **LINKID** - Link ID (A) - Identifier for link **LOC** - Location (A) - General location identifier **LOCID** - Location ID (A) - Specific location identifier **LOWERDB** - Lower Deadband (various) - Lower deadband value **LRACK** - Link Report Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one CEID already defined - 4: Denied, At least one CEID does not exist - 5: Denied, At least one RPTID does not exist **LVACK** - Limit Value Acknowledge (B[1]) - Limit value acknowledgment ### M-P **MAPER** - Map Error (U1) - Map operation error code **MAPFT** - Map Format (U1) - Format of map data **MAXNUMBER** - Maximum Number (U4) - Maximum numeric value **MAXTIME** - Maximum Time (U4) - Maximum time value **MCINDEX** - Multi-Collection Index (U2) - Index for multi-collection **MDACK** - Mode Data Acknowledge (B[1]) - Mode data acknowledgment **MDLN** - Model Number (A[20]) - Equipment model designation **MEXP** - Message Expected (B[1]) - Expected message indicator **MF** - Message Format (U1) - Format of message **MHEAD** - Message Header (B[10]) - Complete 10-byte SECS message header **MID** - Message ID (U1, U2, U4, or A) - Message identifier **MIDAC** - Message ID Acknowledge (B[1]) - Message ID acknowledgment **MIDRA** - Message ID Response Acknowledge (B[1]) - Message ID response acknowledgment **MLCL** - Multi-Level Collection List (various) - Multi-level collection data **MMODE** - Machine Mode (U1) - Current machine operating mode **NACDS** - New Alarm Collection Definition Send (various) - New alarm collection definition **NBCDS** - New Binary Collection Definition Send (B) - New binary collection definition **NULBC** - Null Byte Count (U1) - Count of null bytes **OBJACK** - Object Acknowledge (B[1]) - Object operation acknowledgment **OBJCMD** - Object Command (A) - Command for object **OBJID** - Object ID (A) - Unique identifier for object **OBJSPEC** - Object Specification (A) - Object specification string **OBJTOKEN** - Object Token (A) - Token for object access **OBJTYPE** - Object Type (A) - Type classification of object **OCEACK** - Object Collection Event Acknowledge (B[1]) - Object collection event response **OFLACK** - Offline Acknowledge (B[1]) - 0: Offline Accepted - 1: Offline Not Allowed **ONLACK** - Online Acknowledge (B[1]) - 0: Online Accepted - 1: Online Not Allowed **OPEID** - Operation Event ID (A) - Identifier for operation event **OPETYPE** - Operation Event Type (U1) - Type of operation event **OPID** - Operation ID (A) - Unique operation identifier **ORLOC** - Origin Location (A) - Origin location identifier **OUTPTN** - Output Pattern (A) - Output pattern specification **PARAMNAME** - Parameter Name (A) - Name of parameter **PARAMVAL** - Parameter Value (various) - Value of parameter **PDEATTRIBUTE** - Process Data Element Attribute (various) - Process data element attribute **PDEATTRIBUTENAME** - Process Data Element Attribute Name (A) - Name of process data element attribute **PDEATTRIBUTEVALUE** - Process Data Element Attribute Value (various) - Value of process data element attribute **PDEREF** - Process Data Element Reference (A) - Reference to process data element **PECEACK** - Process Event Collection Enable Acknowledge (B[1]) - Process event collection enable response **PECRSLT** - Process Event Collection Result (various) - Result of process event collection **PFCD** - Process Function Code (U1) - Function code for process **PGRPACTION** - Port Group Action (U1) - Action for port group **PODID** - Point of Delivery ID (A) - Identifier for delivery point **PORTACTION** - Port Action (U1) - Action for port **PORTGRPNAME** - Port Group Name (A) - Name of port group **PPARM** - Process Parameter (various) - Process parameter value **PPBODY** - Process Program Body (A or B) - Content of process program **PPGNT** - Process Program Grant (B[1]) - Process program grant response **PPID** - Process Program ID (A) - Unique identifier for process program **PRAXI** - Process Axis (A) - Process axis identifier **PRCMDNAME** - Process Command Name (A) - Name of process command **PRCPREEXECHK** - Process Pre-Execution Check (B[1]) - Pre-execution check flag **PRDCT** - Product (A) - Product identifier **PREACK** - Process Recipe Acknowledge (B[1]) - Process recipe acknowledgment **PREVENTID** - Process Event ID (A) - Process event identifier **PRJOBID** - Process Job ID (A) - Process job identifier **PRJOBMILESTONE** - Process Job Milestone (A) - Process job milestone **PRJOBSPACE** - Process Job Space (A) - Process job space allocation **PRMTRLORDER** - Process Material Order (U2) - Order of process material **PRPAUSEEVENTID** - Process Pause Event ID (A) - Event ID for process pause **PRPROCESSSTART** - Process Process Start (A) - Process start identifier **PRRECIPEMETHOD** - Process Recipe Method (A) - Process recipe method **PRSTATE** - Process State (U1) - Current state of process **PSRACK** - Process Start Request Acknowledge (B[1]) - Process start request response **PSREACK** - Process State Request Acknowledge (B[1]) - Process state request response **PTN** - Port Number (U1) - Port identification number ### Q-Z **QPRKEACK** - Query Process Recipe Key Acknowledge (B[1]) - Query process recipe key response **QREACK** - Query Recipe Acknowledge (B[1]) - Query recipe response **QRXLEACK** - Query Recipe Exclude Acknowledge (B[1]) - Query recipe exclude response **QUA** - Quality (U1) - Quality indicator **RAC** - Report Acknowledge (B[1]) - Report acknowledgment **RCMD** - Remote Command (A) - Remote command string **RCPATTRDATA** - Recipe Attribute Data (various) - Recipe attribute data **RCPATTRID** - Recipe Attribute ID (A) - Recipe attribute identifier **RCPBODY** - Recipe Body (A or B) - Recipe content **RCPBODYA** - Recipe Body A (A) - Recipe body in ASCII format **RCPCLASS** - Recipe Class (A) - Classification of recipe **RCPCMD** - Recipe Command (A) - Recipe command **RCPDEL** - Recipe Delete (A) - Recipe deletion identifier **RCPDESCLTH** - Recipe Description Length (U2) - Length of recipe description **RCPDESCNM** - Recipe Description Name (A) - Recipe description name **RCPDESCTIME** - Recipe Description Time (A) - Recipe description timestamp **RCPID** - Recipe ID (A) - Unique recipe identifier **RCPNAME** - Recipe Name (A) - Name of recipe **RCPNEWID** - Recipe New ID (A) - New recipe identifier **RCPOWCODE** - Recipe Owner Code (A) - Recipe ownership code **RCPPARNM** - Recipe Parameter Name (A) - Name of recipe parameter **RCPPARRULE** - Recipe Parameter Rule (A) - Rule for recipe parameter **RCPPARVAL** - Recipe Parameter Value (various) - Value of recipe parameter **RCPRENAME** - Recipe Rename (A) - New name for recipe **RCPSECCODE** - Recipe Security Code (A) - Security code for recipe **RCPSECNM** - Recipe Section Name (A) - Name of recipe section **RCPSPEC** - Recipe Specification (A) - Recipe specification **RCPSTAT** - Recipe Status (U1) - Status of recipe **RCPUPDT** - Recipe Update (A) - Recipe update identifier **RCPVERS** - Recipe Version (A) - Version of recipe **READLN** - Read Length (U4) - Length to read **REAPER** - Report Error (U1) - Report error code **RECLEN** - Record Length (U2) - Length of record **REFP** - Reference Point (F4, F8) - Reference coordinate point **REPGSZ** - Report Group Size (U2) - Size of report group **RESOLUTION** - Resolution (F4) - Measurement resolution **RESPDESTAT** - Response Delete Status (B[1]) - Status of response deletion **RESPEC** - Request Specification (A) - Request specification string **RETAINRECIPE_DISABLE** - Retain Recipe Disable (BOOLEAN) - Disable recipe retention **RETICLEID** - Reticle ID (A) - Reticle identifier **RETICLEID2** - Reticle ID 2 (A) - Secondary reticle identifier **RETPLACEINSTR** - Reticle Place Instruction (A) - Instruction for reticle placement **RETREMOVEINSTR** - Reticle Remove Instruction (A) - Instruction for reticle removal **REVID** - Revision ID (A) - Revision identifier **RIC** - Report Item Count (U2) - Count of items in report **RMACK** - Resource Manager Acknowledge (B[1]) - Resource manager acknowledgment **RMCHGSTAT** - Resource Manager Change Status (B[1]) - Resource manager change status **RMCHGTYPE** - Resource Manager Change Type (U1) - Type of resource manager change **RMDATASIZE** - Resource Manager Data Size (U4) - Size of resource manager data **RMGRNT** - Resource Manager Grant (B[1]) - Resource manager grant **RMNEWNS** - Resource Manager New Namespace (A) - New namespace for resource manager **RMNSCMD** - Resource Manager Namespace Command (A) - Resource manager namespace command **RMNSSPEC** - Resource Manager Namespace Specification (A) - Resource manager namespace specification **RMRECSPEC** - Resource Manager Record Specification (A) - Resource manager record specification **RMREQUESTOR** - Resource Manager Requestor (A) - Resource manager requestor identifier **RMSEGSPEC** - Resource Manager Segment Specification (A) - Resource manager segment specification **RMSPACE** - Resource Manager Space (A) - Resource manager space identifier **RMSPWD** - Resource Manager Space Password (A) - Password for resource manager space **RMSUSERID** - Resource Manager Space User ID (A) - User ID for resource manager space **ROWCT** - Row Count (U2) - Number of rows **RPMACK** - Report Parameter Acknowledge (B[1]) - Report parameter acknowledgment **RPSEL** - Report Selection (U1) - Report selection criteria **RPTID** - Report ID (U1, U2, U4, or A) - Unique identifier for report **RPTOC** - Report Occurrence (U2) - Report occurrence count **RQCMD** - Request Command (A) - Request command string **RRACK** - Recipe Request Acknowledge (B[1]) - Recipe request acknowledgment **RRACK_S20** - Recipe Request Acknowledge S20 (B[1]) - S20 specific recipe request acknowledgment **RSACK** - Recipe Send Acknowledge (B[1]) - Recipe send acknowledgment **RSDA** - Recipe Send Data A (A) - Recipe send data in ASCII **RSDC** - Recipe Send Data C (various) - Recipe send data compressed **RSINF** - Recipe Send Information (A) - Recipe send information **RSPACK** - Reset Spool Acknowledge (B[1]) - Reset spool acknowledgment **RTSRSPSTAT** - Real Time Status Response Status (B[1]) - Real time status response **RTYPE** - Report Type (U1) - Type of report **RecID** - Record ID (A) - Record identifier **SDACK** - Send Data Acknowledge (B[1]) - Send data acknowledgment **SDBIN** - Send Data Binary (B) - Binary data to send **SENDRSPSTAT** - Send Response Status (B[1]) - Status of send response **SEQNUM** - Sequence Number (U4) - Sequence number **SFCD** - Stream Function Code (U2) - SECS stream and function code **SHEAD** - Stream Header (B[4]) - Stream header information **SLOTID** - Slot ID (U1, U2) - Slot identifier **SMPLN** - Sample Number (U1, U2, U4) - Sample identification number **SOFTREV** - Software Revision (A[20]) - Software revision string **SPAACK** - Substrate Position Acknowledge (B[1]) - Substrate position acknowledgment **SPD** - Substrate Position Data (various) - Substrate position information **SPID** - Substrate Position ID (A) - Substrate position identifier **SPNAME** - Substrate Position Name (A) - Name of substrate position **SPR** - Substrate Position Reference (A) - Reference for substrate position **SPVAL** - Substrate Position Value (various) - Value of substrate position **SSAACK** - Substrate Status Acknowledge (B[1]) - Substrate status acknowledgment **SSACK** - Substrate Send Acknowledge (B[1]) - Substrate send acknowledgment **SSCMD** - Substrate Send Command (A) - Substrate send command **STATUS** - Status (U1) - General status indicator **STATUSTXT** - Status Text (A) - Status description text **STIME** - Start Time (A) - Start time stamp **STRACK** - Substrate Track (A) - Substrate tracking identifier **STRID** - Stream ID (B[1]) - SECS stream identifier **STRP** - Map Strip Data (various) - Wafer map strip data **SV** - Status Variable (various) - Status variable value **SV0** - Status Variable 0 (various) - First status variable **SVCACK** - Service Acknowledge (B[1]) - Service acknowledgment **SVCNAME** - Service Name (A) - Name of service **SVID** - Status Variable ID (U1, U2, U4, or A) - Status variable identifier **SVNAME** - Status Variable Name (A) - Name of status variable **TARGETID** - Target ID (A) - Target identifier **TARGETPDE** - Target Process Data Element (A) - Target process data element **TARGETSPEC** - Target Specification (A) - Target specification **TBLACK** - Table Acknowledge (B[1]) - Table operation acknowledgment **TBLCMD** - Table Command (A) - Table command **TBLELT** - Table Element (various) - Table element data **TBLID** - Table ID (A) - Table identifier **TBLTYP** - Table Type (U1) - Type of table **TCID** - Transaction Control ID (A) - Transaction control identifier **TEXT** - Text (A) - Text data **TIAACK** - Trace Initialize Acknowledge (B[1]) - 0: Acknowledged - 1: Denied, Insufficient space - 2: Denied, Invalid format - 3: Denied, At least one SVID does not exist - 4: Denied, Busy **TIACK** - Time Acknowledge (B[1]) - 0: Acknowledged - 1: Error **TID** - Terminal ID (B[1]) - Terminal identifier **TIME** - Time (A[16]) - Time stamp in format \"YYMMDDhhmmss[cc]\" **TIMESTAMP** - Time Stamp (A) - General timestamp **TOTSMP** - Total Samples (U1, U2, U4) - Total number of samples **TRACK** - Track (A) - Track identifier **TRANSFERSIZE** - Transfer Size (U4) - Size of data transfer **TRATOMCID** - Transaction Atomic ID (A) - Atomic transaction identifier **TRAUTOD** - Transaction Auto Delete (BOOLEAN) - Auto delete transaction flag **TRAUTOSTART** - Transaction Auto Start (BOOLEAN) - Auto start transaction flag **TRCMDNAME** - Transaction Command Name (A) - Name of transaction command **TRDIR** - Transfer Direction (U1) - Direction of transfer **TRID** - Trace Request ID (U1, U2, U4, or A) - Trace request identifier **TRJOBID** - Transaction Job ID (A) - Transaction job identifier **TRJOBMS** - Transaction Job Milestone (A) - Transaction job milestone **TRJOBNAME** - Transaction Job Name (A) - Name of transaction job **TRLINK** - Transaction Link (A) - Transaction link identifier **TRLOCATION** - Transaction Location (A) - Transaction location **TROBJNAME** - Transaction Object Name (A) - Name of transaction object **TROBJTYPE** - Transaction Object Type (A) - Type of transaction object **TRPORT** - Transfer Port (U1) - Transfer port number **TRPTNR** - Transfer Partner (A) - Transfer partner identifier **TRPTPORT** - Transfer Point Port (U1) - Transfer point port **TRRCP** - Transaction Recipe (A) - Transaction recipe **TRROLE** - Transaction Role (A) - Role in transaction **TRTYPE** - Transfer Type (U1) - Type of transfer **TSIP** - Time Stamp Input (A) - Input timestamp **TSOP** - Time Stamp Output (A) - Output timestamp **TTC** - Total Transfer Count (U4) - Total count of transfers **TYPEID** - Type ID (A) - Type identifier **UID** - User ID (A) - User identifier **UNFLEN** - Unformatted Length (U4) - Length of unformatted data **UNITS** - Units (A) - Measurement units **UPPERDB** - Upper Deadband (various) - Upper deadband value **V** - Variable Value (various) - Generic variable value **VERID** - Version ID (A) - Version identifier **VERIFYDEPTH** - Verify Depth (U1) - Depth of verification **VERIFYRSPSTAT** - Verify Response Status (B[1]) - Verification response status **VERIFYSUCCESS** - Verify Success (BOOLEAN) - Verification success flag **VERIFYTYPE** - Verify Type (U1) - Type of verification **VID** - Variable ID (U1, U2, U4, or A) - Variable identifier **VLAACK** - Variable Limit Attribute Acknowledge (B[1]) - Variable limit attribute acknowledgment **WRACK** - Write Acknowledge (B[1]) - Write operation acknowledgment **XDIES** - X Dies (U2) - Number of dies in X direction **XYPOS** - XY Position (F4, F8) - X,Y coordinate position **YDIES** - Y Dies (U2) - Number of dies in Y direction Hex: D1 04 FF FF FF FF Signed Int: I1[1] = -128 Hex: 81 01 80 I2[1] = -32768 Hex: 71 01 80 00 Float: F4[1] = 3.14159 Hex: B1 04 40 49 0F D0 List: {L:2 item1 item2} Hex: 01 02 ... ... Empty List: {L:0} Hex: 01 00","title":"Data Type Format Examples"},{"location":"secs/#implementation-guidelines","text":"","title":"Implementation Guidelines"},{"location":"secs/#1-message-validation","text":"Verify message length consistency Validate stream/function combinations Check wait bit appropriateness Ensure proper system bytes uniqueness","title":"1. Message Validation"},{"location":"secs/#2-response-handling","text":"Always respond to messages with wait bit set Use same system bytes in response Implement proper timeout handling Handle transaction aborts gracefully","title":"2. Response Handling"},{"location":"secs/#3-state-management","text":"Track connection state (Not Connected, Selected, Online) Implement proper state transitions Handle communication establishment sequence Manage heartbeat and linktest mechanisms","title":"3. State Management"},{"location":"secs/#4-error-handling","text":"Implement S9 error messages for invalid requests Use proper reject codes Log communication errors appropriately Provide meaningful error descriptions","title":"4. Error Handling"},{"location":"secs/#5-data-encoding","text":"Use appropriate SECS-II data types Handle endianness correctly Validate data item structure Support multi-byte length fields when needed","title":"5. Data Encoding"},{"location":"secs/#references","text":"SEMI E5 Specification SEMI E37 HSMS Generic Services SEMI E30 GEM (Generic Equipment Model)","title":"References"},{"location":"supported/","text":"What is SSH (Secure Shell)? \u00b6 Secure Shell, often referred to as SSH or Secure Socket Shell, is a protocol that facilitates secure connections to remote computers or servers through a text-based interface. Once an SSH connection is successfully established, a shell session begins, allowing users to interact with and control the remote server by executing commands from their local computer. Widely used by system and network administrators, SSH is an essential tool for managing remote servers and machines. Its robust security features make it indispensable for anyone needing to remotely access and manage computers with a high degree of security. How does SSH work? \u00b6 Both the client and server actively contribute to establishing a secure SSH communication channel. The process involves several key components and steps: Client-Side Component: The client-side component is a software application or program used to connect to a remote machine. It initiates the connection by sending the remote host's information to the server. Once the provided credentials are verified, the program establishes an encrypted connection, allowing secure communication. Server-Side Component: On the server side, an SSH daemon continuously listens on a designated TCP/IP port (typically port 22, the default for SSH) for incoming connection requests. When a client attempts to connect via this port, the SSH daemon responds by sharing the supported software and protocol versions. The default protocol version for SSH communication is version 2, as version 1 has been deprecated due to security vulnerabilities. Authentication: During the connection process, the client provides authentication credentials to the server. This can include methods like username/password combinations, cryptographic key pairs, or multi-factor authentication. Once the server verifies the credentials, it establishes a new encrypted session for secure communication.","title":"What is SSH (Secure Shell)?"},{"location":"supported/#what-is-ssh-secure-shell","text":"Secure Shell, often referred to as SSH or Secure Socket Shell, is a protocol that facilitates secure connections to remote computers or servers through a text-based interface. Once an SSH connection is successfully established, a shell session begins, allowing users to interact with and control the remote server by executing commands from their local computer. Widely used by system and network administrators, SSH is an essential tool for managing remote servers and machines. Its robust security features make it indispensable for anyone needing to remotely access and manage computers with a high degree of security.","title":"What is SSH (Secure Shell)?"},{"location":"supported/#how-does-ssh-work","text":"Both the client and server actively contribute to establishing a secure SSH communication channel. The process involves several key components and steps: Client-Side Component: The client-side component is a software application or program used to connect to a remote machine. It initiates the connection by sending the remote host's information to the server. Once the provided credentials are verified, the program establishes an encrypted connection, allowing secure communication. Server-Side Component: On the server side, an SSH daemon continuously listens on a designated TCP/IP port (typically port 22, the default for SSH) for incoming connection requests. When a client attempts to connect via this port, the SSH daemon responds by sharing the supported software and protocol versions. The default protocol version for SSH communication is version 2, as version 1 has been deprecated due to security vulnerabilities. Authentication: During the connection process, the client provides authentication credentials to the server. This can include methods like username/password combinations, cryptographic key pairs, or multi-factor authentication. Once the server verifies the credentials, it establishes a new encrypted session for secure communication.","title":"How does SSH work?"}]}