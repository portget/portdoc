{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Port \u00b6 The Port program operates on a real-time database approach. By using this program, users can effortlessly share messages across multiple applications, facilitating simpler and more scalable development. Please see the documentation lincense The Requirements \u00b6 os : windows 7+ / windows server 2003+ memory : minimum 32GB frameworks : .Net Framework 4.5+ Download URL \u00b6 VERSION STABLE URL v0.0.1 -BETA No Port.7z v0.0.1 - BETA Repository \u00b6 Create new repository \u00b6 port new [repository-name] Tip The repository name cannot contain special characters. It follows the directory naming rules provided by the operating system. Repository layout \u00b6 port.toml # The configuration file. groupA/ # The group directory. sample1.msg # The message file sample2.msg # The message file sample3.msg # The message file custom.enum # The custom enum file ... # Other files. Message File \u00b6 message item format like this [key] [datatype] [property...] [key] - unique key in the message group [datatype] - text | num [property] - relation,backup,rule,frame message property list \u00b6 name description relation Real-time synchronization and messaging are handled within the corresponding external library. For more details, please refer to the Relation documentation. backup Changes are saved to the backup database as they occur, ensuring that values are restored upon application restart. and values are not propagated relation messages during program execution. frame Can specify a frame key value to manage subsequent frames by their numerical key values. rule Can specify rules to manage the values of corresponding messages. sample1.msg \u00b6 sayHelloMessage1 text relation:relation1.GetArgs1 backup:true sayHelloMessage2 text relation:relation1.GetArgs2 frame:1 sayTFalse enum.TFalse ... Tip message document do not using special characters. Enum File \u00b6 Enums are particularly useful when you have a fixed set of values that a variable can take, such as days of the week, months of the year, or status codes. They help make your code more expressive, self-documenting, and less error-prone because you're working with named constants instead of raw integer values. enum item format like this [key] [item-name:number_key] [item-name:number_key] [key] - unique key in the enum message [item-name] - name by enum-item [property] - unique key in enum value custom.enum \u00b6 TFalse True:0 False:1 FTrue False:0 True:1 OnOff On:0 Off:1 OffOn Off:1 On:1 Commands \u00b6 Repository \u00b6 port push - push project to repository port pull - pull project from repository Tip The application runs based on the values stored in the repository. The push action must precede the application startup. Subsequently, users can perform a pull action at any desired moment to restore the repository. Application \u00b6 port run [repository-name] - run application from repository port kill - terminated current application Tip port application must be start portlib services application Message \u00b6 port set [group-key] [message-key] [set-value] - set the message value to current repository port set groupA sayHelloMessage1 Hello? [set-ok] port get [group-key] [message-key] - get the message value to current repository port get groupA sayHelloMessage1 [Hello?]","title":"Welcome to Port"},{"location":"#welcome-to-port","text":"The Port program operates on a real-time database approach. By using this program, users can effortlessly share messages across multiple applications, facilitating simpler and more scalable development. Please see the documentation lincense","title":"Welcome to Port"},{"location":"#the-requirements","text":"os : windows 7+ / windows server 2003+ memory : minimum 32GB frameworks : .Net Framework 4.5+","title":"The Requirements"},{"location":"#download-url","text":"VERSION STABLE URL v0.0.1 -BETA No Port.7z v0.0.1 - BETA","title":"Download URL"},{"location":"#repository","text":"","title":"Repository"},{"location":"#create-new-repository","text":"port new [repository-name] Tip The repository name cannot contain special characters. It follows the directory naming rules provided by the operating system.","title":"Create new repository"},{"location":"#repository-layout","text":"port.toml # The configuration file. groupA/ # The group directory. sample1.msg # The message file sample2.msg # The message file sample3.msg # The message file custom.enum # The custom enum file ... # Other files.","title":"Repository layout"},{"location":"#message-file","text":"message item format like this [key] [datatype] [property...] [key] - unique key in the message group [datatype] - text | num [property] - relation,backup,rule,frame","title":"Message File"},{"location":"#message-property-list","text":"name description relation Real-time synchronization and messaging are handled within the corresponding external library. For more details, please refer to the Relation documentation. backup Changes are saved to the backup database as they occur, ensuring that values are restored upon application restart. and values are not propagated relation messages during program execution. frame Can specify a frame key value to manage subsequent frames by their numerical key values. rule Can specify rules to manage the values of corresponding messages.","title":"message property list"},{"location":"#sample1msg","text":"sayHelloMessage1 text relation:relation1.GetArgs1 backup:true sayHelloMessage2 text relation:relation1.GetArgs2 frame:1 sayTFalse enum.TFalse ... Tip message document do not using special characters.","title":"sample1.msg"},{"location":"#enum-file","text":"Enums are particularly useful when you have a fixed set of values that a variable can take, such as days of the week, months of the year, or status codes. They help make your code more expressive, self-documenting, and less error-prone because you're working with named constants instead of raw integer values. enum item format like this [key] [item-name:number_key] [item-name:number_key] [key] - unique key in the enum message [item-name] - name by enum-item [property] - unique key in enum value","title":"Enum File"},{"location":"#customenum","text":"TFalse True:0 False:1 FTrue False:0 True:1 OnOff On:0 Off:1 OffOn Off:1 On:1","title":"custom.enum"},{"location":"#commands","text":"","title":"Commands"},{"location":"#repository_1","text":"port push - push project to repository port pull - pull project from repository Tip The application runs based on the values stored in the repository. The push action must precede the application startup. Subsequently, users can perform a pull action at any desired moment to restore the repository.","title":"Repository"},{"location":"#application","text":"port run [repository-name] - run application from repository port kill - terminated current application Tip port application must be start portlib services application","title":"Application"},{"location":"#message","text":"port set [group-key] [message-key] [set-value] - set the message value to current repository port set groupA sayHelloMessage1 Hello? [set-ok] port get [group-key] [message-key] - get the message value to current repository port get groupA sayHelloMessage1 [Hello?]","title":"Message"},{"location":"about/","text":"About \u00b6","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"license/","text":"Lincense \u00b6 Copyright \u00a9 Portget. All rights reserved Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#lincense","text":"Copyright \u00a9 Portget. All rights reserved Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Lincense"},{"location":"reference/","text":"API reference \u00b6 Introduction \u00b6 In addition to the in-memory invocation method, the Port application inherently provides a REST API. It offers the following advantages: 1.Resource-centric: Every resource has a unique identifier (URI), and each resource is accessed through its unique URI. 2.Utilization of HTTP Methods: Manipulation of resources is done using HTTP methods (GET, POST, PUT, DELETE). For example, GET is used for retrieving resources, and POST is used for creating new resources. 3.State Transfer of Representations: Clients send representations of the resources they request to the server, which processes them and responds with appropriate status codes. 4.Statelessness: Servers handle each request independently, without storing any client state. This enhances scalability and performance. 5.Caching: Servers can cache responses to improve client performance. Authentication \u00b6 When authentication functionality is activated within the HOST application, service-calling applications are required to request a key from the HOST before making API calls to ensure proper authentication and access to services. This security feature remains disabled by default. GET \u00b6 POST \u00b6 PUT \u00b6 DELETE \u00b6 OS Second Third Windows x64 2 3","title":"API Reference"},{"location":"reference/#api-reference","text":"","title":"API reference"},{"location":"reference/#introduction","text":"In addition to the in-memory invocation method, the Port application inherently provides a REST API. It offers the following advantages: 1.Resource-centric: Every resource has a unique identifier (URI), and each resource is accessed through its unique URI. 2.Utilization of HTTP Methods: Manipulation of resources is done using HTTP methods (GET, POST, PUT, DELETE). For example, GET is used for retrieving resources, and POST is used for creating new resources. 3.State Transfer of Representations: Clients send representations of the resources they request to the server, which processes them and responds with appropriate status codes. 4.Statelessness: Servers handle each request independently, without storing any client state. This enhances scalability and performance. 5.Caching: Servers can cache responses to improve client performance.","title":"Introduction"},{"location":"reference/#authentication","text":"When authentication functionality is activated within the HOST application, service-calling applications are required to request a key from the HOST before making API calls to ensure proper authentication and access to services. This security feature remains disabled by default.","title":"Authentication"},{"location":"reference/#get","text":"","title":"GET"},{"location":"reference/#post","text":"","title":"POST"},{"location":"reference/#put","text":"","title":"PUT"},{"location":"reference/#delete","text":"OS Second Third Windows x64 2 3","title":"DELETE"},{"location":"relation/","text":"What's RELATION? \u00b6 API Refrence \u00b6 How can make realtion library \u00b6 this is li test .Net (>= 8.0) \u00b6 dotnet add package PortLib MODEL NAME TODO Description CommRelationModel a b CommRelationModel a b CommRelationModel a b CommRelationModel a b [C#] /// <summary> /// Communication Relation Object /// you must be implement IsConnected, Endpoint /// </summary> public class Relation : CommRelationModel { private SerialPort serialPort = new SerialPort(); public Relation() { } // Just use here public string Name; // Check for connected protected override bool IsConnected() { return ((this.serialPort != null) && (this.serialPort.IsOpen)); } // port relation set Endpoint like COM13,9600,8,1,0,0 / TCP [Message] public override IEndpoint Endpoint { set { if (value.Binding(this.serialPort)) { this.serialPort.Open(); } } get { return this.address; } } [Message] public string GetPower { get { var message = Encoding.ASCII.GetBytes(\"power?\\r\\n\"); this.serialPort.Write(message, 0, message.Length); Thread.Sleep(300); var recv = new byte[0xff]; var n = this.serialPort.Read(recv, 0, recv.Length); if (n != 0) { return Encoding.ASCII.GetString(recv); } return \"Unknown\"; } } [Message] public string PowerOn { set { var message = Encoding.ASCII.GetBytes(\"powerOn\\r\\n\"); this.serialPort.Write(message, 0, message.Length); } } }","title":"Relation"},{"location":"relation/#whats-relation","text":"","title":"What's RELATION?"},{"location":"relation/#api-refrence","text":"","title":"API Refrence"},{"location":"relation/#how-can-make-realtion-library","text":"this is li test","title":"How can make realtion library"},{"location":"relation/#net-80","text":"dotnet add package PortLib MODEL NAME TODO Description CommRelationModel a b CommRelationModel a b CommRelationModel a b CommRelationModel a b [C#] /// <summary> /// Communication Relation Object /// you must be implement IsConnected, Endpoint /// </summary> public class Relation : CommRelationModel { private SerialPort serialPort = new SerialPort(); public Relation() { } // Just use here public string Name; // Check for connected protected override bool IsConnected() { return ((this.serialPort != null) && (this.serialPort.IsOpen)); } // port relation set Endpoint like COM13,9600,8,1,0,0 / TCP [Message] public override IEndpoint Endpoint { set { if (value.Binding(this.serialPort)) { this.serialPort.Open(); } } get { return this.address; } } [Message] public string GetPower { get { var message = Encoding.ASCII.GetBytes(\"power?\\r\\n\"); this.serialPort.Write(message, 0, message.Length); Thread.Sleep(300); var recv = new byte[0xff]; var n = this.serialPort.Read(recv, 0, recv.Length); if (n != 0) { return Encoding.ASCII.GetString(recv); } return \"Unknown\"; } } [Message] public string PowerOn { set { var message = Encoding.ASCII.GetBytes(\"powerOn\\r\\n\"); this.serialPort.Write(message, 0, message.Length); } } }","title":".Net (&gt;= 8.0)"}]}